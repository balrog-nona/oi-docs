{
    "docs": [
        {
            "location": "/",
            "text": "Welcome to OpenIndiana Docs!\n\n  \n\n  \nHome of the \nHipster Handbook\n\n  \n\n  \nThis site contains \nDRAFT\n documentation which may contain errors!\n\n  \nPlease help us improve and expand this site. See the \nContrib\n section for more details about joining the OpenIndiana Documentation Team.\n\n\n\n\n\n\n  \n\n    \nwww.openindiana.org\n\n    \nPrimary web presence\n\n  \n\n  \n\n    \nwiki.openindiana.org\n\n    \nDevelopment and community information\n\n  \n\n  \n\n    \nillumos Man Pages\n\n    \nMan pages for the core source tree\n\n  \n\n  \n\n    \nOpenIndiana issue tracker\n\n    \nOpenIndiana bug tracker\n\n  \n\n\n\n\n\n\n  \n\n    \n#openindiana (Freenode)\n\n    \n\n      \n\n        \nEnd user support IRC channel\n\n        \nChannel Logs\n\n      \n\n    \n\n  \n\n  \n\n    \n#oi-dev (Freenode)\n\n    \n\n      \n\n        \nDevelopment team IRC channel\n\n        \nChannel Logs\n\n      \n\n    \n\n  \n\n  \n\n    \nOpenIndiana Mailing Lists\n\n    \n\n      \n\n        \nEnd user support mailing list\n\n        \nsearchable archives\n\n        \nDevelopment team mailing list\n\n        \nsearchable archives",
            "title": "Home"
        },
        {
            "location": "/misc/openindiana/",
            "text": "About OpenIndiana\n\n\nWhat is the OpenIndiana Operating System?\n\n\nOpenIndiana is an advanced enterprise OS from the Sun branch of the Unix-like family tree, and as such it can sometimes seem quite complex (\nSpending several decades running important servers can do that to an OS!\n).\nBut with a little help and information, once you know the basics, you'll find it actually has some of the nicest and friendliest tools around.\nAs with most Unix-like operating systems it can be completely controlled via a Command Line Interface shell, but it also supports a windowing GUI system.\n\n\nFrom the CLI, it supports a number of different shells, the two main ones being ksh93 and Bash.\nIt also supports the original \nSunOS\n \nSVR4\n commands, Like the command and syntax familiar to BSD users, and a large portion of the GNU userland commands that most Linux users are familiar with.\nYou can select any or all of those different commands from your shell configuration, giving you the environment you are most happy with.\n\n\nBy default, the windowing GUI system is based on the popular Mate system.\n\n\nOpenIndiana also has a powerful package manager, IPS, for updating and installing new software.\nAlthough powerful, it may seem complicated at first; but, help is provided in these pages.\n\n\nOpenIndiana supports a wide range of popular software, including the main open source Internet server software, databases, Internet client software, development languages and tools and more.\nThe Popular Software provides some links and notes about some of the community favorites, but many more are supported.\nIn addition to the Hipster IPS repositories, OpenIndiana can also use the \nSFE\n and \npkgsrc\n package repositories which provide additional software options.\n\n\nWhat is OpenIndiana Project?\n\n\nThe OpenIndiana project is the open source community which develops, maintains, and supports the \nOpenIndiana\n distribution, an \nIllumos\n based Unix-like operating system derived from OpenSolaris.\nThe purpose of the OpenIndiana Project is to ensure the continued availability of an openly developed distribution based on OpenSolaris.\nThe OpenIndiana project is also a continuation of the collaborative effort and community spirit of the \nOpenSolaris project\n.\n\n\nFor a comprehensive history of the OpenSolaris project, see Jim Grisanzio's \nOpenSolaris timeline\n.\n\n\nWhy is it called OpenIndiana?\n\n\nOpenIndiana obtains its name from Project Indiana, an open source effort by Sun Microsystems (now Oracle Corporation) to produce OpenSolaris, a community developed Unix-like distribution based on Sun Solaris.\nProject Indiana was led by Ian Murdock, founder of the Debian Linux Distribution.\n\n\nHow are OpenIndiana and Illumos related?\n\n\nThe \nIllumos project\n is the open source community which develops, maintains, and supports \nillumos-gate\n, the core software used by the OpenIndiana distribution.\nSimilar to a BSD \nsrc\n tree, illumos-gate includes the illumos kernel, along with many of the device drivers, core libraries, and system utilities.\n\n\nTo form a complete distribution, the OpenIndiana project combines illumos-gate with \noi-userland\n, and with other free and open-source software.\nThis melding of software from many different open-source projects is similar to how Linux distributions use the Linux kernel along with software from the GNU and various other open source projects.\n\n\nHow does OpenIndiana differ from OpenSolaris?\n\n\nSome of the differences between OpenIndiana and OpenSolaris can be characterized as follows:\n\n\n\n\nSun's OS/NET consolidation (closed by Oracle) has been replaced with \nillumos-gate\n.\n\n\nMany of the original OpenSolaris software consolidations have been reorganized into a single oi-userland consolidation.\n\n\nOracle's Sun Studio has been replaced with the open source GNU GCC compiler.\n\n\nXVM (XEN) has been replaced with the illumos-kvm port.\n\n\n\n\n \nNOTE:\n\n\n\nOpenIndiana Hipster's transition from Sun Studio to GCC has resulted in a discontinuance of C++ ABI compatibility with previous releases of OpenIndiana, Oracle Solaris, and OpenSolaris.\n\n\n\nHow does OpenIndiana compare to BSD or Linux?\n\n\nAll of these operating systems follow the Unix paradigm and contain tools and commands which bear a similar resemblance, although specific feature sets and command usage may be dissimilar.\nIf you are coming to OpenIndiana from either BSD or Linux, you will quickly learn these differences.\nIn no time at all, you'll feel right at home working with OpenIndiana's tools and commands.\n\n\nWhat features does OpenIndiana have?\n\n\nOpenIndiana contains the following enterprise class features and more:\n\n\n\n\n\n\n\n\nFeature\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nZFS\n\n\nZFS File System and Volume Manager\n\n\n\n\n\n\nDTrace\n\n\nDynamic Tracing Framework - (System Introspection)\n\n\n\n\n\n\nCrossbow\n\n\nNetwork Virtualization and Resource Control\n\n\n\n\n\n\nSMF\n\n\nService Management Facility\n\n\n\n\n\n\nFMA\n\n\nFault Management Architecture\n\n\n\n\n\n\nCOMSTAR\n\n\nCommon Multiprotocol SCSI TARget - (ISCSI Target Framework)\n\n\n\n\n\n\nKVM\n\n\nKernel Virtual Machine - (Operating System Virtualization)\n\n\n\n\n\n\nZones\n\n\nOS Level Virtualized Application Containers\n\n\n\n\n\n\nTime-Slider\n\n\nAutomated ZFS Snapshots and Rollbacks\n\n\n\n\n\n\nRBAC\n\n\nRole-Based Access Control\n\n\n\n\n\n\nIPMP\n\n\nIP Network Multipathing\n\n\n\n\n\n\nDLMP\n\n\nData Link Multipathing\n\n\n\n\n\n\n\n\nWhat is the OpenIndiana release schedule?\n\n\nApproximately every six months, the OpenIndiana project releases a snapshot of the Hipster rolling release branch.\nIdeally suited for both workstations and servers, simply choose the installer type which best serves your needs.\n\n\n\n\n\n\n\n\nWorkstation\n\n\nServer\n\n\n\n\n\n\n\n\n\n\nLive installer (Gnome desktop)\n\n\nText installer (command line console)\n\n\n\n\n\n\n\n\n \nNOTE:\n\n\n\n\n\n\nThe legacy oi-dev-151x branch is no longer maintained.\n\n\nWhile upgrades to Hipster are possible, the most trouble free method is to perform a clean install.\n\n\n\n\n\n\n\n \nCAUTION:\n\n\n\nHipster is a rapid development branch where software versions are frequently updated.\nWhile every package is tested to ensure stability, caution is nevertheless warranted when deploying Hipster into mission critical production environments.\n\n\n\nWhat are the recommended hardware specifications?\n\n\n\n\n\n\n\n\nCPU\n\n\nDisk Space\n\n\nMemory (RAM)\n\n\n\n\n\n\n\n\n\n\n64 Bit\n\n\n20GB (or more)\n\n\n2GB (or more)\n\n\n\n\n\n\n\n\n \nNOTE:\n\n\n\n\n\n\nFor the best performance (and to reduce the possibility of disk swapping), allocate 4GB RAM or more.\n\n\nFor desktops, ensure total system memory (RAM + swap) are at least 4GB or greater.\n\n\nThe default size of the OpenIndiana swap file is 50% of installed memory.\n\n\nMinimum and maximum default swap allocations are 512MB and 32GB respectively.\n\n\n\n\n\n\n\n\n\n\n\nDoes OpenIndiana support internationalization and localization?\n\n\nYes, when installing OpenIndiana, you may choose from 47 different keyboard layouts and 22 different languages.\n\n\nDoes OpenIndiana provide security and bug fixes?\n\n\nYes, absolutely.\nFor the actively maintained Hipster rolling release, the OpenIndiana project seeks to ensure all known flaws are quickly mitigated.\nFor this effort to succeed, we ask our user base to diligently bring security and bugfix concerns to our attention by submitting a ticket with the \nOpenIndiana Bug Tracker\n.\n\n\nWhere can I download OpenIndiana Hipster?\n\n\nPrimary download mirror (London, England):\n\n\n\n\nISO's and USB Images\n\n\nTorrents\n\n\n\n\nAlternate mirrors (Asia, Europe, and North America)\n\n\n\n\nhttps://wiki.openindiana.org/oi/Mirrors\n\n\n\n\nIf you wish to purchase a ready made DVD or USB drive there is also \nOSDISC.COM\n.\n\n\n \nNOTE:\n\n\n\nFor detailed information about creating a bootable OpenIndiana DVD or USB flash drive, please consult the following sections of the OpenIndiana Handbook:\n\n\n\n\nCreating a bootable OpenIndiana DVD\n\n\nCreating a bootable OpenIndiana USB flash drive\n\n\n\n\n\n\nWhat package manager does OpenIndiana use?\n\n\nOpenIndiana uses the network based \nImage Packaging System (IPS)\n.\nFor those coming to OpenIndiana from BSD or Linux, the IPS package manager will be an easy transition.\nYou may also continue to use the legacy \npkgadd/pkgrm\n commands.\n\n\n \nNOTE:\n\n\n\nThe OpenIndiana distribution provides a basic set of packages, along with some extras.\nThere are also 3rd party repositories which provide additional packages.\nIf you wish to contribute by helping to expand package availability, please read further down about how to get involved with the OpenIndiana project.\n\n\n\nThe following IPS repositories are available:\n\n\n\n\n\n\n\n\nRepository Name\n\n\nRepository URL\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nopenindiana.org\n\n\nhttps://pkg.openindiana.org/hipster\n\n\nHipster primary package repository\n\n\n\n\n\n\nhipster-encumbered\n\n\nhttps://pkg.openindiana.org/hipster-encumbered\n\n\nHipster encumbered license packages\n\n\n\n\n\n\nlocalhostoih\n\n\nhttp://sfe.opencsw.org/localhostoih\n\n\n3rd party \nSpec Files Extra (SFE)\n packages\n\n\n\n\n\n\n\n\nAdding a new publisher\n\n\npkg set-publisher -g repository_url repository_name\n\n\nChanging an existing publisher\n\n\npkg set-publisher \\\n-G http://pkg.openindiana.org/hipster-2015 \\\n-g https://pkg.openindiana.org/hipster openindiana.org\n\n\n\n\nFor further information about using the IPS \npkg\n command consult the \nGetting Started\n section of the OpenIndiana Handbook as well as the pkg\n1\n man page included with OpenIndiana Hipster.\n\n\nWhat books are available to help with learning OpenIndiana?\n\n\nThere are several resources which will assist you with learning to use OpenIndiana.\nWhile somewhat dated now, these resources are largely still relevant.\n\n\n\n\n\n\nPro OpenSolaris\n\n\n\n\nA gentle and well written introduction to OpenSolaris. It weighs in at 250 pages.\n\n\n\n\n\n\n\n\nOpenSolaris Bible\n\n\n\n\nA much larger and more comprehensive reference book of nearly 1000 Pages.\n\n\n\n\n\n\n\n\nThe illumos bookshelf\n\n\n\n\nUpdated for illumos, the illumos bookshelf consists of several original OpenSolaris advanced administration and development titles.\n\n\n\n\n\n\n\n\nOpenSolaris 2009.06 Docs\n\n\n\n\nOriginally released by the OpenSolaris project, this collection consists of over 40 titles ranging from development to systems administration.\n\n\n\n\n\n\n\n\n \nNOTE:\n\n\n\n\nAn effort currently exists within the OpenIndiana community to review these books and provide errata.\nA longer term goal is to use the errata to revise and condense these titles into a significantly smaller collection which more closely follows the current development state of OpenIndiana Hipster.\n\n\nThe documentation team is also working to produce an updated OpenIndiana handbook as well as task based tutorials.\nIf you wish to participate in this effort, please indicate your interest via the IRC channels or the mailing lists.\n\n\n\n\n\nHow do I get involved with the OpenIndiana Project?\n\n\nAs a community supported open source software project, the success and future of OpenIndiana depends entirely on you.\nWhile the most important thing is to download and begin using OpenIndiana, there are many different ways to contribute.\nTell your friends and coworkers about OpenIndiana as well, and don't forget to report all issues to our bug tracker.\n\n\nBelow is a list of OpenIndiana community resources you may find helpful:\n\n\n\n\n\n\n\n\nResource\n\n\nURL\n\n\n\n\n\n\n\n\n\n\nUser Support IRC channel\n\n\n#openindiana on irc.freenode.net\n\n\n\n\n\n\nDevelopment IRC channel\n\n\n#oi-dev on irc.freenode.net\n\n\n\n\n\n\nDocumentation IRC channel\n\n\n#oi-documentation on irc.freenode.net\n\n\n\n\n\n\nOpenIndiana Mailing Lists\n\n\nhttps://openindiana.org/mailman\n\n\n\n\n\n\nOpenIndiana Wiki\n\n\nhttps://wiki.openindiana.org\n\n\n\n\n\n\nOpenIndiana Bug Tracker\n\n\nhttp://www.illumos.org/projects/openindiana/issues\n\n\n\n\n\n\n\n\nHere are just some of the many ways you may contribute:\n\n\n\n\nArtwork\n\n\nDevelopment\n\n\nDocumentation - Handbook, Tutorials, News articles, etc.\n\n\nEvangelism - blogging about OpenIndiana, attending conferences, etc.\n\n\nPackaging - oi-userland, 3rd party packaging (SFE, etc.)\n\n\nRelease engineering\n\n\nTranslation\n\n\nUtilities maintenance\n\n\nWebsite Maintenance\n\n\n\n\nJust ask on the IRC channels or mailing lists about how you may contribute.\n\n\nFor additional details, including links to our GitHub source repositories, please see: \nhttps://www.openindiana.org/community/getting-involved\n\n\nDoes OpenIndiana provide a SPARC release?\n\n\nOpenIndiana Hipster is not currently available for the SPARC platform.\n\n\nIn regards to the creation of a SPARC port of OpenIndiana Hipster, there have been periodic discussions on the \nOpenIndiana mailing lists\n.\nIf you would like to see SPARC become a supported platform, please help us by joining the \nOpenIndiana community\n.\n\n\nHistorical SPARC releases\n\n\nIn 2009, the OpenSolaris project released an \nOpenSolaris text install ISO\n, and much more recently, there was work done by Adam Glasgall who produced an \nunofficial SPARC text install ISO\n based on oi-dev-151-a8.\n\n\nillumos distributions with SPARC releases\n\n\nThe following illumos based distributions are known to support the SPARC platform:\n\n\n\n\nDilos\n\n\nOpenSCXE\n\n\nTribblix\n\n\n\n\nCommercial distributions with SPARC releases\n\n\nFor production use on modern SPARC hardware, there is also commercial \nOracle Solaris\n\n\nWhat are the licensing terms for OpenIndiana?\n\n\nOpenIndiana is composed of software from multiple different sources, each with its own licensing terms.\n\n\nHere is a list of the most commonly used licenses:\n\n\n\n\nCommon Development and Distribution License (CDDL-1.0)\n\n\nPUBLIC DOCUMENTATION LICENSE (PDL), Version 1.01\n\n\nThe MIT License (MIT)\n\n\nThe BSD 2-Clause License\n\n\nGNU licenses",
            "title": "About OpenIndiana"
        },
        {
            "location": "/misc/openindiana/#about-openindiana",
            "text": "",
            "title": "About OpenIndiana"
        },
        {
            "location": "/misc/openindiana/#what-is-the-openindiana-operating-system",
            "text": "OpenIndiana is an advanced enterprise OS from the Sun branch of the Unix-like family tree, and as such it can sometimes seem quite complex ( Spending several decades running important servers can do that to an OS! ).\nBut with a little help and information, once you know the basics, you'll find it actually has some of the nicest and friendliest tools around.\nAs with most Unix-like operating systems it can be completely controlled via a Command Line Interface shell, but it also supports a windowing GUI system.  From the CLI, it supports a number of different shells, the two main ones being ksh93 and Bash.\nIt also supports the original  SunOS   SVR4  commands, Like the command and syntax familiar to BSD users, and a large portion of the GNU userland commands that most Linux users are familiar with.\nYou can select any or all of those different commands from your shell configuration, giving you the environment you are most happy with.  By default, the windowing GUI system is based on the popular Mate system.  OpenIndiana also has a powerful package manager, IPS, for updating and installing new software.\nAlthough powerful, it may seem complicated at first; but, help is provided in these pages.  OpenIndiana supports a wide range of popular software, including the main open source Internet server software, databases, Internet client software, development languages and tools and more.\nThe Popular Software provides some links and notes about some of the community favorites, but many more are supported.\nIn addition to the Hipster IPS repositories, OpenIndiana can also use the  SFE  and  pkgsrc  package repositories which provide additional software options.",
            "title": "What is the OpenIndiana Operating System?"
        },
        {
            "location": "/misc/openindiana/#what-is-openindiana-project",
            "text": "The OpenIndiana project is the open source community which develops, maintains, and supports the  OpenIndiana  distribution, an  Illumos  based Unix-like operating system derived from OpenSolaris.\nThe purpose of the OpenIndiana Project is to ensure the continued availability of an openly developed distribution based on OpenSolaris.\nThe OpenIndiana project is also a continuation of the collaborative effort and community spirit of the  OpenSolaris project .  For a comprehensive history of the OpenSolaris project, see Jim Grisanzio's  OpenSolaris timeline .",
            "title": "What is OpenIndiana Project?"
        },
        {
            "location": "/misc/openindiana/#why-is-it-called-openindiana",
            "text": "OpenIndiana obtains its name from Project Indiana, an open source effort by Sun Microsystems (now Oracle Corporation) to produce OpenSolaris, a community developed Unix-like distribution based on Sun Solaris.\nProject Indiana was led by Ian Murdock, founder of the Debian Linux Distribution.",
            "title": "Why is it called OpenIndiana?"
        },
        {
            "location": "/misc/openindiana/#how-are-openindiana-and-illumos-related",
            "text": "The  Illumos project  is the open source community which develops, maintains, and supports  illumos-gate , the core software used by the OpenIndiana distribution.\nSimilar to a BSD  src  tree, illumos-gate includes the illumos kernel, along with many of the device drivers, core libraries, and system utilities.  To form a complete distribution, the OpenIndiana project combines illumos-gate with  oi-userland , and with other free and open-source software.\nThis melding of software from many different open-source projects is similar to how Linux distributions use the Linux kernel along with software from the GNU and various other open source projects.",
            "title": "How are OpenIndiana and Illumos related?"
        },
        {
            "location": "/misc/openindiana/#how-does-openindiana-differ-from-opensolaris",
            "text": "Some of the differences between OpenIndiana and OpenSolaris can be characterized as follows:   Sun's OS/NET consolidation (closed by Oracle) has been replaced with  illumos-gate .  Many of the original OpenSolaris software consolidations have been reorganized into a single oi-userland consolidation.  Oracle's Sun Studio has been replaced with the open source GNU GCC compiler.  XVM (XEN) has been replaced with the illumos-kvm port.     NOTE:  \nOpenIndiana Hipster's transition from Sun Studio to GCC has resulted in a discontinuance of C++ ABI compatibility with previous releases of OpenIndiana, Oracle Solaris, and OpenSolaris.",
            "title": "How does OpenIndiana differ from OpenSolaris?"
        },
        {
            "location": "/misc/openindiana/#how-does-openindiana-compare-to-bsd-or-linux",
            "text": "All of these operating systems follow the Unix paradigm and contain tools and commands which bear a similar resemblance, although specific feature sets and command usage may be dissimilar.\nIf you are coming to OpenIndiana from either BSD or Linux, you will quickly learn these differences.\nIn no time at all, you'll feel right at home working with OpenIndiana's tools and commands.",
            "title": "How does OpenIndiana compare to BSD or Linux?"
        },
        {
            "location": "/misc/openindiana/#what-features-does-openindiana-have",
            "text": "OpenIndiana contains the following enterprise class features and more:     Feature  Description      ZFS  ZFS File System and Volume Manager    DTrace  Dynamic Tracing Framework - (System Introspection)    Crossbow  Network Virtualization and Resource Control    SMF  Service Management Facility    FMA  Fault Management Architecture    COMSTAR  Common Multiprotocol SCSI TARget - (ISCSI Target Framework)    KVM  Kernel Virtual Machine - (Operating System Virtualization)    Zones  OS Level Virtualized Application Containers    Time-Slider  Automated ZFS Snapshots and Rollbacks    RBAC  Role-Based Access Control    IPMP  IP Network Multipathing    DLMP  Data Link Multipathing",
            "title": "What features does OpenIndiana have?"
        },
        {
            "location": "/misc/openindiana/#what-is-the-openindiana-release-schedule",
            "text": "Approximately every six months, the OpenIndiana project releases a snapshot of the Hipster rolling release branch.\nIdeally suited for both workstations and servers, simply choose the installer type which best serves your needs.     Workstation  Server      Live installer (Gnome desktop)  Text installer (command line console)       NOTE:    The legacy oi-dev-151x branch is no longer maintained.  While upgrades to Hipster are possible, the most trouble free method is to perform a clean install.      CAUTION:  \nHipster is a rapid development branch where software versions are frequently updated.\nWhile every package is tested to ensure stability, caution is nevertheless warranted when deploying Hipster into mission critical production environments.",
            "title": "What is the OpenIndiana release schedule?"
        },
        {
            "location": "/misc/openindiana/#what-are-the-recommended-hardware-specifications",
            "text": "CPU  Disk Space  Memory (RAM)      64 Bit  20GB (or more)  2GB (or more)       NOTE:    For the best performance (and to reduce the possibility of disk swapping), allocate 4GB RAM or more.  For desktops, ensure total system memory (RAM + swap) are at least 4GB or greater.  The default size of the OpenIndiana swap file is 50% of installed memory.  Minimum and maximum default swap allocations are 512MB and 32GB respectively.",
            "title": "What are the recommended hardware specifications?"
        },
        {
            "location": "/misc/openindiana/#does-openindiana-support-internationalization-and-localization",
            "text": "Yes, when installing OpenIndiana, you may choose from 47 different keyboard layouts and 22 different languages.",
            "title": "Does OpenIndiana support internationalization and localization?"
        },
        {
            "location": "/misc/openindiana/#does-openindiana-provide-security-and-bug-fixes",
            "text": "Yes, absolutely.\nFor the actively maintained Hipster rolling release, the OpenIndiana project seeks to ensure all known flaws are quickly mitigated.\nFor this effort to succeed, we ask our user base to diligently bring security and bugfix concerns to our attention by submitting a ticket with the  OpenIndiana Bug Tracker .",
            "title": "Does OpenIndiana provide security and bug fixes?"
        },
        {
            "location": "/misc/openindiana/#where-can-i-download-openindiana-hipster",
            "text": "Primary download mirror (London, England):   ISO's and USB Images  Torrents   Alternate mirrors (Asia, Europe, and North America)   https://wiki.openindiana.org/oi/Mirrors   If you wish to purchase a ready made DVD or USB drive there is also  OSDISC.COM .    NOTE:  \nFor detailed information about creating a bootable OpenIndiana DVD or USB flash drive, please consult the following sections of the OpenIndiana Handbook:   Creating a bootable OpenIndiana DVD  Creating a bootable OpenIndiana USB flash drive",
            "title": "Where can I download OpenIndiana Hipster?"
        },
        {
            "location": "/misc/openindiana/#what-package-manager-does-openindiana-use",
            "text": "OpenIndiana uses the network based  Image Packaging System (IPS) .\nFor those coming to OpenIndiana from BSD or Linux, the IPS package manager will be an easy transition.\nYou may also continue to use the legacy  pkgadd/pkgrm  commands.    NOTE:  \nThe OpenIndiana distribution provides a basic set of packages, along with some extras.\nThere are also 3rd party repositories which provide additional packages.\nIf you wish to contribute by helping to expand package availability, please read further down about how to get involved with the OpenIndiana project.  The following IPS repositories are available:     Repository Name  Repository URL  Description      openindiana.org  https://pkg.openindiana.org/hipster  Hipster primary package repository    hipster-encumbered  https://pkg.openindiana.org/hipster-encumbered  Hipster encumbered license packages    localhostoih  http://sfe.opencsw.org/localhostoih  3rd party  Spec Files Extra (SFE)  packages",
            "title": "What package manager does OpenIndiana use?"
        },
        {
            "location": "/misc/openindiana/#adding-a-new-publisher",
            "text": "pkg set-publisher -g repository_url repository_name",
            "title": "Adding a new publisher"
        },
        {
            "location": "/misc/openindiana/#changing-an-existing-publisher",
            "text": "pkg set-publisher \\\n-G http://pkg.openindiana.org/hipster-2015 \\\n-g https://pkg.openindiana.org/hipster openindiana.org  For further information about using the IPS  pkg  command consult the  Getting Started  section of the OpenIndiana Handbook as well as the pkg 1  man page included with OpenIndiana Hipster.",
            "title": "Changing an existing publisher"
        },
        {
            "location": "/misc/openindiana/#what-books-are-available-to-help-with-learning-openindiana",
            "text": "There are several resources which will assist you with learning to use OpenIndiana.\nWhile somewhat dated now, these resources are largely still relevant.    Pro OpenSolaris   A gentle and well written introduction to OpenSolaris. It weighs in at 250 pages.     OpenSolaris Bible   A much larger and more comprehensive reference book of nearly 1000 Pages.     The illumos bookshelf   Updated for illumos, the illumos bookshelf consists of several original OpenSolaris advanced administration and development titles.     OpenSolaris 2009.06 Docs   Originally released by the OpenSolaris project, this collection consists of over 40 titles ranging from development to systems administration.       NOTE:   An effort currently exists within the OpenIndiana community to review these books and provide errata.\nA longer term goal is to use the errata to revise and condense these titles into a significantly smaller collection which more closely follows the current development state of OpenIndiana Hipster.  The documentation team is also working to produce an updated OpenIndiana handbook as well as task based tutorials.\nIf you wish to participate in this effort, please indicate your interest via the IRC channels or the mailing lists.",
            "title": "What books are available to help with learning OpenIndiana?"
        },
        {
            "location": "/misc/openindiana/#how-do-i-get-involved-with-the-openindiana-project",
            "text": "As a community supported open source software project, the success and future of OpenIndiana depends entirely on you.\nWhile the most important thing is to download and begin using OpenIndiana, there are many different ways to contribute.\nTell your friends and coworkers about OpenIndiana as well, and don't forget to report all issues to our bug tracker.  Below is a list of OpenIndiana community resources you may find helpful:     Resource  URL      User Support IRC channel  #openindiana on irc.freenode.net    Development IRC channel  #oi-dev on irc.freenode.net    Documentation IRC channel  #oi-documentation on irc.freenode.net    OpenIndiana Mailing Lists  https://openindiana.org/mailman    OpenIndiana Wiki  https://wiki.openindiana.org    OpenIndiana Bug Tracker  http://www.illumos.org/projects/openindiana/issues     Here are just some of the many ways you may contribute:   Artwork  Development  Documentation - Handbook, Tutorials, News articles, etc.  Evangelism - blogging about OpenIndiana, attending conferences, etc.  Packaging - oi-userland, 3rd party packaging (SFE, etc.)  Release engineering  Translation  Utilities maintenance  Website Maintenance   Just ask on the IRC channels or mailing lists about how you may contribute.  For additional details, including links to our GitHub source repositories, please see:  https://www.openindiana.org/community/getting-involved",
            "title": "How do I get involved with the OpenIndiana Project?"
        },
        {
            "location": "/misc/openindiana/#does-openindiana-provide-a-sparc-release",
            "text": "OpenIndiana Hipster is not currently available for the SPARC platform.  In regards to the creation of a SPARC port of OpenIndiana Hipster, there have been periodic discussions on the  OpenIndiana mailing lists .\nIf you would like to see SPARC become a supported platform, please help us by joining the  OpenIndiana community .",
            "title": "Does OpenIndiana provide a SPARC release?"
        },
        {
            "location": "/misc/openindiana/#historical-sparc-releases",
            "text": "In 2009, the OpenSolaris project released an  OpenSolaris text install ISO , and much more recently, there was work done by Adam Glasgall who produced an  unofficial SPARC text install ISO  based on oi-dev-151-a8.",
            "title": "Historical SPARC releases"
        },
        {
            "location": "/misc/openindiana/#illumos-distributions-with-sparc-releases",
            "text": "The following illumos based distributions are known to support the SPARC platform:   Dilos  OpenSCXE  Tribblix",
            "title": "illumos distributions with SPARC releases"
        },
        {
            "location": "/misc/openindiana/#commercial-distributions-with-sparc-releases",
            "text": "For production use on modern SPARC hardware, there is also commercial  Oracle Solaris",
            "title": "Commercial distributions with SPARC releases"
        },
        {
            "location": "/misc/openindiana/#what-are-the-licensing-terms-for-openindiana",
            "text": "OpenIndiana is composed of software from multiple different sources, each with its own licensing terms.  Here is a list of the most commonly used licenses:   Common Development and Distribution License (CDDL-1.0)  PUBLIC DOCUMENTATION LICENSE (PDL), Version 1.01  The MIT License (MIT)  The BSD 2-Clause License  GNU licenses",
            "title": "What are the licensing terms for OpenIndiana?"
        },
        {
            "location": "/misc/oi-docs/",
            "text": "About OpenIndiana Docs\n\n\nThis website and its content uses a number of different technologies:\n\n\n\n\nPage content written in the \nMarkdown\n text markup language.\n\n\nText markup transformed to HTML using the \nMkDocs\n documentation framework/static site generator.\n\n\nWebsite styled using the \nBootstrap\n CSS framework (more specifically the \nBootswatch\n Spacelab theme).\n\n\nSource code hosted in a \nGitHub\n repository.\n\n\nWebsite hosted on \nGitHub Pages\n\n\n\n\nHistory of OpenIndiana Docs\n\n\nThe current documentation revitalization effort began in late 2015.\nFor some time the project recognized it needed to do a better job of organizing and presenting end user documentation.\nJust as important, it also recognized how documentation needed to more accurately follow the development state of OpenIndiana Hipster.\n\n\nThe docs team began by looking at:\n\n\n\n\nThe current state of the OpenIndiana project's documentation.\n\n\nThe methods and toolkits used to create past and present documentation.\n\n\nHow other projects where approaching their systems documentation efforts.\n\n\n\n\nDocumentation revitalization effort goals\n\n\nAs a result of the aforementioned exercises, the team established the following goals:\n\n\n\n\nIncrease participation and lower the bar of entry by simplifying the documentation process.\n\n\nProvide well organized, technically accurate information in an aesthetically pleasing way.\n\n\nTreat docs like code (for example: using version control, continuous integration, etc.)\n\n\nMigrate all existing and future documentation to a simple text based markup.\n\n\nDeploy documentation via a static website generator.\n\n\nEmploy a dynamic \nmobile friendly\n CSS framework.\n\n\n\n\nTo this end, the team looked at several documentation oriented static site generators and selected MkDocs for its simplicity, ease of use, and professional quality output.\n\n\nUsing the OpenIndiana Docs website\n\n\nThe OI-DOCS website can be navigated in several ways:\n\n\n\n\nUsing the drop down menus from the top navigation bar.\n\n\nClicking the \nNext\n and \nPrevious\n buttons.\n\n\nUsing the table of contents found on the left or top side of each page.\n\n\nUsing the full text search function found in the top navigation bar.\n\n\n\n\n \nNOTE:\n\n\n\nThe table of contents lists top level sectional titles only.\n\n\nTo find lower level sectional titles, or to search for topics by keyword, please use the full text search function of the website.\nThe full text search will return a list of the sectional titles where the keyword has been found.\n\n\n\nContributing to OpenIndiana Docs\n\n\nFirst and foremost, we understand using development tools and techniques to write end user documentation is not for everyone.\nFor this reason, we're happy to accept your contribution in any format you wish to provide.\n\n\nAfter receiving your submission, we will review the document for conversion to markdown and subsequent incorporation into OpenIndiana Docs.\nContributions may be submitted in plain text, .doc, .docx, .odt, html, xml, latex, pdf, GitHub Gist, etc.\n\n\nIn summary, if you believe your contribution would be helpful to the greater OpenIndiana community, we'll be willing to review it.\nFor further information, please see the contribution pages found elsewhere on this site.\n\n\nProviding feedback\n\n\nCommunity feedback is critical to the growth and development of the OpenIndiana Docs website.\n\n\nTo make a suggestion or report a problem with a document, please make your request by submitting a \nGithub issue\n.\n\n\nThe docs team can be reached via email: \ndocs at openindiana.org\n.\n\n\nYou may also inquire via IRC:\n\n\n\n\n#openindiana (freenode)\n\n\n#oi-dev (freenode)",
            "title": "About OpenIndiana Docs"
        },
        {
            "location": "/misc/oi-docs/#about-openindiana-docs",
            "text": "This website and its content uses a number of different technologies:   Page content written in the  Markdown  text markup language.  Text markup transformed to HTML using the  MkDocs  documentation framework/static site generator.  Website styled using the  Bootstrap  CSS framework (more specifically the  Bootswatch  Spacelab theme).  Source code hosted in a  GitHub  repository.  Website hosted on  GitHub Pages",
            "title": "About OpenIndiana Docs"
        },
        {
            "location": "/misc/oi-docs/#history-of-openindiana-docs",
            "text": "The current documentation revitalization effort began in late 2015.\nFor some time the project recognized it needed to do a better job of organizing and presenting end user documentation.\nJust as important, it also recognized how documentation needed to more accurately follow the development state of OpenIndiana Hipster.  The docs team began by looking at:   The current state of the OpenIndiana project's documentation.  The methods and toolkits used to create past and present documentation.  How other projects where approaching their systems documentation efforts.",
            "title": "History of OpenIndiana Docs"
        },
        {
            "location": "/misc/oi-docs/#documentation-revitalization-effort-goals",
            "text": "As a result of the aforementioned exercises, the team established the following goals:   Increase participation and lower the bar of entry by simplifying the documentation process.  Provide well organized, technically accurate information in an aesthetically pleasing way.  Treat docs like code (for example: using version control, continuous integration, etc.)  Migrate all existing and future documentation to a simple text based markup.  Deploy documentation via a static website generator.  Employ a dynamic  mobile friendly  CSS framework.   To this end, the team looked at several documentation oriented static site generators and selected MkDocs for its simplicity, ease of use, and professional quality output.",
            "title": "Documentation revitalization effort goals"
        },
        {
            "location": "/misc/oi-docs/#using-the-openindiana-docs-website",
            "text": "The OI-DOCS website can be navigated in several ways:   Using the drop down menus from the top navigation bar.  Clicking the  Next  and  Previous  buttons.  Using the table of contents found on the left or top side of each page.  Using the full text search function found in the top navigation bar.     NOTE:  \nThe table of contents lists top level sectional titles only.  To find lower level sectional titles, or to search for topics by keyword, please use the full text search function of the website.\nThe full text search will return a list of the sectional titles where the keyword has been found.",
            "title": "Using the OpenIndiana Docs website"
        },
        {
            "location": "/misc/oi-docs/#contributing-to-openindiana-docs",
            "text": "First and foremost, we understand using development tools and techniques to write end user documentation is not for everyone.\nFor this reason, we're happy to accept your contribution in any format you wish to provide.  After receiving your submission, we will review the document for conversion to markdown and subsequent incorporation into OpenIndiana Docs.\nContributions may be submitted in plain text, .doc, .docx, .odt, html, xml, latex, pdf, GitHub Gist, etc.  In summary, if you believe your contribution would be helpful to the greater OpenIndiana community, we'll be willing to review it.\nFor further information, please see the contribution pages found elsewhere on this site.",
            "title": "Contributing to OpenIndiana Docs"
        },
        {
            "location": "/misc/oi-docs/#providing-feedback",
            "text": "Community feedback is critical to the growth and development of the OpenIndiana Docs website.  To make a suggestion or report a problem with a document, please make your request by submitting a  Github issue .  The docs team can be reached via email:  docs at openindiana.org .  You may also inquire via IRC:   #openindiana (freenode)  #oi-dev (freenode)",
            "title": "Providing feedback"
        },
        {
            "location": "/misc/conduct/",
            "text": "OpenIndiana Code of Conduct\n\n\nThis document provides community guidelines for a safe, respectful, productive, and collaborative place for any person who is willing to contribute to the OpenIndiana community.\nIt applies to all \"collaborative space\", which is defined as community communications channels (such as mailing lists, IRC, submitted patches, commit comments, etc.).\n\n\nCore principles and expectations:\n\n\n\n\nWe are respectful and appreciative towards peoples work, time, and effort.\n\n\nWe are tolerant of the right to have opposing views.\n\n\nWe recognize our public actions determine the public perception of the project.\n\n\nParticipants must ensure their language and actions are free from personal attacks and disparaging personal remarks.\n\n\nWhen interpreting the words and actions of others, participants should always assume good intentions.\n\n\nAlways seek to maintain a welcoming environment for new contributors.\n\n\nWelcome new people to the project and guide them in their contributions.\n\n\nGive them the time you were given when you first joined the community.\n\n\nAnd if you weren't given enough time please set a new example for others to live by.\n\n\n\n\n\n\nBe open and transparent so others can participate on an equal footing and contribute to the project in their own way.\n\n\nEveryone has something to contribute.\n\n\n\n\n\n\n\n\nWhat will not be tolerated:\n\n\n\n\nDiscrimination based on gender, race, nationality, sexuality, religion, age or physical disability.\n\n\nOpen hostility, and or abusive language.\n\n\nRepeated complaining (rehashing) of closed (decided) issues.\n\n\nParticipants who disrupt the collaborative space, or participate in a pattern of behavior which could be considered harassment.\n\n\nFilibustering - (replying with negative or opposing viewpoints to every post in a mailing list thread).\n\n\n\n\nReporting violations:\n\n\n\n\nViolations of the CoC should be reported to the distribution maintainers via \n.\n\n\nNeither reporters nor reported persons will, or should be, made public.\n\n\n\n\n\n\nUpon receipt of a problem report, the distribution maintainers will investigate the issue and determine whether it warrants further action.\n\n\nAny further action will be proportional to the severity of the problem.\n\n\n\n\n\n\n\n\nSources\n\n\n\n\nAdopted from the \nProject-FiFo Code of Conduct\n.\n\n\nFurther inspiration derived from:\n\n\nFreeBSD Code of Conduct\n\n\nOpenSolaris Values \n Code of Conduct\n\n\nSolicitations from the OpenIndiana community",
            "title": "OpenIndiana Code of Conduct"
        },
        {
            "location": "/misc/conduct/#openindiana-code-of-conduct",
            "text": "This document provides community guidelines for a safe, respectful, productive, and collaborative place for any person who is willing to contribute to the OpenIndiana community.\nIt applies to all \"collaborative space\", which is defined as community communications channels (such as mailing lists, IRC, submitted patches, commit comments, etc.).",
            "title": "OpenIndiana Code of Conduct"
        },
        {
            "location": "/misc/conduct/#core-principles-and-expectations",
            "text": "We are respectful and appreciative towards peoples work, time, and effort.  We are tolerant of the right to have opposing views.  We recognize our public actions determine the public perception of the project.  Participants must ensure their language and actions are free from personal attacks and disparaging personal remarks.  When interpreting the words and actions of others, participants should always assume good intentions.  Always seek to maintain a welcoming environment for new contributors.  Welcome new people to the project and guide them in their contributions.  Give them the time you were given when you first joined the community.  And if you weren't given enough time please set a new example for others to live by.    Be open and transparent so others can participate on an equal footing and contribute to the project in their own way.  Everyone has something to contribute.",
            "title": "Core principles and expectations:"
        },
        {
            "location": "/misc/conduct/#what-will-not-be-tolerated",
            "text": "Discrimination based on gender, race, nationality, sexuality, religion, age or physical disability.  Open hostility, and or abusive language.  Repeated complaining (rehashing) of closed (decided) issues.  Participants who disrupt the collaborative space, or participate in a pattern of behavior which could be considered harassment.  Filibustering - (replying with negative or opposing viewpoints to every post in a mailing list thread).",
            "title": "What will not be tolerated:"
        },
        {
            "location": "/misc/conduct/#reporting-violations",
            "text": "Violations of the CoC should be reported to the distribution maintainers via  .  Neither reporters nor reported persons will, or should be, made public.    Upon receipt of a problem report, the distribution maintainers will investigate the issue and determine whether it warrants further action.  Any further action will be proportional to the severity of the problem.",
            "title": "Reporting violations:"
        },
        {
            "location": "/misc/conduct/#sources",
            "text": "Adopted from the  Project-FiFo Code of Conduct .  Further inspiration derived from:  FreeBSD Code of Conduct  OpenSolaris Values   Code of Conduct  Solicitations from the OpenIndiana community",
            "title": "Sources"
        },
        {
            "location": "/misc/pdl/",
            "text": "PUBLIC DOCUMENTATION LICENSE\n\n\nVersion 1.01\n\n\nFor the OpenIndiana Project\n\n\n1.0 DEFINITIONS.\n\n\n1.1. \"Commercial Use\" means distribution or otherwise making the Documentation available to a third party.\n\n\n1.2. \"Contributor\" means a person or entity who creates or contributes to the creation of Modifications.\n\n\n1.3. \"Documentation\" means the Original Documentation or Modifications or the combination of the Original Documentation and Modifications, in each case including portions thereof.\n\n\n1.4. \"Editable Form\" means the preferred form of Documentation for making Modifications to such documentation. The Documentation can be in an electronic, compressed or archival form, provided the appropriate decompression or de-archiving software is widely available for no charge.\n\n\n1.5. \"Electronic Distribution Mechanism\" means a mechanism generally accepted for the electronic transfer of data.\n\n\n1.6. \"Initial Writer\" means the individual or entity identified as the Initial Writer in the notice required by the Appendix.\n\n\n1.7. \"Larger Work\" means a work which combines Documentation or portions thereof with documentation or other writings not governed by the terms of this License.\n\n\n1.8. \"License\" means this document.\n\n\n1.9. \"Modifications\" means any addition to or deletion from the substance or structure of either the Original Documentation or any previous Modifications, such as a translation, abridgment, condensation, or any other form in which the Original Documentation or previous Modifications may be recast, transformed or adapted. A work consisting of editorial revisions, annotations, elaborations, and other modifications which, as a whole represent an original work of authorship, is a Modification. For example, when Documentation is released as a series of documents, a Modification is:\n\n\nA. Any addition to or deletion from the contents of the Original Documentation or previous Modifications.\n\n\nB. Any new documentation that contains any part of the Original Documentation or previous Modifications.\n\n\n1.10. \"Original Documentation\" means documentation described as Original Documentation in the notice required by the Appendix, and which, at the time of its release under this License is not already Documentation governed by this License.\n\n\n1.11. \"You\" (or \"Your\") means an individual or a legal entity exercising rights under, and complying with all of the terms of, this License or a future version of this License issued under Section 5.0 (\"Versions of the License\"). For legal entities, \"You\" includes any entity which controls, is controlled by, or is under common control with You. For purposes of this definition, \"control\" means (a) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (b) ownership of more than fifty percent (50%) of the outstanding shares or beneficial ownership of such entity.\n\n\n2.0 LICENSE GRANTS.\n\n\n2.1 Initial Writer Grant.\n\n\nThe Initial Writer hereby grants You a world-wide, royalty-free, non-exclusive license to use, reproduce, prepare Modifications of, compile, publicly perform, publicly display, demonstrate, market, disclose and distribute the Documentation in any form, on any media or via any Electronic Distribution Mechanism or other method now known or later discovered, and to sublicense the foregoing rights to third parties through multiple tiers of sublicensees in accordance with the terms of this License.\nThe license rights granted in this Section 2.1 (\"Initial Writer Grant\") are effective on the date Initial Writer first distributes Original Documentation under the terms of this License.\n2.2. Contributor Grant.\n\n\nEach Contributor hereby grants You a world-wide, royalty-free, non-exclusive license to use, reproduce, prepare Modifications of, compile, publicly perform, publicly display, demonstrate, market, disclose and distribute the Documentation in any form, on any media or via any Electronic Distribution Mechanism or other method now known or later discovered, and to sublicense the foregoing rights to third parties through multiple tiers of sublicensees in accordance with the terms of this License.\n\n\nThe license rights granted in this Section 2.2 (\"Contributor Grant\") are effective on the date Contributor first makes Commercial Use of the Documentation.\n\n\n3.0 DISTRIBUTION OBLIGATIONS.\n\n\n3.1. Application of License.\n\n\nThe Modifications which You create or to which You contribute are governed by the terms of this License, including without limitation Section 2.2 (\"Contributor Grant\"). The Documentation may be distributed only under the terms of this License or a future version of this License released in accordance with Section 5.0 (\"Versions of the License\"), and You must include a copy of this License with every copy of the Documentation You distribute. You may not offer or impose any terms that alter or restrict the applicable version of this License or the recipients' rights hereunder. However, You may include an additional document offering the additional rights described in Section 3.5 (\"Required Notices\").\n\n\n3.2. Availability of Documentation.\n\n\nAny Modification which You create or to which You contribute must be made available publicly in Editable Form under the terms of this License via a fixed medium or an accepted Electronic Distribution Mechanism.\n\n\n3.3. Description of Modifications.\n\n\nAll Documentation to which You contribute must identify the changes You made to create that Documentation and the date of any change. You must include a prominent statement that the Modification is derived, directly or indirectly, from Original Documentation provided by the Initial Writer and include the name of the Initial Writer in the Documentation or via an electronic link that describes the origin or ownership of the Documentation. The foregoing change documentation may be created by using an electronic program that automatically tracks changes to the Documentation. You must make all such changes and required information publicly available for at least five years following release of the changed Documentation.\n\n\n3.4. Intellectual Property Matters.\n\n\nContributor represents that Contributor believes that Contributor's Modifications are Contributor's original creation(s), Contributor has sufficient rights to grant the rights conveyed by this License, or both of these statements are true.\n\n\n3.5. Required Notices.\n\n\nYou must duplicate the notice in the Appendix in each file of the Documentation. If it is not possible to put such notice in a particular Documentation file due to its structure, then You must include such notice in a location (such as a relevant directory) where a reader would be likely to look for such a notice, for example, via a hyperlink in each file of the Documentation that takes the reader to a page that describes the origin and ownership of the Documentation. If You created one or more Modification(s) You may add your name as a Contributor to the notice described in the Appendix.\n\n\nYou must also duplicate this License in any Documentation file (or with a hyperlink in each file of the Documentation) where You describe recipients' rights or ownership rights.\n\n\nYou may choose to offer, and to charge a fee for, warranty, support, indemnity or liability obligations to one or more recipients of Documentation. However, You may do so only on Your own behalf, and not on behalf of the Initial Writer or any Contributor. You must make it absolutely clear than any such warranty, support, indemnity or liability obligation is offered by You alone, and You hereby agree to indemnify the Initial Writer and every Contributor for any liability incurred by the Initial Writer or such Contributor as a result of warranty, support, indemnity or liability terms You offer.\n\n\n3.6. Larger Works.\n\n\nYou may create a Larger Work by combining Documentation with other documents not governed by the terms of this License and distribute the Larger Work as a single product. In such a case, You must make sure the requirements of this License are fulfilled for the Documentation.\n\n\n4.0 APPLICATION OF THIS LICENSE.\n\n\nThis License applies to Documentation to which the Initial Writer has attached this License and the notice in the Appendix.\n\n\n5.0 TRADEMARKS.\n\n\nThis license does not grant permission to use the trade names, trademarks, service marks, logos, or product names of the Initial Writer or any Contributor, except as required for reasonable and customary use in describing the Origin of the Documentation and reproducing the content of any of the notices described in the Appendix.\n\n\n6.0 VERSIONS OF THE LICENSE.\n\n\n6.1. New Versions.\n\n\nInitial Writer may publish revised or new versions of the License from time to time. Each version will be given a distinguishing version number.\n\n\n6.2. Effect of New Versions.\n\n\nOnce Documentation has been published under a particular version of the License, You may always continue to use it under the terms of that version. You may also choose to use such Documentation under the terms of any subsequent version of the License published by OpenSolaris. No one other than OpenSolaris has the right to modify the terms of this License. Filling in the name of the Initial Writer, Original Documentation or Contributor in the notice described in the Appendix shall not be deemed to be Modifications of this License.\n\n\n7.0 DISCLAIMER OF WARRANTY.\n\n\nDOCUMENTATION IS PROVIDED UNDER THIS LICENSE ON AN \"AS IS'' BASIS, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, WITHOUT LIMITATION, WARRANTIES THAT THE DOCUMENTATION IS FREE OF DEFECTS, MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE OR NON-INFRINGING. THE ENTIRE RISK AS TO THE QUALITY, ACCURACY, AND PERFORMANCE OF THE DOCUMENTATION IS WITH YOU. SHOULD ANY DOCUMENTATION PROVE DEFECTIVE IN ANY RESPECT, YOU (NOT THE INITIAL WRITER OR ANY OTHER CONTRIBUTOR) ASSUME THE COST OF ANY NECESSARY SERVICING, REPAIR OR CORRECTION. THIS DISCLAIMER OF WARRANTY CONSTITUTES AN ESSENTIAL PART OF THIS LICENSE. NO USE OF ANY DOCUMENTATION IS AUTHORIZED HEREUNDER EXCEPT UNDER THIS DISCLAIMER.\n\n\n8.0 TERMINATION.\n\n\nThis License and the rights granted hereunder will terminate automatically if You fail to comply with terms herein and fail to cure such breach within 30 days of becoming aware of the breach. All sublicenses to the Documentation which are properly granted shall survive any termination of this License. Provisions which, by their nature, must remain in effect beyond the termination of this License shall survive.\n\n\n9.0 LIMITATION OF LIABILITY.\n\n\nUNDER NO CIRCUMSTANCES AND UNDER NO LEGAL THEORY, WHETHER IN TORT (INCLUDING NEGLIGENCE), CONTRACT, OR OTHERWISE, SHALL THE INITIAL WRITER, ANY OTHER CONTRIBUTOR, OR ANY DISTRIBUTOR OF DOCUMENTATION, OR ANY SUPPLIER OF ANY OF SUCH PARTIES, BE LIABLE TO ANY PERSON FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES OF ANY CHARACTER INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF GOODWILL, WORK STOPPAGE, COMPUTER FAILURE OR MALFUNCTION, OR ANY AND ALL OTHER DAMAGES OR LOSSES ARISING OUT OF OR RELATING TO THE USE OF THE DOCUMENTATION, EVEN IF SUCH PARTY SHALL HAVE BEEN INFORMED OF THE POSSIBILITY OF SUCH DAMAGES.\n\n\n10.0 U.S. GOVERNMENT END USERS.\n\n\nIf Documentation is being acquired by or on behalf of the U.S. Government or by a U.S. Government prime contractor or subcontractor (at any tier), then the Government's rights in Documentation will be only as set forth in this Agreement; this is in accordance with 48 CFR 227.7201 through 227.7202-4 (for Department of Defense (DOD) acquisitions) and with 48 CFR 2.101 and 12.212 (for non-DOD acquisitions).\n\n\n11.0 MISCELLANEOUS.\n\n\nThis License represents the complete agreement concerning the subject matter hereof. If any provision of this License is held to be unenforceable, such provision shall be reformed only to the extent necessary to make it enforceable. This License shall be governed by California law, excluding its conflict-of-law provisions. With respect to disputes or any litigation relating to this License, the losing party is responsible for costs, including without limitation, court costs and reasonable attorneys' fees and expenses. The application of the United Nations Convention on Contracts for the International Sale of Goods is expressly excluded. Any law or regulation which provides that the language of a contract shall be construed against the drafter shall not apply to this License.\n\n\nAppendix\n\n\nPublic Documentation License Notice\n\n\nThe contents of this Documentation are subject to the Public Documentation License Version 1.01 (the \"License\"); you may only use this Documentation if you comply with the terms of this License. A copy of the License is available at \nhttp://illumos.org/license/PDL\n.\n\n\nThe Original Documentation is _________________.\n\nThe Initial Writer of the Original Documentation is ___________ Copyright (C)_________[Insert year(s)]. All Rights Reserved. (Initial Writer contact(s):________________[Insert hyperlink/alias]).\n\nContributor(s): ______________________________________.\n\nPortions created by ______ are Copyright (C)_________[Insert year(s)]. All Rights Reserved. (Contributor contact(s):________________[Insert hyperlink/alias]).\n\n\n\n\nNOTE: The text of this Appendix may differ slightly from the text of the notices in the files of the Original Documentation. You should use the text of this Appendix rather than the text found in the Original Documentation for Your Modifications.",
            "title": "Public Documentation License"
        },
        {
            "location": "/misc/pdl/#public-documentation-license",
            "text": "Version 1.01  For the OpenIndiana Project",
            "title": "PUBLIC DOCUMENTATION LICENSE"
        },
        {
            "location": "/misc/pdl/#10-definitions",
            "text": "1.1. \"Commercial Use\" means distribution or otherwise making the Documentation available to a third party.  1.2. \"Contributor\" means a person or entity who creates or contributes to the creation of Modifications.  1.3. \"Documentation\" means the Original Documentation or Modifications or the combination of the Original Documentation and Modifications, in each case including portions thereof.  1.4. \"Editable Form\" means the preferred form of Documentation for making Modifications to such documentation. The Documentation can be in an electronic, compressed or archival form, provided the appropriate decompression or de-archiving software is widely available for no charge.  1.5. \"Electronic Distribution Mechanism\" means a mechanism generally accepted for the electronic transfer of data.  1.6. \"Initial Writer\" means the individual or entity identified as the Initial Writer in the notice required by the Appendix.  1.7. \"Larger Work\" means a work which combines Documentation or portions thereof with documentation or other writings not governed by the terms of this License.  1.8. \"License\" means this document.  1.9. \"Modifications\" means any addition to or deletion from the substance or structure of either the Original Documentation or any previous Modifications, such as a translation, abridgment, condensation, or any other form in which the Original Documentation or previous Modifications may be recast, transformed or adapted. A work consisting of editorial revisions, annotations, elaborations, and other modifications which, as a whole represent an original work of authorship, is a Modification. For example, when Documentation is released as a series of documents, a Modification is:  A. Any addition to or deletion from the contents of the Original Documentation or previous Modifications.  B. Any new documentation that contains any part of the Original Documentation or previous Modifications.  1.10. \"Original Documentation\" means documentation described as Original Documentation in the notice required by the Appendix, and which, at the time of its release under this License is not already Documentation governed by this License.  1.11. \"You\" (or \"Your\") means an individual or a legal entity exercising rights under, and complying with all of the terms of, this License or a future version of this License issued under Section 5.0 (\"Versions of the License\"). For legal entities, \"You\" includes any entity which controls, is controlled by, or is under common control with You. For purposes of this definition, \"control\" means (a) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (b) ownership of more than fifty percent (50%) of the outstanding shares or beneficial ownership of such entity.",
            "title": "1.0 DEFINITIONS."
        },
        {
            "location": "/misc/pdl/#20-license-grants",
            "text": "2.1 Initial Writer Grant.  The Initial Writer hereby grants You a world-wide, royalty-free, non-exclusive license to use, reproduce, prepare Modifications of, compile, publicly perform, publicly display, demonstrate, market, disclose and distribute the Documentation in any form, on any media or via any Electronic Distribution Mechanism or other method now known or later discovered, and to sublicense the foregoing rights to third parties through multiple tiers of sublicensees in accordance with the terms of this License.\nThe license rights granted in this Section 2.1 (\"Initial Writer Grant\") are effective on the date Initial Writer first distributes Original Documentation under the terms of this License.\n2.2. Contributor Grant.  Each Contributor hereby grants You a world-wide, royalty-free, non-exclusive license to use, reproduce, prepare Modifications of, compile, publicly perform, publicly display, demonstrate, market, disclose and distribute the Documentation in any form, on any media or via any Electronic Distribution Mechanism or other method now known or later discovered, and to sublicense the foregoing rights to third parties through multiple tiers of sublicensees in accordance with the terms of this License.  The license rights granted in this Section 2.2 (\"Contributor Grant\") are effective on the date Contributor first makes Commercial Use of the Documentation.",
            "title": "2.0 LICENSE GRANTS."
        },
        {
            "location": "/misc/pdl/#30-distribution-obligations",
            "text": "3.1. Application of License.  The Modifications which You create or to which You contribute are governed by the terms of this License, including without limitation Section 2.2 (\"Contributor Grant\"). The Documentation may be distributed only under the terms of this License or a future version of this License released in accordance with Section 5.0 (\"Versions of the License\"), and You must include a copy of this License with every copy of the Documentation You distribute. You may not offer or impose any terms that alter or restrict the applicable version of this License or the recipients' rights hereunder. However, You may include an additional document offering the additional rights described in Section 3.5 (\"Required Notices\").  3.2. Availability of Documentation.  Any Modification which You create or to which You contribute must be made available publicly in Editable Form under the terms of this License via a fixed medium or an accepted Electronic Distribution Mechanism.  3.3. Description of Modifications.  All Documentation to which You contribute must identify the changes You made to create that Documentation and the date of any change. You must include a prominent statement that the Modification is derived, directly or indirectly, from Original Documentation provided by the Initial Writer and include the name of the Initial Writer in the Documentation or via an electronic link that describes the origin or ownership of the Documentation. The foregoing change documentation may be created by using an electronic program that automatically tracks changes to the Documentation. You must make all such changes and required information publicly available for at least five years following release of the changed Documentation.  3.4. Intellectual Property Matters.  Contributor represents that Contributor believes that Contributor's Modifications are Contributor's original creation(s), Contributor has sufficient rights to grant the rights conveyed by this License, or both of these statements are true.  3.5. Required Notices.  You must duplicate the notice in the Appendix in each file of the Documentation. If it is not possible to put such notice in a particular Documentation file due to its structure, then You must include such notice in a location (such as a relevant directory) where a reader would be likely to look for such a notice, for example, via a hyperlink in each file of the Documentation that takes the reader to a page that describes the origin and ownership of the Documentation. If You created one or more Modification(s) You may add your name as a Contributor to the notice described in the Appendix.  You must also duplicate this License in any Documentation file (or with a hyperlink in each file of the Documentation) where You describe recipients' rights or ownership rights.  You may choose to offer, and to charge a fee for, warranty, support, indemnity or liability obligations to one or more recipients of Documentation. However, You may do so only on Your own behalf, and not on behalf of the Initial Writer or any Contributor. You must make it absolutely clear than any such warranty, support, indemnity or liability obligation is offered by You alone, and You hereby agree to indemnify the Initial Writer and every Contributor for any liability incurred by the Initial Writer or such Contributor as a result of warranty, support, indemnity or liability terms You offer.  3.6. Larger Works.  You may create a Larger Work by combining Documentation with other documents not governed by the terms of this License and distribute the Larger Work as a single product. In such a case, You must make sure the requirements of this License are fulfilled for the Documentation.",
            "title": "3.0 DISTRIBUTION OBLIGATIONS."
        },
        {
            "location": "/misc/pdl/#40-application-of-this-license",
            "text": "This License applies to Documentation to which the Initial Writer has attached this License and the notice in the Appendix.",
            "title": "4.0 APPLICATION OF THIS LICENSE."
        },
        {
            "location": "/misc/pdl/#50-trademarks",
            "text": "This license does not grant permission to use the trade names, trademarks, service marks, logos, or product names of the Initial Writer or any Contributor, except as required for reasonable and customary use in describing the Origin of the Documentation and reproducing the content of any of the notices described in the Appendix.",
            "title": "5.0 TRADEMARKS."
        },
        {
            "location": "/misc/pdl/#60-versions-of-the-license",
            "text": "6.1. New Versions.  Initial Writer may publish revised or new versions of the License from time to time. Each version will be given a distinguishing version number.  6.2. Effect of New Versions.  Once Documentation has been published under a particular version of the License, You may always continue to use it under the terms of that version. You may also choose to use such Documentation under the terms of any subsequent version of the License published by OpenSolaris. No one other than OpenSolaris has the right to modify the terms of this License. Filling in the name of the Initial Writer, Original Documentation or Contributor in the notice described in the Appendix shall not be deemed to be Modifications of this License.",
            "title": "6.0 VERSIONS OF THE LICENSE."
        },
        {
            "location": "/misc/pdl/#70-disclaimer-of-warranty",
            "text": "DOCUMENTATION IS PROVIDED UNDER THIS LICENSE ON AN \"AS IS'' BASIS, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, WITHOUT LIMITATION, WARRANTIES THAT THE DOCUMENTATION IS FREE OF DEFECTS, MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE OR NON-INFRINGING. THE ENTIRE RISK AS TO THE QUALITY, ACCURACY, AND PERFORMANCE OF THE DOCUMENTATION IS WITH YOU. SHOULD ANY DOCUMENTATION PROVE DEFECTIVE IN ANY RESPECT, YOU (NOT THE INITIAL WRITER OR ANY OTHER CONTRIBUTOR) ASSUME THE COST OF ANY NECESSARY SERVICING, REPAIR OR CORRECTION. THIS DISCLAIMER OF WARRANTY CONSTITUTES AN ESSENTIAL PART OF THIS LICENSE. NO USE OF ANY DOCUMENTATION IS AUTHORIZED HEREUNDER EXCEPT UNDER THIS DISCLAIMER.",
            "title": "7.0 DISCLAIMER OF WARRANTY."
        },
        {
            "location": "/misc/pdl/#80-termination",
            "text": "This License and the rights granted hereunder will terminate automatically if You fail to comply with terms herein and fail to cure such breach within 30 days of becoming aware of the breach. All sublicenses to the Documentation which are properly granted shall survive any termination of this License. Provisions which, by their nature, must remain in effect beyond the termination of this License shall survive.",
            "title": "8.0 TERMINATION."
        },
        {
            "location": "/misc/pdl/#90-limitation-of-liability",
            "text": "UNDER NO CIRCUMSTANCES AND UNDER NO LEGAL THEORY, WHETHER IN TORT (INCLUDING NEGLIGENCE), CONTRACT, OR OTHERWISE, SHALL THE INITIAL WRITER, ANY OTHER CONTRIBUTOR, OR ANY DISTRIBUTOR OF DOCUMENTATION, OR ANY SUPPLIER OF ANY OF SUCH PARTIES, BE LIABLE TO ANY PERSON FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES OF ANY CHARACTER INCLUDING, WITHOUT LIMITATION, DAMAGES FOR LOSS OF GOODWILL, WORK STOPPAGE, COMPUTER FAILURE OR MALFUNCTION, OR ANY AND ALL OTHER DAMAGES OR LOSSES ARISING OUT OF OR RELATING TO THE USE OF THE DOCUMENTATION, EVEN IF SUCH PARTY SHALL HAVE BEEN INFORMED OF THE POSSIBILITY OF SUCH DAMAGES.",
            "title": "9.0 LIMITATION OF LIABILITY."
        },
        {
            "location": "/misc/pdl/#100-us-government-end-users",
            "text": "If Documentation is being acquired by or on behalf of the U.S. Government or by a U.S. Government prime contractor or subcontractor (at any tier), then the Government's rights in Documentation will be only as set forth in this Agreement; this is in accordance with 48 CFR 227.7201 through 227.7202-4 (for Department of Defense (DOD) acquisitions) and with 48 CFR 2.101 and 12.212 (for non-DOD acquisitions).",
            "title": "10.0 U.S. GOVERNMENT END USERS."
        },
        {
            "location": "/misc/pdl/#110-miscellaneous",
            "text": "This License represents the complete agreement concerning the subject matter hereof. If any provision of this License is held to be unenforceable, such provision shall be reformed only to the extent necessary to make it enforceable. This License shall be governed by California law, excluding its conflict-of-law provisions. With respect to disputes or any litigation relating to this License, the losing party is responsible for costs, including without limitation, court costs and reasonable attorneys' fees and expenses. The application of the United Nations Convention on Contracts for the International Sale of Goods is expressly excluded. Any law or regulation which provides that the language of a contract shall be construed against the drafter shall not apply to this License.",
            "title": "11.0 MISCELLANEOUS."
        },
        {
            "location": "/misc/pdl/#appendix",
            "text": "",
            "title": "Appendix"
        },
        {
            "location": "/misc/pdl/#public-documentation-license-notice",
            "text": "The contents of this Documentation are subject to the Public Documentation License Version 1.01 (the \"License\"); you may only use this Documentation if you comply with the terms of this License. A copy of the License is available at  http://illumos.org/license/PDL .  The Original Documentation is _________________.\n\nThe Initial Writer of the Original Documentation is ___________ Copyright (C)_________[Insert year(s)]. All Rights Reserved. (Initial Writer contact(s):________________[Insert hyperlink/alias]).\n\nContributor(s): ______________________________________.\n\nPortions created by ______ are Copyright (C)_________[Insert year(s)]. All Rights Reserved. (Contributor contact(s):________________[Insert hyperlink/alias]).  NOTE: The text of this Appendix may differ slightly from the text of the notices in the files of the Original Documentation. You should use the text of this Appendix rather than the text found in the Original Documentation for Your Modifications.",
            "title": "Public Documentation License Notice"
        },
        {
            "location": "/handbook/getting-started/",
            "text": "Hipster Handbook - Getting Started with OpenIndiana\n\n\n \nNOTE:\n\n\n\n\nThis is a \nDRAFT\n document which may contain errors!\n\n\n\nHelp us improve and expand this site.\n\n\n\nPlease see the \nContrib\n section for more details about joining the OpenIndiana Documentation Team.\n\n\n\n\n\n\nIntroduction\n\n\nWelcome to the OpenIndiana Handbook!\n\n\nThis collection of documents is aimed at providing a comprehensive source of guidance for both new and seasoned Unix administrators.\nWhile our aim is to address as many facets of OpenIndiana use and administration as possible, some topics are simply too complex and beyond the scope of an introductory end user handbook.\nIn such cases external sources of information will be provided in the form of references to other web sites, man pages, or printed books.\n\n\nConventions\n\n\nCommandlines\n\n\nCommandlines starting with a # character means that they should be run as root.\nMost of these examples can also be invoked with\n\npfexec(1)\n\n or sudo(1m) instead.\n\n\nYou can login as root using \nsu(1m)\n.\n\n\nAn example of a commandline intended to be invoked as root:\n\n\n# dd if=image.usb of=/dev/sdb\n\n\n\n\nCommandlines starting with a $ character means that they should be run as a\nregular user.\n\n\nAn example of a commandline intended to be invoked as a regular user:\n\n\n$ prstat\n\n\n\n\nHipster Software Releases\n\n\nApproximately every six months, the OpenIndiana project releases a snapshot of the Hipster rolling release branch.\nIdeally suited for both workstations and servers, simply choose the installer type which best serves your needs.\n\n\n\n\n\n\n\n\nWorkstation\n\n\nServer\n\n\nMinimal\n\n\n\n\n\n\n\n\n\n\nLive installer (Mate desktop)\n\n\nText Only (No GUI)\n\n\nText Only (No GUI)\n\n\n\n\n\n\n\n\nFor a full list of links to the various installer images, visit the \nOpenIndiana Downloads\n page.\n\n\n \nNOTE:\n\n\n\n\n\n  \nThe legacy oi-dev-151x branch is no longer maintained.\n\n  \nWhile upgrades to Hipster are possible, it can only be performed by doing it in stages.\n\n  \n\n    \nFirst upgrade from oi-dev to Hipster-2015, and verify the system has been updated to the latest 2015.\n\n    \nOnly then may you switch to the current Hipster repository and update again.\n\n    \nFor more details, click here for upgrade instructions\n\n  \n\n\n\n\n\n\n\n\n \nCAUTION:\n\n\n\n\nHipster is a rapid development branch where software versions are frequently updated.\nWhile every package is tested to ensure stability, caution is nevertheless warranted when deploying Hipster into mission critical production environments.\n\n\n\n\n\nSystem Requirements\n\n\n\n\n\n\n\n\n\n\n\nCPU\n\n\nDisk Space\n\n\nMemory (RAM)\n\n\n\n\n\n\n\n\n\n\n64 Bit\n\n\n20GB (or more)\n\n\n2GB (or more)\n\n\n\n\n\n\n\n\n \nNOTE:\n\n\n\n\n\n  \nFor the best performance (and to reduce the possibility of disk swapping), allocate 4GB RAM or more.\n\n  \nFor desktops, ensure total system memory (RAM + swap) are at least 4GB or greater.\n\n  \nThe default size of the OpenIndiana swap file is 50% of installed memory.\n\n  \nMinimum and maximum default swap allocations are 512MB and 32GB respectively.\n\n\n\n\n\n\n\n\nExploring OpenIndiana Hipster\n\n\nThere are several ways in which you can explore OpenIndiana without having to perform a bare metal install.\n\n\n\n\nLive media (USB/DVD)\n\n\nVirtual machines (PC emulation via software)\n\n\nVagrant (virtual machine image automation)\n\n\n\n\n \nNOTE:\n\n\n\nWhile the Live Media environment provides an opportunity to use and explore many of the features of OpenIndiana, it is not possible to install additional software into the Live Media environment.\n\n\n\nLive Media\n\n\nAvailable in both DVD and USB formats, the OpenIndiana GUI installer also functions as live media.\nThis allows you try OpenIndiana without the need to install it.\nExploring OpenIndiana via the live media is an especially good way to test your hardware compatibility prior to installing the operating system.\n\n\nVirtual machines\n\n\nOpenIndiana is known to work with the following virtualization software:\n\n\n\n\nVirtualBox\n\n\nVMWare Fusion\n\n\nVMWare Workstation Pro\n\n\nVMWare Workstation Player\n\n\nVMWare VSphere\n\n\nLinux KVM\n\n\nillumos KVM - (The illumos port of Linux KVM)\n\n\n\n\nVirtual machines provide a PC emulation layer in which you install OpenIndiana just as you would on physical 'bare metal' hardware.\n\n\nVagrant\n\n\nVagrant provides an excellent way to explore OpenIndiana as it fully automates the process of bringing a virtual machine online.\nOpenIndiana comes with an official \nVagrant\n box, which can be used for exploring OpenIndiana before installing it.\n\n\n \nNOTE:\n\n\n\n\nAt this time, the OpenIndiana Vagrant box is only available in the form of a text based console.\nAdditionally, Virtualbox is the only currently supported Vagrant provider.\nIn the future the OpenIndiana project hopes to provide additional Vagrant box options.\n\n\n\n\n\n \nNOTE:\n\n\n\n\nVagrant is officially available for Mac OS X, Windows and Linux.\n\n\n\n\n\n\n\nDownload and install the latest version of Vagrant for your platform from the \nofficial download page\n.\n\n\nDownload and install the latest version of Virtualbox for your platform from the \nofficial download page\n.\n\n\n\n\n \nCAUTION:\n\n\n\n\nOlder versions of Vagrant (as packaged by many LTS Linux distributions), may not support downloading the Vagrant box instance.\nTo work around this limitation, be sure to remove any previously installed instances of Vagrant and obtain the latest Vagrant software directly from the Vagrant website.\n\n\n\n\n\n\n\nRun the following command to download and boot the OpenIndiana vagrant box:\n\n\n\n\n$ mkdir ~/openindiana_test\n$ cd ~/openindiana_test\n$ vagrant init openindiana/hipster\n$ vagrant up --provider virtualbox\n\n\n\n\nThis will create a file titled \nVagrantfile\n under the ~/openindiana_test directory.\nThe Vagrant box will also be booted.\n\n\n\n\nOnce, the Vagrant box virtual machine is online, connect to it using the following command:\n\n\n\n\n$ vagrant ssh\n\n\n\n\n\n\nTo destroy the OpenIndiana Vagrant instance, issue the following command:\n\n\n\n\n$ vagrant destroy\n\n\n\n\nPreparing to Install Hipster\n\n\nPrior to installing OpenIndiana:\n\n\n\n\nEnsure your system meets the recommended hardware requirements.\n\n\nEnsure to consult the HCL.\n\n\n\n\n \nCAUTION:\n\n\n\n\nInstalling OpenIndiana on unsupported hardware may cause excessive CPU usage, instability, or other problems.\n\n\nPlease be sure to consult the hardware compatibility list (HCL):\n\n\n\n\nIllumos HLC\n\n\nOpenIndiana HCL - components\n\n\nOpenIndiana HCL - systems\n\n\n\n\n\n\n\nBacking up data\n\n\n \nCAUTION:\n\n\n\n\nBefore attempting to install OpenIndiana, first ensure you backup any important data.\nDo not save the data on another partition or on another disk within the same system.\nInstead save the data to an external device such as a USB hard drive, or external system (network backup service, or a networked system).\nAlways verify your backed up data.\n\n\n\n\n\nDeciding where to install OpenIndiana\n\n\nBy default the OpenIndiana installer creates an EFI partition using a GPT partition table.\nUsing this option, OpenIndiana will use the entire disk.\nNo other operating system can share the same disk.\n\n\nOptionally you may use a legacy MBR partition.\nMBR partitions will allow you to create multiple partitions.\nMBR will also support dual booting another operating system.\n\n\nAnother option is to install to a virtual machine.\n\n\nGathering network information\n\n\nIf your network uses a DHCP server, OpenIndiana can be configured to automatically obtain it's network information.\nIf a DHCP server is not available, then you will need to manually configure your network settings.\n\n\nObtain the following information:\n\n\n\n\nIP address\n\n\nSubnet mask\n\n\nGateway\n\n\nNetwork domain name\n\n\nNetwork DNS servers\n\n\n\n\nDownloading the software\n\n\n\n\n\nFor a full list of links to the various installer images, visit the following page:\n\n\n\n\nOpenIndiana Downloads\n\n\n\n\nFor a complete list of alternate mirrors (Asia, Europe, North America, etc.)\n\n\n\n\nOpenIndiana Download Mirrors\n\n\n\n\nIf you wish to purchase a ready made DVD or USB drive there is also \nOSDISC.COM\n.\n\n\nDownload example:\n\n\n$ wget \nhttp://dlc.openindiana.org/isos/hipster/20170502/OI-hipster-gui-20170502.iso\n\n$ wget \nhttp://dlc.openindiana.org/isos/hipster/20170502/OI-hipster-gui-20170502.iso.sha256sum\n\n\n\n\n\nChecking the MD5/SHA\n\n\nChecksum verification example:\n\n\n$ sha256sum --check OI-hipster-gui-20170502.iso.sha256sum\nOI-hipster-gui-20170502.iso: OK\n$\n\n\n\n\nCreating a Hipster DVD\n\n\nBSD/illumos/Solaris\n\n\nUNIX Console\n \n\n\nThe command to use for writing a CD or DVD is \ncdrecord\n.\nThe syntax of the command is: \ncdrecord dev=device imagefile.iso\n\n\nExamples:\n\n\n# cdrecord dev=/dev/rdsk/c4t1d0p0 imagefile.iso\n\n\n# cdrecord dev=4,1,0 imagefile.iso\n\n\n \nNOTE:\n\n\n\n\nIf you are re-using a DVD-RW, be sure to blank it first.\n\n\nFor example: \ncdrecord dev=/dev/rdsk/c4t1d0p0 blank=fast\n\n\nWarning: Blanking the disk will destroy all data on the disk.\n\n\n\n\n\nLocating your DVD or CD writing device:\n\n\n\n\nFor BSD, use \ncdrecord -scanbus\n to locate your device.\n\n\n\n\nFor example:\n\n\n$ cdrecord -scanbus\nCdrecord-ProDVD-ProBD-Clone 3.00 (i386-pc-solaris2.11) Copyright (C) 1995-2010 J\u00f6rg Schilling\nWarning: Using USCSI interface.\nUsing libscg version 'schily-0.9'.\nscsibus4:\n        4,0,0   400) 'ATA     ' 'HITACHI HTS72321' 'C50B' Disk\n        4,1,0   401) 'HL-DT-ST' 'DVDRAM GSA-U20N ' 'HX12' Removable CD-ROM\n        4,2,0   402) *\n        4,3,0   403) *\n        4,4,0   404) *\n        4,5,0   405) *\n        4,6,0   406) *\n        4,7,0   407) *\n$\n\n\n\n\n \nNOTE:\n\n\n\n\nWhen using \ncdrecord -scanbus\n to determine the device name, specify the device using the SCSI bus ID.\n\n\nFor example: \ncdrecord dev=4,1,0 imagefile.iso\n\n\n\n\n\n\n\nFor illumos/Solaris, you may use either \ncdrecord -scanbus\n or \nrmformat -l\n to locate your device.\n\n\n\n\nFor example:\n\n\n$ rmformat -l\nLooking for devices...\n     1. Logical Node: /dev/rdsk/c4t1d0p0\n        Physical Node: /pci@0,0/pci17aa,20f8@1f,2/cdrom@1,0\n        Connected Device: HL-DT-ST DVDRAM GSA-U20N  HX12\n        Device Type: CD Reader\n        Bus: \nUnknown\n\n        Size: 810.2 MB\n        Label: \nNone\n\n        Access permissions: Medium is not write protected.\n$\n\n\n\n\n \nNOTE:\n\n\n\n\nWhen using \nrmformat -l\n to determine the device name, specify the device using the \nLogical Node\n.\n\n\nFor example: \n# cdrecord dev=/dev/rdsk/c4t1d0p0 imagefile.iso\n\n\n\n\n\nUNIX GUI\n \n\n\n\n\nUse the application specific to your desktop (Brasero, K3B, etc.)\n\n\n\n\n\nLinux\n\n\nLinux Console\n \n\n\nThe command to use to write a CD or DVD on Linux is \nwodim\n.\n\n\nThe syntax of the command is: \nwodim -v dev=device -dao imagefile.iso\n\n\nFor example:\n\n\n# wodim -v dev=/dev/sr0 -dao imagefile.iso\n\n\nLocating your DVD or CD writing device:\n\n\n\n\nOn Linux use the \nlsblk\n command to locate your device.\n\n\n\n\nFor example:\n\n\n$ lsblk\nNAME   MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT\nsda      8:0    0 232.9G  0 disk\n\u251c\u2500sda1   8:1    0 227.8G  0 part /\n\u251c\u2500sda2   8:2    0     1K  0 part\n\u2514\u2500sda5   8:5    0     4G  0 part\nsr0     11:0    1  1024M  0 rom\n$\n\n\n\n\nLinux GUI\n \n\n\n\n\nThere are several different CD/DVD writer applications available for Linux.\n\n\n\n\n\n\n\n\nDesktop\n\n\nApplication\n\n\n\n\n\n\n\n\n\n\nGNOME\n\n\nBrasero\n\n\n\n\n\n\nKDE\n\n\nK3B\n\n\n\n\n\n\n\n\nOther desktops may offer additional choices.\nFor further information, please consult the help documentation for your Linux distribution.\n\n\n\n\n\nMac OS X\n\n\nMAC Console\n \n\n\n\n\n\n# growisofs -Z /dev/dvdrw=image.iso\n\n\n\n\nMAC GUI\n \n\n\n\n\nApplications \n Utilities \n Disk Utility\n\n\n\n\n\nWindows\n\n\nWindows Console\n \n\n\nIsoburn is a Windows GUI utility which can be launched via the command prompt as follows:\n\n\nISOBURN.EXE [/Q] [\ndrive letter\n:] \ndisk image file name\n\n\n\n\n\nWindows GUI\n \n\n\n\n\nFrom within Windows Explorer:\n\n\n\n\nBrowse to and select the ISO image file\n\n\nRight click the ISO image file\n\n\nFrom the right click menu, select \"Burn Disk Image\"\n\n\n\n\n\n\n\nCreating a Hipster USB Drive\n\n\n \nNOTE:\n\n\n\nThere are two unique methods for creating bootable USB flash drives.\nThe method to use depends on the release date of the USB image you intend to write.\n\n\nMethod 1\n\n\n\n\nApplies to the experimental releases of July 2016 and all subsequent (newer) releases.\n\n\nFor example: The OpenIndiana Hipster 2016.10 release uses this method.\n\n\n\n\n\n\n\n\nMethod 2\n\n\n\n\nApplies to all OpenIndiana releases up to and including the OpenIndiana Hipster 2016.04 release.\n\n\nThis includes the legacy oi-dev-151a series of OpenIndiana releases.\n\n\n\n\n\n \nCAUTION:\n\n\n\nOpenIndiana Hipster does not yet support UEFI.\n\n\n\n\nIf you intend to install OpenIndiana Hipster on a system, which supports UEFI boot, please be sure to boot the system in legacy mode.\n\n\n\n\n\nPrerequisites\n\n\nMethods 1 \n 2\n\n\n\n\nUSB flash drive - (2GB or larger).\n\n\nDownload the OpenIndiana USB installer image.\n\n\n\n\nMethod 2\n\n\n \nNOTE:\n\n\n\n\n\n\nHeader files are only required when writing a legacy image \nAND\n using the dd utility.\n\n\nHeader files are \nNOT\n required when writing current images.\n\n\nFor example: The Hipster 2016.10 release, does \nNOT\n require header files.\n\n\n\n\n\n\n\n\n\n\n\n\n\nDownload the appropriate OpenIndiana \n1G\n or \n2G\n header file\n\n\nThere are 2 unique USB header files (1G and 2G).\n\n\nPlease ensure you have selected the correct file as the files are \nNOT\n interchangeable.\n\n\nThe 1G.header is only suitable for use with the text installer (Command line console).\n\n\nThe 2G.header is only suitable for use with the live installer (Gnome desktop).\n\n\n\n\n\n\n\n\n\n\n\n\n \nCAUTION:\n\n\n\nFailure to use the correct USB header file can result in the USB drive either failing to boot, or only partially booting.\n\n\n\nIdentifying the path to your USB device\n\n\n\n\n\n\n\n\nOperating system\n\n\nCommand\n\n\nDevice\n\n\n\n\n\n\n\n\n\n\nBSD\n\n\ncamcontrol devlist\n\n\n/dev/da*\n\n\n\n\n\n\nillumos/Solaris\n\n\nrmformat -l\n\n\n/dev/rdsk/c*t*d*p0\n\n\n\n\n\n\nLinux\n\n\nlsblk\n\n\n/dev/sd*\n\n\n\n\n\n\nMAC OS X\n\n\ndiskutil list\n\n\n/dev/disk*\n\n\n\n\n\n\n\n\n \nCAUTION:\n\n\n\nWhen issuing the USB copy command:\n\n\n\n\nMake sure you identify the correct storage device as all data on the device will be erased.\n\n\nBe sure to specify the entire USB device without appending any partition or slice number.\n\n\n\n\nFor example:\n\n\n\n\n\n\n\n\nExample\n\n\nDevice\n\n\n\n\n\n\n\n\n\n\nCorrect\n\n\n/dev/sda\n\n\n\n\n\n\nIncorrect\n\n\n/dev/sda1\n\n\n\n\n\n\nCorrect\n\n\n/dev/rdsk/c0t0d0p0\n\n\n\n\n\n\nIncorrect\n\n\n/dev/rdsk/c0t0d0p1\n\n\n\n\n\n\n\n\n\n\n\n\nIn illumos, the whole disk device name is depending on partition type.\n\n\n\n\nOn x86, the whole disk name ends with p0\n\n\nIn the case of a GPT (EFI) partition, the whole disk device name ends with dX.\n\n\non sparc, the disk has usually VTOC partition and whole disk device name usually ends with s2.\n\n\nNote, if on x86 and an MBR+VTOC is used, then the s2 device is addressing the Solaris2 MBR partition, not the whole disk.\n\n\n\n\n\n\n\n\nIf any file systems are located on the USB storage device, they must first be unmounted.\n\n\n\n\nDesktops may automatically mount removable devices.\n\n\nAs necessary, select any desktop icons for the USB device and issue an 'Eject' or 'Unmount' command.\n\n\nFor Linux, use \numount \npath\n.\n\n\nFor illumos/Solaris use \nrmumount \npath\n.\n\n\nfor MAC OS X use \ndiskutil unmountDisk \npath\n.\n\n\nVerify using the \nmount\n command.\n\n\n\n\n\n\n\n\n\nBSD/Linux/OS X\n\n\nIn the command below, replace \nX\n with the appropriate letter for your USB device. At least on Linux and FreeBSD you can add \nstatus=progress\n operand to print basic transfer statistics, refer to \ndd(1)\n man page of your platform for more information.\n\n\nMethod 1 (New releases)\n\n\n# dd bs=4M if=./image.usb of=/dev/sdX \n sync\n\n\n\n\nMethod 2 (Legacy releases)\n\n\n# cat 1G.header image.usb | dd bs=1024k of=/dev/sdX\n\n\n\n\nFor live images larger than 1GB, use the following command instead.\n\n\n# cat 2G.header image.usb | dd bs=1024k of=/dev/sdX\n\n\n\n\nillumos/Solaris\n\n\nMethod 1 (New releases)\n\n\nIn the command below, replace each \nX\n with appropriate number for your USB device.\n\n\n# /usr/bin/dd if=./image.usb of=/dev/rdsk/cXtXdXpX bs=4194304\n\n\n\n\nMethod 2 (Legacy releases)\n\n\nFor illumos based distributions including OpenIndiana, a script \n(USBCOPY)\n is available to copy the USB image onto a USB device.\n\n\nBe sure to run as root or with SUDO as the script exits if not run with elevated permissions.\n\n\n\n\n\n# ./usbcopy image.usb\nFound the following USB devices:\n0:    devices/dev/rdsk/c4t0d0p0    3.9 GB    USB    DISK 2.0       1.00\nEnter the number of your choice: 0\n\nWARNING: All data on your USB storage will be lost.\nAre you sure you want to install to\nUSB DISK 2.0 1.00, 3900 MB at /dev/rdsk/c4t0d0p0 ?  (y/n) y\nCopying and verifying image to USB device\nFinished 1643 MB in 685 seconds (2.3MB/s)\n0 block(s) re-written due to verification failure\nInstalling grub to USB device /dev/rdsk/c4t0d0s0\nCompleted copy to USB\n#\n\n\n\n\nWindows\n\n\nMethod 1 (New releases)\n\n\nNewer releases can be written using \nWin32 Disk Imager\n.\n\n\n \nNOTE:\n\n\n\nBy default the Win32 Disk Imager utility is looking for \n.img\n files and won't see files with a \n.usb\n extension.\nTo resolve this issue, be sure to select the \n*.*\n (all files) option from the file extension drop down menu.\n\n\n\nMethod 2 (Legacy releases)\n\n\nThe \nOpenSolaris Live USB Creator\n is a small stand alone GUI utility suitable for creating an OpenIndiana bootable USB flash drive.\n\n\nBooting the Hipster Installer\n\n\nInsert the bootable media (DVD or USB flash drive) and boot (start/restart) your computer.\nWhen you see the OpenIndiana boot menu, select a boot entry, and press the enter key to start OpenIndiana on your computer.\nAs it runs, you will be prompted with a few questions.\n\n\n \nNOTE:\n\n\n\n\nFor the computer to successfully boot from the media, you may be required to perform one of the following tasks:\n\n\n\n\nSpecify the appropriate boot device by pressing the boot order hotkey.\n\n\nChange the boot device order found in your computer's system BIOS configuration.\n\n\n\n\n\n\n\n \nCAUTION:\n\n\n\n\nOpenIndiana does not yet support the following technologies:\n\n\n\n\nSecure boot (UEFI boot path validation)\n\n\nUEFI (Unified Extensible Firmware Interface)\n\n\n\n\nTo successfully boot the OpenIndiana installer, these technologies must first be disabled.\nFor further information, consult the manufacturers documentation for your computer hardware.\n\n\n\n\n\nBooting the OpenIndiana installer on virtual hardware\n\n\nThe most efficient way to boot a virtual machine is to boot directly from the DVD ISO file.\nAlternately, you may use host to guest DVD/USB passthrough to boot from physical media.\nSee the notes below for optimizing OpenIndiana for several popular hypervisors.\n\n\n\n\n\n\n\n\nHypervisor\n\n\nConfiguration Notes\n\n\n\n\n\n\n\n\n\n\nVirtualbox\n\n\nOS type = Solaris 11 64-bit\n\n\n\n\n\n\nVmware player\n\n\nOS type = Solaris 11 64-bit\n\n\n\n\n\n\nKVM\n\n\nOS type = Sun OpenSolaris\nDisk = SATA\nRemove USB Tablet\nNIC = e1000\nsound = AC97\nProcessor = Copy host CPU configuration\nDisable CPU feature \n'xsave'\nVideo = QXL (QXL driver not supported, but the extra video memory helps)\nDisplay = VNC (Spice not supported)\n\n\n\n\n\n\nHyper-V\n\n\nSelect single CPU, generation 1 VM, and legacy NIC.\n\n\n\n\n\n\n\n\n \nNOTE:\n\n\n\n\nThe OpenIndiana Project recommends the Oracle Virtualbox hypervisor as it provides the best support for illumos based distributions such as OpenIndiana.\n\n\nIf you experience difficulties booting OpenIndiana on virtual hardware, or find virtual hardware devices which are either not properly recognized, or fail to function as expected, please report the problem to the upstream illumos Project. You may do so by submitting an issue using the \nillumos project bug tracker\n.\n\n\n\n\n\nThe OpenIndiana installer boot menu\n\n\nIntroduced with the Hipster 2016.10 release, the FreeBSD boot loader has been ported to OpenIndiana.\n\n\nThe new boot loader provides many new capabilities:\n\n\n\n\nBooting to the first disk\n\n\nSingle user mode\n\n\nDebugger options\n\n\n\n\n \nNOTE:\n\n\n\n\nThe OpenIndiana installer will automatically boot option # \n1. Boot Multi User\n within 10 seconds.\n\n\n\n\nTo pause the Autoboot timer, press the \nSpace\n key.\n\n\n\n\n\n\n\n\n\nThe OpenIndiana installer boot menu offers multiple choices.\n\n\n\n\n\n\n\n\nMain Menu Option\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n1. Boot Multi User\n\n\nNormal boot (desktop or shell)\n\n\n\n\n\n\n2. Boot Single user\n\n\nBoots to rescue mode\n\n\n\n\n\n\n3. Escape to loader prompt\n\n\nBoots to forth shell\n\n\n\n\n\n\n4. Reboot\n\n\nRestarts the computer\n\n\n\n\n\n\n5. Configure Boot Options\n\n\nEnters into boot options menu\n\n\n\n\n\n\n6. ChainLoad disk0\n\n\nBoots the OS found on 1st disk\n\n\n\n\n\n\n7. Select OI Extras\n\n\nEnters into extras menu\n\n\n\n\n\n\n\n\nSelect your boot option by pressing the associated number key.\n\n\n\n\nOptions 1, 2, 3, 4, and 6, result in the immediate execution of the selected option.\n\n\nOptions 5 and 7 provide interactive menus as shown below.\n\n\n\n\n\n\n\n\n\n\n\n\nBoot Option Menu\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n1. Back to Main Menu\n\n\nReturns to main menu\n\n\n\n\n\n\n2. OsConsole\n\n\nProvides several tty options\n\n\n\n\n\n\n3. ACPI\n\n\nToggles ACPI to ON, OFF, MADT, or Legacy\n\n\n\n\n\n\n4. Single User\n\n\nToggles single user mode\n\n\n\n\n\n\n5. Verbose\n\n\nToggles verbose boot messages\n\n\n\n\n\n\n6. Reconfigure\n\n\nReconfigures hardware\n\n\n\n\n\n\n7. kmdb\n\n\nToggles Kernel Mode Debugger\n\n\n\n\n\n\n8. Debug\n\n\nToggles debug\n\n\n\n\n\n\n\n\nToggle (enable/disable) these options by selecting the associated number key.\n\n\nFor example:\n\n\n\n\nPressing 5 enables verbose mode.\n\n\nPressing 5 again, disables the verbose option.\n\n\n\n\n\n\n\n\n\n\n\n\nOI Extras Menu\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n1. Back to Main Menu\n\n\nReturns to main menu\n\n\n\n\n\n\n2. Vesa driver\n\n\nForces the vesa driver\n\n\n\n\n\n\n3. Text console\n\n\nEnables the text console\n\n\n\n\n\n\n4. Enable ssh\n\n\nEnables ssh server for live desktop\n\n\n\n\n\n\n\n\nToggle (enable/disable) these options by selecting the associated number key.\n\n\nFor example:\n\n\n\n\nPressing 2 forces the VESA driver.\n\n\nPressing 2 again, disables the VESA driver.\n\n\n\n\n \nNOTE:\n\n\n\n\nEven when booting the Mate Live Image, selecting option # 3 (text console) option will boot the system to a text based console.\nThe logon credentials required to access the shell are jack/jack.\n\n\n\n\n\nSelecting keyboard layout and display language\n\n\n\n\nOpenIndiana offers 47 different keyboard layouts.\n\n\n\n\nSelect your keyboard layout by entering the number corresponding to your desired keyboard layout.\n\n\nFor example, select \n18\n for German, or \n35\n for Russian, etc.\n\n\nThe default keyboard layout is selection \n47\n US-English.\n\n\n\n\nOnce you have selected a keyboard layout, press the \nEnter\n key to continue.\n\n\n\n\nOpenIndiana offers 22 different language options.\n\n\n\n\nSelect a language by entering the number corresponding to your desired language.\n\n\nFor example, select \n3\n for Chinese - Simplified, or \n18\n for Portuguese - Brazil, etc.\n\n\nThe default language selection is \n7\nfor English.\n\n\n\n\nOnce you have selected a language, press the \nEnter\n key to continue.\n\n\n \nNOTE:\n\n\n\n\nAfter selecting the keyboard layout and language, OpenIndiana will begin to search for hardware and configure devices.\nWhen the configuration process is complete, the system will load to either the Mate desktop, or a logon console.\n\n\n\nThe live media desktop\n\n\n\n\nThe Live Media DVD and USB installers provide a graphical live environment where you can explore OpenIndiana and test the compatibility of your hardware.\nWhen using Live Media, no changes are made to your system unless you explicitly choose to install OpenIndiana or alter the configuration of your disk using the Gparted Partition Editor.\n\n\nThe following options are available to you from the Live Media Desktop:\n\n\n\n\nInstall OpenIndiana using the Text Installer\n\n\nInstall OpenIndiana (graphical installer)\n\n\nDevice Driver Utility\n\n\nGparted Partition Editor\n\n\n\n\nUsing the device driver utility\n\n\nAvailable from the Live Media desktop, the \nDevice Driver Utility\n may be used to scan your hardware for compatibility.\nThe utility generates a list of hardware devices along with the corresponding driver in use for each device.\nThe utility will also show you devices for which there is no driver loaded.\nThe device driver utility allows you to check whether your hardware requires additional drivers.\n\n\nUsing the Gparted Partition Editor\n\n\nThe Gparted partition editor allows you to add, remove, or resize partitions in preparation for installing OpenIndiana.\n\n\n \nCAUTION:\n\n\n\nEditing partition tables is a potentially destructive process.\nWhile you are unlikely to physically damage the disk, there is a risk of losing data.\nBefore using the partition editor, please be sure to back up your data to a remote system or device.\n\n\n\nLive media authentication\n\n\n\n\nThe user login for the live media session is \njack\n along with the password \njack\n.\n\n\nFor administrative or elevated access, prepend your commands with \nsudo\n.\n\n\nYou may obtain root using the \nsu\n command along with the password \nopenindiana\n.\n\n\n\n\nInstalling OpenIndiana\n\n\n \nDOC TEAM NOTE:\n\n\n\nFor some guidance writing this section:\n\n\n\n\nInstallation walkthrough: \nweb link\n\n\nInstallation videos: \nweb link\n\n\n\n\n\n\n \nNOTE:\n\n\n\nIf your intention is to multi-boot OpenIndiana on a system that is already running a UNIX like operating system (for example Linux), be sure to save a copy of the \nmenu.lst\n file prior to beginning the installation.\nThe contents of the GRUB \nmenu.lst\n file dictate the booting parameters for each entry displayed in the GRUB boot menu.\nThe information provided by the \nmenu.lst\n will be required for updating the GRUB menu after the installation.\n\n\n\n \nCAUTION:\n\n\n\nPlease be advised of the following important considerations:\n\n\n\n\nThe installation overwrites the whole disk layout if one of the following is true:\n\n\nThe disk table cannot be read.\n\n\nThe disk was not previously partitioned.\n\n\n\n\n\n\nIf an existing Solaris fdisk partition is on a multiboot system, and the user makes no modifications to the existing partitions, the installation overwrites the Solaris fdisk partition only.\nOther existing partitions are not changed.\n\n\n\n\n\nInstalling OpenIndiana from live media\n\n\nTo install OpenIndiana from Live Media, you have two options.\n\n\n\n\nInstall OpenIndiana using the Text Installer\n\n\nInstall OpenIndiana (graphical installer)\n\n\n\n\nEach of these options is represented by a desktop icon.\nSelect the appropriate installer option by clicking the corresponding desktop installer icon.\n\n\n \nNOTE:\n\n\n\n\nNew for the Hipster 2016.10 release\n\n\nSelecting the \nInstall OpenIndiana using the Text Installer\n desktop installer option provides new installation capabilities.\n\n\nIn addition to installing OpenIndiana to single disks, the following are now also supported:\n\n\n\n\nMirrors\n\n\nRAIDZ\n\n\n\n\nYes, that's right, you can now install the rpool to logical disk arrays, created during the installation process.\n\n\nHowever, please keep in mind the following:\n\n\n\n\nThis capability applies only to the python based installer which runs within a console window.\n\n\nThe graphical installer does not yet have this capability.\n\n\n\n\n\n\n\nInstall OpenIndiana (graphical installer)\n\n\nTo launch the OpenIndiana graphical installer, locate and double click the desktop icon labeled: \nInstall OpenIndiana\n.\n\n\nAs shown below, and in the subsequent screens, the installer starts a new process, running within it's own window.\n\n\n\n\nWhen the installer starts, the first screen you will see is the welcome page.\nPlease take some time to read the additional guidance provided below.\nWhen ready to begin, click the \nNext\n button to continue on with the installation process.\n\n\n \nNOTE:\n\n\n\nPlease disregard the reference to the getting started guide.\nThis guide no longer exists on the Live Media installer.\n\n\nA bug has been opened for this issue and a new getting started guide is being created\n.\n\n\nAlso, when clicking the link for the release notes, please click it only once and wait until Firefox finishes loading.\nThe Firefox web browser will open to the 'OpenIndiana Releases' page of the OpenIndiana Wiki.\nThis however, is not where you will find the release notes.\n\nA bug has been opened to correct this issue\n.\n\n\nThe release notes may be accessed in one of the following ways:\n\n\n\n\nPerform a search within the Wiki site for the release notes.\n\n\nBrowse to the following Wiki page: \nhttps://wiki.openindiana.org/oi/Release+Notes\n.\n\n\n\n\n\n\n\nThe top portion of the disk selection and partitioning screen shows all the disks found on the system, including removable disks.\nEach disk is represented with a disk icon.\nBelow each disk icon the installer displays the size of each disk in Gigabytes (GB) and the disk type (IDE, ATA, etc.).\nWithin this upper panel, select the disk where you wish to install OpenIndiana.\nThe lower portion of this screen displays partitioning options.\n\n\nWithin the lower panel, select one of the following options:\n\n\n\n\n\n\n\n\nOption\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nUse the whole disk\n\n\nWhen the \nUse the whole disk\n option is selected, the entire disk is used for the installation. For the selected disk, all existing partitions and any data which they may contain, will be overwritten with the OpenIndiana operating system.\n\n\n\n\n\n\nPartition the disk\n\n\nWhen the \nPartition the disk\n option is selected, the bottom portion of this panel displays the disk partitioning layout. Prior to selecting this option, please be sure to review all the informational notes and warnings concerning the use of the partitioning option.\n\n\n\n\n\n\n\n\n\nIf you choose to partition the disk, you have additional options as shown above.\nPlease take some time to read the additional guidance provided below.\nWhen you have revised the partitioning as needed, click the \nNext\n button to continue.\n\n\n \nNOTE:\n\n\n\nRegardless of the partitioning option chosen for the installation, manual control of the OpenIndiana file system layout is not supported.\nDuring the installation, the Solaris fdisk partition is reformatted with a default ZFS file system layout.\nAll existing file systems on the Solaris partition are destroyed.\nThe installation uses a Solaris fdisk partition to create a ZFS storage pool.\n\n\n\n \nNOTE:\n\n\n\nIf you choose to partition the disk, review the following partitioning guidelines, then revise the partitioning panel settings as needed.\n\n\n\n\nOnly one Solaris partition is allowed.\nIf an existing Solaris partition is available, that Solaris partition will be the target for the installation.\nOr, if you do not have an existing Solaris partition, you can change any existing partition to a Solaris partition.\n\n\nYou can resize existing partitions, delete partitions, and create new partitions in this panel.\nFor this option, one existing Solaris partition must be available as the target for the installation.\n\n\nIf you used a third-party partitioning tool such as GParted, then the Disk panel displays a partition named Linux-swap on which you can install OpenIndiana.\n\n\nIn this panel, use the drop-down list for the Linux-swap partition name to change the partition name to Solaris.\n\n\n\n\n\n\n\n\n\n \nCAUTION:\n\n\n\nIf the existing partition table cannot be read, a warning is displayed, and the panel displays proposed partitioning.\nIn this case, all data on the selected disk is destroyed.\n\n\nIf the table can be read, then the following information applies:\n\n\n\n\nThe partitions are displayed in physically sequential order as they are laid out on the disk.\n\n\nResizing a Solaris partition destroys the data on that partition and all physically subsequent partitions.\n\n\nExisting data is not moved to conform to a new partition layout.\n\n\nHowever, resizing the last partition or appending a new partition does not affect the data that already exists in other partitions.\n\n\n\n\n\n\nNon-Solaris partitions cannot be resized.\n\n\nTo make additional space available, you can change an existing partition to Unused.\n\n\nHowever, if you change an existing partition to Unused, all subsequent non-Solaris partitions are also changed to Unused.\n\n\n\n\n\n\nNew partitions can only use the available space that follows the last defined partition.\n\n\nThe installer cannot utilize unallocated chunks of space between existing defined partitions.\n\n\nUse the fdisk(1M) command to create new partitions that use the free space between exiting partitions.\n\n\n\n\n\n\n\nThis screen enables you to type the correct time zone, date, and time for the system to be installed.\nThe top half of the panel displays a world map with major cities marked.\nThe bottom half of the panel provides drop-down selections.\nYou can choose the time zone either from the map or from the drop-down list.\n\n\n\n\nIf you select the time zone from the map, click on a city or click anywhere on the map.\n\n\n\n\nIf you click on the map, but not on a city, the map automatically magnifies that area.\nYou can click on a location within that magnified area.\nYou can drag the cursor to move the magnified area to a different location on the map.\nWhen you select a site on the map, the drop-down selections automatically populate with the time zone, date, and current time for that map selection.\nYou can right-click to undo magnification.\n\n\n\n\nInstead of using the map, you can make your selections in the drop-down fields.\n\n\n\n\nSelect your region, then select Location. Finally, select time zone.\nThe options for each drop-down field are determined by the selection made in the prior drop-down field.\n\n\n \nNOTE:\n\n\n\nAfter making your selections, you may also edit the default date and time that is provided.\n\n\n\nWhen the settings are correct, click Next to continue.\n\n\n\n\nThis screen enables you to select a language and locale.\nThese selections determine the language support, the default date and time, and other data formats for the installed system.\n\n\n\n\n\n\nYou can accept the default language selection or change the selection.\n\n\n\n\n\n\nA language selection is required.\nYou can select \u201cno default language support.\u201d\n\n\n\n\n\n\nThe language chosen automatically determines the available locales in the drop-down list.\nOnly one locale can be selected.\n\n\n\n\n\n\n \nNOTE:\n\n\n\nAny time that you log in to the installed system, you can change either the locale for that particular session or the default locale by using the Options button in the Login dialog box.\n\n\n\n\n\nReview the following guidelines:\n\n\n\n\nRoot login is not enabled either on the Live CD or on the installed system.\nYou must log in as the user that you create in this panel.\nAfter you log in, you can then become root to configure the system.\n\n\n\n\n \nNOTE:\n\n\n\nIf you do not create a user account in this panel, root is set up as a normal account on the installed system, instead of as a role.\nThis is the only situation where you can log in to the installed system as root.\n\n\n\n\n\n\n\nBoth the root password and user account are optional.\nHowever, for better security, do complete these fields.\nIf the root password is not defined, a reminder is displayed when you click Next.\nIf you do not want to define a root password, you can proceed.\n\n\n\n\n\n\nA user account requires only a Login name for the account to be valid.\nFor better security, however, do complete all fields.\nIf the user account information is not valid, a reminder is displayed when you click Next.\nIf you do not want to define a user account, you can proceed.\n\n\n\n\n\n\nType a computer name or accept the default.\nThe computer name field cannot be blank.\n\n\n\n\n\n\n\n\nThis screen summarizes the configuration options which will be used to perform the installation.\nBe sure to take the time to review this summary.\nIf a configuration option needs to be changed, you may do so by clicking the \nBack\n button.\nIf the installation options are acceptable, click the \nInstall\n button to begin the installation.\n\n\n \nCAUTION:\n\n\n\nOnce you have clicked the \nInstall\n button, the option to \nQuit\n the installation is no longer available.\nDo not attempt to interrupt an installation already in progress or the system will be left in an inconsistent state.\n\n\n\n\n\nDuring the installation, a progress bar is displayed.\nThe time required to complete the installation is dependent on your hardware.\n\n\n\n\nThe final screen displays completion messages.\nFrom within this panel you may review the installation log.\nTo view the installation log, click the link titled \nOpenIndiana Installation Log\n.\nThe installation log will open in a new window.\n\n\n\n\nUsing the slider located on the right side of the log viewer window, you may scroll up and down to view the entire log file.\nAfter reviewing the log, you may exit the log viewer by clicking the \nClose\n button.\n\n\nCongratulations!\n\nYou have completed the installation of the OpenIndiana Hipster operating system.\n\n\nFrom here you now have several options:\n\n\n\n\nQuit the installer by clicking the \nQuit\n button and continue to explore the Live Media.\n\n\nQuit the installer by clicking the \nQuit\n button and then manually shut down or restart your system.\n\n\nReboot the computer by clicking the \nReboot\n button.\n\n\n\n\n \nNOTE:\n\n\n\nTo prevent the Live Media from starting again after the reboot, eject the Live Media as the next boot begins.\nOr alternately, when presented with the Live Media installer options menu, select the \nBoot from Hard Disk\n option.\n\n\n\n \nNOTE:\n\n\n\nAfter you have installed OpenIndiana, if you have another operating system on your system, you might need to update the GRUB menu.\nThe GRUB menu displays a list of operating systems that can be booted.\nSolaris and Windows operating systems are displayed automatically on the GRUB menu.\nThe contents of the GRUB \nmenu.lst\n file define what is displayed in the GRUB menu when you boot the system.\nIf you have an additional OpenIndiana or a Linux OS that is not displayed on the menu, you may need to edit the GRUB \nmenu.lst\n file.\n\n\n\n \nDOC TEAM NOTE:\n\n\n\nWrite about:\n\n\n\n\nHow to configure the Linux GRUB2 bootloader to chainload an OpenIndiana partition\n\n\n\n\n[13:08:17] \ntsoome\n configure chainloader to load illumos partition\n[13:11:02] \ntsoome\n the chain load is the safest option - you let the native boot loader to do all the work and thats it.\n[14:10:43] \ntsoome\n yep, you need to configure it to read partition boot block and execute it.\n[14:11:43] \ntsoome\n this way you dont have to worry about updates etc\n\n\n\n\n\n\n\nInstall OpenIndiana using the Text Installer\n\n\n \nNOTE:\n\n\n\nThe text based guided install starts and runs within a command line console.\nNavigation within the installer is performed by pressing specifically designated navigation keys (\nF2\n, Tab, etc.).\n\n\nThe instructions for performing a text based install apply to the following installation scenarios:\n\n\n\n  \n Launching the text based installer icon from the Live Media (GUI) desktop.\n\n  \n Beginning a text based installation by booting from the OpenIndiana text based installer.\n\n\n\n\n\n\n\nNew for the 2016.10 release\n\n\nMirrors and RAIDZ are now supported install options!\n\n\n\n  \nTo install to a mirror, select 2 or more disks.\n\n  \nTo install to RAIDZ, select 3 or more disks.\n\n\n\n\n\n\n\n\n\n\nThe text based installation process begins with the welcome screen, which provides the following information:\n\n\n\n\nLocation of the installation log file\n\n\nNavigational guidance\n\n\n\n\n \nNOTE:\n\n\n\nAt any time during the installation process you may press the \nF6\n key for context specific help.\n\n\n\nWhen ready to begin, press the \nF2\n key to continue.\n\n\n\n\nOn this screen the installer displays the disks which have been discovered and are available for installation.\n\n\n\n\nUse the up and down arrow keys to navigate between the disks.\n\n\nTo select a disk, press the space bar while the disk is highlighted.\n\n\nA disk is selected for installation when an asterisk appears next to the disk.\n\n\n\n\nOnce you have selected the appropriate disk, press the \nF2\n key to continue.\n\n\n\n\nIf your system has only a single disk, it is already selected.\n\n\nIf your system has multiple disks, select the appropriate disk(s).\n\n\nTo install to a mirror, select 2 or more disks.\n\n\nTo install to RAIDZ, select 3 or more disks.\n\n\n\n\n\n\n\n\n \nNOTE:\n\n\n\n\nWhile the minimum and recommended disk sizes are technically accurate, they do not take into account periodic disk usage growth resulting from:\n\n\n\n\nZFS snapshots\n\n\nInstallation of additional software\n\n\nNew boot environments automatically created when running the \npkg update\n command\n\n\nNew backup boot environments automatically created when running the \npkg install\n command\n\n\n\n\nTo account for this, your disk should be at least 20GB or more.\n\n\n\n\n\n\n\nAfter pressing the \nF2\n key, you may be presented with warning shown above.\nIf reformatting the entire disk is acceptable with you, press the \nTab\n key to select \ncontinue\n and then press the \nEnter\n key.\nOtherwise press the \nEnter\n key to \ncancel\n.\n\n\nIf you select cancel, you will have the following options:\n\n\n\n\nSelect another disk\n\n\nAbort the installation so you may provide remedial action such as:\n\n\nModifying the partition table using Gparted\n\n\nAdding another disk to the system\n\n\n\n\n\n\n\n\n \nCAUTION:\n\n\n\nIf your disk contains a GPT disk label, the entire disk will be used.\n\n\n\n\nAny existing GPT partitions will be destroyed\n\n\nA new single GPT partition will be created.\n\n\n\n\nThis warning serves as your advisory.\n\n\n\n\n\n \nNOTE:\n\n\n\nThis screen will be available only when \n2 or more disks\n have been selected.\n\n\n\n\n\nIf 2 disks have been selected, the ZFS mirror option becomes available.\n\n\nIf 3 or more disks have been selected, the ZFS RAIDZ option become available.\n\n\n\n\nSelect between the options using the up and down arrow keys.\n\n\nWhen ready, press the \nF2\n key to continue.\n\n\n\n\n \nNOTE:\n\n\n\nThis screen will be available only when a \nsingle disk\n has been selected.\n\n\n\nIn this screen you are presented with the following choices for how to partition the disk:\n\n\n\n\nUse the whole disk (EFI)\n\n\nUse a partition of the disk (MBR)\n\n\n\n\nSelect between the options using the up and down arrow keys.\n\n\nWhen ready, press the \nF2\n key to continue.\n\n\n\n\n \nNOTE:\n\n\n\nThis screen will be available only when the \nUse a partition of the disk (MBR)\n option has been selected.\n\n\n\nThis screen provides the following options:\n\n\n\n\nSelect the partition where you would like to install Openindiana.\n\n\nChange the partition type\n\n\nChange the partition size\n\n\nFree up space by deleting a partition\n\n\n\n\nNavigate the fields using the arrow keys.\nChange a partition type using the \nF5\n key.\n\n\nWhen ready, press the \nF2\n key to continue.\n\n\n\n\n \nNOTE:\n\n\n\nWe have illustrated this screen twice as 2 different tasks are required.\n\n\nIn this step you will configure the hostname.\n\n\n\nAt the top portion of the screen specify the computer name (system hostname) you wish to use.\nBy default the computer name is \nopenindiana\n.\nUsing the backspace key, you may remove the default hostname and provide another hostname.\n\n\nWhen ready, proceed to the next screen shot below where you will be provided additional guidance for completing this screen.\n\n\n\n\n \nNOTE:\n\n\n\nWe have illustrated this screen twice as 2 different tasks are required.\n\n\nIn this step you will select your network configuration type.\n\n\n\nAfter configuring the system hostname, navigate to the lower portion of the screen to select your networking configuration.\n\n\nFrom the lower portion of this screen you have the following choices:\n\n\n\n\nAutomatically configure the (networking) connection (using DHCP)\n\n\nManually configure the network settings by entering the information on the next screen\n\n\nDo not configure the network at this time\n\n\n\n\nSelect between the options using the up and down arrow keys.\n\n\nWhen ready, press the \nF2\n key to continue.\n\n\n\n\n \nNOTE:\n\n\n\nThis screen will be available only when the \nManually\n configure network option has been selected.\n\n\n\n\nThe values illustrated above are for example only, do not use them.\n\n\nSubstitute each field with correct values for your network.\n\n\n\n\n\n\n\nIn the fields provided, enter in the following information:\n\n\n\n\nIP Address\n\n\nNetmask\n\n\nGateway\n\n\nDNS\n\n\nDomain\n\n\n\n\nNavigate between the fields using the up and down arrow keys.\n\n\nWhen ready, press the \nF2\n key to continue.\n\n\n\n\nThe next few screens illustrate time zone configuration.\n\n\nSelect your time zone \nregion\n by navigating up and down with the arrow keys.\n\n\nWhen ready, press the \nF2\n key to continue.\n\n\n \nNOTE:\n\n\n\nWhen selecting the \nUTC/GMT\n time zone region, only this screen will be presented.\n\n\n\n\n\nSelect your time zone \nlocation\n by navigating up and down with the arrow keys.\n\n\nWhen ready, press the \nF2\n key to continue.\n\n\n\n\nSelect your \ntime zone\n by navigating up and down with the arrow keys.\n\n\nWhen ready, press the \nF2\n key to continue.\n\n\n\n\nIn this screen you may reconfigure the date and time as necessary.\n\n\nUsing the up and down arrow keys, navigate between the fields.\n\n\nWhen ready, press the \nF2\n key to continue.\n\n\n\n\nIn this screen you are presented with several fields to configure.\n\n\n\n\nRoot password\n\n\nConfirm Root password\n\n\nReal name\n\n\nUser name\n\n\nUser password\n\n\nConfirm user password\n\n\n\n\nUsing the up and down arrow keys, navigate between the fields and enter the required information.\n\n\nWhen ready, press the \nF2\n key to continue.\n\n\n \nNOTE\n\n\n\n\n\n\nThe first user created on the system is granted the root role via \nRole Based Access Control\n (RBAC).\n\n\nIn effect this means the following:\n\n\nWithout any further configuration, the specified user will be granted the authority to perform administrative task by assuming the root role as needed.\n\n\n\n\n\n\n\n\nPlease take note the following additional information:\n\n\n\n\nImmediately after installation the root password is automatically expired and needs to be changed prior to being used for any administrative task.\n\n\n\n\n\n\n\n\n\nNow that you have completed the installation configuration, you are presented with an \nInstallation Summary\n.\n\n\nIf these configuration settings are correct, you may begin the installation by pressing the \nF2\n key.\n\n\n\n\nDepending on the speed of your computer, the installation may take several minutes to complete.\nInstallation progress is measured by means of a status bar.\n\n\n\n\nWhen the installation is complete, a summary screen is presented.\n\n\n\n\nThe installation logs are available by pressing the \nF4\n key.\n\n\nIf you ran the installation from Live Media, you may exit the installation by pressing the \nF9\n key.\n\n\nOtherwise, you will want to reboot the system by pressing the \nF8\n key.\n\n\n\n\n\n\nIf you chose to view the installation logs, you will be presented with the screen above.\n\n\nTo return to the summary screen, press the \nF3\n key.\n\n\nInstalling OpenIndiana using the text installer (DVD ISO or USB)\n\n\nThe text installer DVD ISO and USB installer options are not graphical nor do they provide a live environment.\nWhen booting from the text based installer, you are presented with the following choices:\n\n\n\n\nInstall OpenIndiana\n\n\nSpawn a shell to be used as a rescue disk.\n\n\n\n\nThe procedure for installing from the text based installer follows the same process as the previously described \nInstall OpenIndiana using the Text Installer\n\n\nTroubleshooting Installations\n\n\n\n\nIf you do not see a menu after booting your computer with the DVD or USB device, and instead see some text and a \ngrub\n prompt, there may be an error in your copy of the installer, or it was created incorrectly.\n\n\nIf you see a \nlogin:\n prompt after selecting your keyboard and language and no desktop appears after several seconds, there may be a problem with the drivers for your graphics hardware.\n\n\nPlease let us know via IRC or the mailing list if this happens.\n\n\nWhen you contact us, please include any error messages you see on the console, as well as the output of the \nsvcs -xv\n command.\n\n\nIf possible, also include the contents of the file \n/var/log/Xorg.0.log\n.\n\n\n\n\n\n\n\n\nPost Installation Steps\n\n\nBoot Menu - Post Install\n\n\nAfter successfully installing OpenIndiana Hipster, a new boot menu option becomes available.\nAs shown in the screen below, option # 6 allows you to select the boot environment.\n\n\n\n\nEach time you perform an update of software installed on OpenIndiana Hipster, a new boot environment may be created.\nOption # 6 allows you to select from among them.\n\n\n\n\nAfter using OpenIndiana for a period of time, several boot environments will accumulate, with the label for each environment incrementing numerically.\nThe image above illustrates what this looks like on a system with several boot environment choices.\n\n\nResetting the root password\n\n\nAfter installation, the root password is immediately expired and you will be required to change it.\n\n\nUse the following steps to change the root password:\n\n\n\n\nOpen a Terminal\n\n\nExecute \nsu -\n and provide the password you chose for your account at installation time\n\n\nYou will be informed that root's password has expired and prompted to change it\n\n\nOnce changed you can exit the su session\n\n\nYou should be able to login/authenticate as root now.\n\n\n\n\nImage Package System (IPS)\n\n\n \nNOTE:\n\n\n\nThe image packaging system is delivered as part of the OpenIndiana userland.\nAs such, the pkg related man pages are not available on the illumos.org website.\nThese pages are only available by running the man page viewer locally on your system.\n\n\n\n \nDOC TEAM NOTE:\n\n\n\n\nHave a look at: \npgk cheat sheet\n to see whether there is anything there which we might want to import and validate.\n\n\n\n\n\nIntroduction\n\n\n\n\n\nAfter an initial installation of the OpenIndiana Hipster operating system, you will find many of the software applications you use on a regular basis are not immediately available to you.\nThese software applications are available as packages in a remote Image Packaging System (IPS) repository for downloading and installing over the Internet.\n\n\nWritten in Python, IPS is a network-centric packaging system which enables users to connect to a remote repository for the purpose of downloading and installing packages.\nOpenIndiana Hipster uses IPS for its packaging system.\n\n\nBesides installing packages from a repository, users can also perform the following tasks:\n\n\n\n\nCreate and publish their own IPS packages\n\n\nSet up an OpenIndiana Hipster repository\n\n\nMirror an existing repository\n\n\nPublish existing packages to a repository\n\n\n\n\nOnce you have installed packages, IPS enables you to search, update, and manage those packages on your system.\n\n\nWith IPS , you can upgrade your system to a newer build of OpenIndiana Hipster, install and update your software to the latest available versions, and retrieve packages from mirror repositories.\n\n\nIf the system on which IPS is installed is located on a network, IPS can automatically access the OpenIndiana Hipster package repository.\nFor OpenIndiana Hipster, your IPS client can access the packages from \nhttps://pkg.openindiana.org/hipster\n.\n\n\nIPS packages\n\n\nAn IPS package is defined as a collection of files, directories, links, drivers and dependencies in a defined format.\n\n\nNote the following points about IPS packages:\n\n\n\n\nAn IPS package consists of a set of actions.\nActions are defined when an IPS package is created.\nActions are used for defining the files and directories of the package, setting package attributes, declaring dependencies on other packages, creating users and groups, and installing device drivers.\nSome actions may optionally have tags that provide meta information about the action such as locale information and debug configuration.\n\n\nIPS packages can only be installed from an IPS repository.\n\n\nIPS package repositories can be local to the system or on a remote networked system.\n\n\n\n\n\n\n\n\nIPS commands\n\n\nThe Image Packaging System software provides the following commands:\n\n\n\n\n\n\n\n\nCommand\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\npkg\n1\n\n\nUse the \npkg\n1\n command to create an image, to install packages to your image, and to manage packages on your image.\n\n\n\n\n\n\npkgsend\n1\n\n\nUse the \npkgsend\n1\n command to publish packages from your image to an existing repository.\n\n\n\n\n\n\npkg.depotd\n1M\n\n\nUse the \npkg.depotd\n1M\n command to create and manage your own network repository or set up a mirror repositories.\n\n\n\n\n\n\npkgrecv\n\n\nUse the \npkgrecv\n command to download the contents of a package from a server. The user can then modify the contents by adding additional package attributes and republish the package with the \npkgsend\n command.\n\n\n\n\n\n\n\n\n \nNOTE:\n\n\n\n\n\n\nThe \npkg\n5\n man page describes the overall Image Packaging System.\n\n\nThe \npkg\n1\n man page describes the Image Packaging System retrieval client.\n\n\n\n\n\n\n\npkg\n1\n uses FMRIs\n\n\nEach IPS package is represented by a \nFault Management Resource Identifier\n (FMRI).\nThe pkg\n1\n command uses valid FMRI package information to perform its command actions.\nThe FMRI includes descriptive information about the package, such as the package name, version information, and date.\n\n\nFor example:\n\n\nFMRI: pkg://openindiana.org/image/editor/gimp@2.8.16-2016.0.0.0:20160702T042138Z\n\n\n\n\n\n\nScheme \u2013 pkg\n\n\nAuthority \u2013 openindiana.org\n\n\nPackageName \u2013 gimp\n\n\nVersion String \u2013 Consists of three components :\n\n\nBuild Version \u2013 2.8.16\n\n\nBranch Version \u2013 2016.0.0.0\n\n\nTimestamp \u2013 20160702T042138Z\n\n\n\n\n\n\n\n\nFinding help with pkg\n\n\nThe primary source of help for any OpenIndiana command is to review the man page for the command.\nTherefore, be sure to consult the \npkg\n1\n man page for full command information and usage examples.\n\n\nFor example: \nman pkg\n\n\nTo reference command usage directly from the command line, use \npkg help\n.\n\n\nFor example:\n\n\npkg help\n\n\nUsage:    pkg [options] command [cmd_options] [operands]\nThe following commands are supported:\n\nPackage Information  : list           search         info      contents\nPackage Transitions  : update         install        uninstall\n                       history        exact-install\nPackage Maintenance  : verify         fix            revert\nPublishers           : publisher      set-publisher  unset-publisher\nPackage Configuration: mediator       set-mediator   unset-mediator\n                       facet          change-facet\n                       variant        change-variant\nImage Constraints    : avoid          unavoid        freeze    unfreeze\nImage Configuration  : refresh        rebuild-index  purge-history\n                       property       set-property   add-property-value\n                       unset-property remove-property-value\nMiscellaneous        : image-create   dehydrate      rehydrate\nFor more info, run: pkg help \ncommand\n\n\n\n\n\nTo retrieve information about a specific command use: \npkg help [command]\n\n\nFor example:\n\n\npkg help update\n\n\nUsage:\n        pkg update [-fnvq] [-C n] [-g path_or_uri ...] [--accept] [--ignore-missing]\n            [--licenses] [--no-be-activate] [--no-index] [--no-refresh]\n            [--no-backup-be | --require-backup-be] [--backup-be-name]\n            [--deny-new-be | --require-new-be] [--be-name name]\n            [-r [-z image_name ... | -Z image_name ...]]\n            [--sync-actuators | --sync-actuators-timeout timeout]\n            [--reject pkg_fmri_pattern ...] [pkg_fmri_pattern ...]\n\n\n\n\nSearching for packages\n\n\nThe \npkg search\n command is used to search locally or remotely for information about packages.\nThe syntax of the command is \npkg search [options] [package]\n.\nIf no search options are specified, the command defaults to performing a search of all the remote repositories defined on the system.\nUsing the \n-l\n option, you may restrict the search to the local system.\n\n\nFor example:\n\n\npkg search xchat\n\n\nINDEX                ACTION VALUE                                   PACKAGE\npkg.summary          set    XChat IRC Client                        pkg:/desktop/irc/xchat@2.8.8-2016.0.0.5\npkg.summary          set    HexChat is an IRC client based on XChat pkg:/desktop/irc/hexchat@2.12.1-2016.0.0.1\nbasename             file   usr/bin/xchat                           pkg:/desktop/irc/xchat@2.8.8-2016.0.0.5\ncom.oracle.info.name set    xchat                                   pkg:/desktop/irc/xchat@2.8.8-2016.0.0.5\npkg.fmri             set    openindiana.org/desktop/irc/xchat       pkg:/desktop/irc/xchat@2.8.8-2016.0.0.5\n\n\n\n\nAs you can see, the search results include package names along with additional information.\nTo search for package names only, include the \n-p\n option.\n\n\nFor example:\n\n\npkg search -p xchat\n\n\nPACKAGE                                    PUBLISHER\npkg:/desktop/irc/hexchat@2.12.1-2016.0.0.1 openindiana.org\npkg:/desktop/irc/xchat@2.8.8-2016.0.0.5    openindiana.org\n\n\n\n\n \nNOTE:\n\n\n\nWhen using the \npkg search\n command, remember it works much like the Unix \nfind\n command.\nIf you have difficulty finding a package you know should exist, try modifying your search by including wildcards.\n\n\n\nThe \npkg search\n command may also be used to find the package containing a particular file.\n\n\nFor example:\n\n\npkg search -l /usr/bin/gpg2\n\n\nINDEX      ACTION VALUE        PACKAGE\npath       file   usr/bin/gpg2 pkg:/crypto/gnupg@2.0.28-2016.0.0.0\n\n\n\n\nListing the status of packages\n\n\nTo list the status of locally installed packages, use the \npkg list [package]\n command.\n\n\nFor example:\n\n\npkg list bash\n\n\nNAME (PUBLISHER)                                  VERSION                    IFO\nshell/bash                                        4.3.46-2016.0.0.0          i--\n\n\n\n\n \nNOTE:\n\n\n\nTo list all the packages installed on the local system, use \npkg list\n without specifying a package.\n\n\n\nListing information about packages\n\n\nTo list detailed information about a locally installed package, use the \npkg info [package]\n command.\nIf the package is not installed on the local system, use the \n-r\n option to search the remote repositories defined on the system.\n\n\nFor example:\n\n\npkg info -r gimp\n\n\n          Name: image/editor/gimp\n       Summary: The Gimp image editor\n      Category: Applications/Graphics and Imaging\n         State: Not installed\n     Publisher: openindiana.org\n       Version: 2.8.16\n        Branch: 2016.0.0.2\nPackaging Date: July 30, 2016 12:04:41 AM\n          Size: 65.01 MB\n          FMRI: pkg://openindiana.org/image/editor/gimp@2.8.16-2016.0.0.2:20160730T000441Z\n   Project URL: http://www.gimp.org/\n    Source URL: http://download.gimp.org/pub/gimp/v2.8/gimp-2.8.16.tar.bz2\n\n\n\n\nListing the contents of packages\n\n\nTo list the entire contents of a package, use the \npkg contents [package]\n command.\nIf the package is not installed on the local system, use the \n-r\n option to search the remote repositories defined on the system.\n\n\nListing the dependencies of packages\n\n\nThe \npkg contents\n command can also be used to list the dependencies found in a package.\nIf the package is not installed on the local system, be sure to include the \n-r\n option.\n\n\nFor example:\n\n\npkg contents -r -t depend -o fmri xchat\n\n\nFMRI\npkg:/library/desktop/gdk-pixbuf@2.31.6-2016.0.0.0\npkg:/library/desktop/gtk2@2.24.30-2016.0.0.0\npkg:/library/desktop/libsexy@0.1.11-2016.0.0.0\npkg:/library/desktop/pango@1.36.8-2016.0.0.2\npkg:/library/glib2@2.43.4-2016.0.0.3\npkg:/library/security/openssl@1.0.2.8-2016.0.0.3\npkg:/runtime/perl-522@5.22.1-2016.0.0.1\npkg:/runtime/python-27@2.7.12-2016.0.0.0\npkg:/runtime/tcl-8@8.5.19-2016.0.0.1\npkg:/system/library/libdbus-glib@0.100.2-2016.0.0.0\npkg:/system/library@0.5.11-2016.0.0.15685\npkg:/x11/library/libx11@1.6.3-2016.0.0.0\n\n\n\n\nInstalling packages\n\n\nUse the following command to install a package.\n\n\npkg install [options] [packages]\n\n\nSome commonly used options are:\n\n\n\n\n\n\n\n\nOption\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n-v\n\n\nIssue verbose progress messages\n\n\n\n\n\n\n-n\n\n\nPerform a dry run (no actual changes are made)\n\n\n\n\n\n\n-q\n\n\nHides progress messages\n\n\n\n\n\n\n\n\nFor example:\n\n\npkg install xchat\n\n\n           Packages to install:   1\n            Packages to update:   1\n            Services to change:   2\n       Create boot environment:  No\nCreate backup boot environment: Yes\n\nDOWNLOAD                                PKGS         FILES    XFER (MB)   SPEED\nCompleted                                2/2         38/38      2.6/2.6  746k/s\n\nPHASE                                          ITEMS\nRemoving old actions                             4/4\nInstalling new actions                         69/69\nUpdating modified actions                        2/2\nUpdating package state database                 Done\nUpdating package cache                           1/1\nUpdating image state                            Done\nCreating fast lookup database                   Done\n\n\n\n\n \nNOTE:\n\n\n\n\n\n\nThe \npkg install\n command is also used to update specific packages on the system.\n\n\nThe \npkg install\n command automatically checks for newer versions of specific packages or package groups and installs them if they are available.\nAny dependent packages are also automatically updated.\n\n\nTo install a specific version of a package you may substitute the common name for the FMRI.\n\n\n\n\n\n\n\nUpdating packages\n\n\nThe command to use for updating packages on the system is:\n\n\npkg update [options] [packages]\n\n\nSome commonly used options are:\n\n\n\n\n\n\n\n\nOption\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n-v\n\n\nIssue verbose progress messages\n\n\n\n\n\n\n-n\n\n\nPerform a dry run (no actual changes are made)\n\n\n\n\n\n\n-q\n\n\nHides progress messages\n\n\n\n\n\n\n\n\nTo update all the packages installed on a system to their latest available version, use the \npkg update\n command without specifying any package names.\n\n\nFor example:\n\n\npkg update\n\n\n            Packages to remove:    4\n           Packages to install:   11\n            Packages to update: 1018\n            Packages to change:    2\n           Mediators to change:    1\n       Create boot environment:  Yes\nCreate backup boot environment:   No\n\nDOWNLOAD                                PKGS         FILES    XFER (MB)   SPEED\nCompleted                          1035/1035     7502/7502  303.4/303.4  886k/s\n\nPHASE                                          ITEMS\nRemoving old actions                       3931/3931\nInstalling new actions                     6889/6889\nUpdating modified actions                11999/11999\nUpdating package state database                 Done\nUpdating package cache                     1022/1022\nUpdating image state                            Done\nCreating fast lookup database                   Done\n\nA clone of openindiana-1 exists and has been updated and activated.\nOn the next boot the Boot Environment openindiana-2 will be\nmounted on '/'.  Reboot when ready to switch to this updated BE.\n\n\n---------------------------------------------------------------------------\nNOTE: Please review release notes posted at:\n\nhttp://wiki.openindiana.org/display/oi/oi_hipster\n---------------------------------------------------------------------------\n\n\n\n\nRemoving packages\n\n\nTo remove a package from the system, use the command: \npkg uninstall [options] [packages]\n\n\nDowngrading packages\n\n\nIn addition to installing, upgrading, and removing packages, it is also possible to downgrade packages.\nTo downgrade packages, use the \npkg update\n command and specify the versions of the packages you wish to install.\nWhere the package has dependencies, you will need to specify the versions of the dependencies as well.\nThe \npkg\n utility will remove the newer versions and replace them with the versions you have specified.\n\n\nFor example:\n\n\npkg update pkg://userland/library/audio/gstreamer@0.10.36 \\\nlibrary/audio/gstreamer/plugin/base@0.10.36 \\\nlibrary/audio/gstreamer/plugin/good@0.10.31\n\n\n\n\n \nNOTE:\n\n\n\nThe OpenIndiana project uses package incorporations to ensure packages are maintained to specific versions.\nWhere packages are included in an incorporation, it is not possible to revert to an earlier (or newer) version of the package without first relaxing the restrictions imposed by the incorporation.\nWhere packages are not restricted by an incorporation, you may freely revert to earlier package versions.\n\n\n\nTo relax the restrictions on a package, the \npkg change-facet\n command is used.\n\n\nThe syntax of the command is \npkg change-facet facet.version-lock.[package]=false\n\n\nFor example:\n\n\npkg change-facet facet.version-lock.library/security/gstreamer=false\n\n\n\n\nIPS package repositories\n\n\nAs previously mentioned, the IPS repository is the remote network location where IPS packages reside.\nBelow is a list of commands for adding, removing, or replacing repositories.\n\n\n\n\n\n\n\n\nTask\n\n\nCommand\n\n\n\n\n\n\n\n\n\n\nList configured repositories\n\n\npkg publisher\n\n\n\n\n\n\nAdd a repository\n\n\npkg set-publisher \\\n \n \n-g \nrepository_URL\n \\\n \n \nrepository_name\n\n\n\n\n\n\nRemove a repository\n\n\npkg set-publisher \\\n \n \n-G \nrepository_URL\n \\\n \n \nrepository_name\n\n\n\n\n\n\nReplace a repository\n\n\npkg set-publisher \\\n \n \n-G \nold_repository_URL\n \\\n \n \n-g \nnew_repository_URL\n \\\n \n \nrepository_name\n\n\n\n\n\n\n\n\nExample (Listing the repositories configured on the system):\n\n\npkg publisher\n\n\nPUBLISHER                   TYPE     STATUS P LOCATION\nopenindiana.org             origin   online F https://pkg.openindiana.org/hipster/\nhipster-encumbered          origin   online F https://pkg.openindiana.org/hipster-encumbered/\n\n\n\n\nExample (Replacing a repository):\n\n\npkg set-publisher \\\n-G http://pkg.openindiana.org/hipster-2015 \\\n-g https://pkg.openindiana.org/hipster openindiana.org\n\n\n\n\nListing information about repositories\n\n\nWhile the \npkgrepo\n command is primarily used for creating and working with IPS repositories.\nIt can also be used for querying the contents of a repository.\n\n\nFor example:\n\n\npkgrepo info -s https://pkg.openindiana.org/hipster/\n\n\nPUBLISHER       PACKAGES STATUS           UPDATED\nopenindiana.org 3692     online           2016-08-21T07:03:11.566484Z\n\n\n\n\nIf you want to directly query the remote repository for a full list of all available packages, you can do so using the \npkgrepo list\n command.\n\n\n\n\npkgrepo list -s \nrepo_URL\n\n\n\n\nDo keep in mind you may want to filter the output of the command in some way to keep the list more manageable.\nIf not, you're likely to see thousands of lines scroll through your console window.\n\n\nIPS package repository precedence\n\n\nWhen multiple remote IPS repositories are associated with a system and when using the \npkg\n command-line interface with only package names, the following rules apply.\nThese rules can be overridden by using explicit publishers and package version numbers.\n\n\n\n\n\n\n\n\nPackage Installation Type\n\n\nRules When Only Package Names Are Provided\n\n\n\n\n\n\n\n\n\n\nNew package installations\n\n\nThe latest available version of new packages are always installed from the preferred publisher unless the publisher is provided in the FMRI during installation. Even if later versions of the package are available in other publishers, those later versions are not installed by default.\n\n\n\n\n\n\nPackage updates: package originally installed from preferred publisher\n\n\nIf the package was originally installed from the preferred publisher, then the latest available update of the package can be installed from the \ncurrent\n preferred publisher. The package can be install from the \ncurrent\n preferred even if the preferred publisher designation had been moved to another publisher after the package had been originally installed. Even if later versions of the package are available in other publishers, those later versions are not installed by default.\n\n\n\n\n\n\nPackage updates: package originally installed from non-preferred publisher\n\n\nIf the package was originally installed from a non-preferred publisher, then the latest available update of the package is installed from the publisher from which the package was originally installed. Even if later versions of the package are available in other publishers, those later versions are not installed by default.\n\n\n\n\n\n\n\n\nListing package history\n\n\nTo list the IPS transactional history, use the \npkg history\n command.\n\n\nFor example:\n\n\npkg history\n\n\nSTART                    OPERATION                CLIENT             OUTCOME\n2016-04-21T03:30:04      purge-history            pkg                Succeeded\n2016-07-02T16:09:56      uninstall                pkg                Succeeded\n2016-07-02T16:10:33      uninstall                pkg                Succeeded\n2016-07-02T16:11:08      uninstall                pkg                Succeeded\n2016-07-02T16:11:42      uninstall                pkg                Succeeded\n2016-07-02T16:12:18      set-property             pkg                Succeeded\n2016-07-02T16:12:22      set-property             pkg                Succeeded\n2016-07-02T16:37:06      refresh-publishers       pkg                Succeeded\n2016-07-02T16:37:06      update                   pkg                Succeeded\n2016-07-02T16:37:32      rebuild-image-catalogs   pkg                Succeeded\n2016-07-02T17:33:44      install                  pkg                Succeeded\n2016-07-02T17:35:11      install                  pkg                Succeeded\n2016-07-02T18:31:39      install                  pkg                Succeeded\n2016-07-04T19:49:19      install                  pkg                Succeeded\n2016-07-04T19:49:23      refresh-publishers       pkg                Succeeded\n2016-07-04T19:49:56      rebuild-image-catalogs   pkg                Succeeded\n2016-07-09T01:16:43      install                  pkg                Succeeded\n2016-07-09T01:16:45      refresh-publishers       pkg                Succeeded\n2016-07-09T01:17:20      rebuild-image-catalogs   pkg                Succeeded\n2016-07-09T11:33:05      install                  pkg                Succeeded\n2016-07-09T11:33:07      refresh-publishers       pkg                Succeeded\n2016-07-09T11:33:37      rebuild-image-catalogs   pkg                Succeeded\n2016-07-09T12:27:23      update                   pkg                Succeeded\n\n\n\n\nTo view more details of a particular IPS transaction, use the command:\n\n\npkg history [-l] [-t time_stamp]\n\n\nFor example:\n\n\npkg history -l -t 2016-07-09T11:33:05\n\n\n\n\nThe \n-l\n option provides comprehensive details of each transaction\n\n\nThe \n-t\n option allows you to specify a particular transaction\n\n\n\n\nIPS package archives (.p5p)\n\n\nWhen the IPS system was originally conceived there was no standard on-disk format for an IPS package.\nHence, unlike a .rpm file, an SVR4 package, or a .nbm file, it was not possible to transfer IPS packages from system to system.\nThe remote IPS repository where the IPS package resided was the only source for the package.\nThis is because in its native state, the IPS package is not something you can normally download as a single archive file.\n\n\nRecognizing this limitation of IPS, the \n.p5p\n IPS archive format was developed.\nFor IPS archives, files are stored in the pax archive format, along with additional metadata, such as IPS manifest files, and a specific layout of the contents.\n\n\nIPS p5p archives are not like Linux packages where you can install software directly from the package.\nInstead p5p archives are a portable repository format containing a collection of packages.\nThis allows you to create p5p archives for transfer to non-networked systems.\nIPS package archives are also useful for sharing packages for the purpose of testing.\n\n\nIPS archives allow you to:\n\n\n\n\nDownload one or more packages (along with all necessary dependencies) into a p5p archive file.\n\n\nCreate a local repository based on the contents of the p5p archive file.\n\n\nInstall packages from the locally created repository.\n\n\n\n\nCreating the p5p package\n\n\nTo create an IPS archive, the \npkgrecv\n command is used.\n\n\nFor example, to create a \n.p5p\n IPS package archive containing the package \nuserland/web/browser/firefox\n and all of its dependencies from the repository located at \nhttp://example.com:10000\n, use the following command:\n\n\npkgrecv -s http://example.com:10000 -d ~/firefox_test.p5p -a -r pkg://userland/web/browser/firefox@45.3.0-2016.0.0.0:20160817T064143Z\n\n\n\n\nListing the contents of a p5p package\n\n\nThere are at least two different ways to view the contents of an IPS archive.\n\n\npkgrepo -s ~/firefox_test.p5p list\n\n\nPUBLISHER NAME                                          O VERSION\nuserland  library/expat                                   2.1.0-2015.0.1.1:20150901T125810Z\nuserland  library/glib2                                   2.43.4-2016.0.0.4:20160705T121550Z\nuserland  library/glib2/charset-alias                     2.43.4-2016.0.0.4:20160705T121609Z\nuserland  system/library/fontconfig                       2.11.95-2016.0.0.0:20160512T122747Z\nuserland  web/browser/firefox                             45.3.0-2016.0.0.0:20160817T064143Z\nuserland  x11/library/toolkit/libxt                       1.1.4-2016.0.0.0:20160706T165209Z\n\n\n\n\nThis also works:\n\n\npkg list -f -g  ~/firefox_test.p5p\n\n\nNAME (PUBLISHER)                                  VERSION                    IFO\nlibrary/expat (userland)                          2.1.0-2015.0.1.1           ---\nlibrary/glib2 (userland)                          2.43.4-2016.0.0.4          ---\nlibrary/glib2/charset-alias (userland)            2.43.4-2016.0.0.4          ---\nsystem/library/fontconfig (userland)              2.11.95-2016.0.0.0         ---\nweb/browser/firefox (userland)                    45.3.0-2016.0.0.0          ---\nx11/library/toolkit/libxt (userland)              1.1.4-2016.0.0.0           ---\n\n\n\n\nAdding the package as a local repository\n\n\npkg set-publisher -p firefox_test.p5p\n\n\nInstalling software from the local repository\n\n\npkg install firefox@45.3.0-2016.0.0.0:20160817T064143\n\n\nLegacy package management tools\n\n\nOpenIndiana continues to support the use of legacy package tools for managing SVR4 packages.\nHere are some of the available tools:\n\n\n\n\npkginfo\n\n\npkgadd\n\n\npkgrm\n\n\n\n\n3rd party package management tools\n\n\n \nDOC TEAM NOTE:\n\n\n\nITEMS TO WRITE ABOUT:\n\n\n\n\nNeed to answer the question \u201cWhere and how can I install more software?\u201d\n\n\nDiscuss 3rd party package managers (\npkgin\n, etc.)\n\n\nDiscuss the various 3rd party repos, what's available in them, and which\n  might break compatibility, etc.:\n\n\npkgsrc\n\n  (\nwiki page\n,\n  \nNetBSD wiki page\n)\n\n\nJoyent's pkgsrc binary packages\n\n  (\ninstall on illumos\n,\n  \nwiki page\n)\n\n\nopencsw\n\n\nSFE (spec-files-extra)\n\n  (\nwiki page\n,\n  \nother wiki page\n):\n  describe and explain how it differs from OI and other repos.\n\n\n\n\n\n\nHow to add additional repos, etc.\n\n\nHow to compile your own software.\n\n\nExisting wiki pages:\n  \nKnowledge base\n,\n  \nCompiling software on OpenIndiana\n\n\nAlso could look here (might be outdated):\n  \nCompiling Software on Solaris\n\n\n\n\n\n\nGiven the limited number of IPS packages currently available, these are\n  pretty important subjects to write about.\n\n\n\n\n\n\n\nIn addition to IPS and SVR4 package management tools, it is also possible to use \npkgsrc\n.\n\n\nFor more information about pkgsrc, see the \nJoyent package source website\n.\n\n\n \nCAUTION:\n\n\n\n\nThe use of 3rd party repositories and package managers increases the likelihood of conflicts between package versions and their dependencies.\nFurthermore, the OpenIndiana project cannot guarantee the qualify of packages obtained from 3rd party repositories.\nTherefore, use 3rd party repositories and 3rd party package tools at your own risk.\n\n\n\n\n\nManaging Boot Environments\n\n\nA boot environment is a bootable instance of an OpenIndiana operating system image plus any other application software packages installed into that image.\nYou can maintain multiple boot environments on your system, and each boot environment could have different software versions installed.\nUpon the initial installation of OpenIndiana onto your system, a boot environment is created.\nUse the \nbeadm\n1M\n utility to administer additional boot environments on your system.\n\n\nThe \nbeadm\n utility is designed to work in concert with the ZFS file system and the IPS package manager.\n\n\nWhy use multiple boot environments?\n\n\nWith multiple boot environments, the process of updating software becomes a low risk operation because you can create backup boot environments before making any software updates to your system.\nIf needed, you have the option of booting a backup boot environment.\n\n\nHere are some specific examples where having more than one OpenIndiana boot environment, and managing them with the \nbeadm\n utility, is useful:\n\n\n\n\n\n\nWhen you use the \npkg update\n command to update all the packages in your active OpenIndiana boot environment, this process automatically creates a clone of that boot environment.\nThe packages are updated in the clone rather than in the original boot environment.\nAfter successfully completing the updates, the new clone is activated.\nThen, the clone will become the new default boot environment on the next reboot.\nThe original boot environment remains on the GRUB menu as an alternate selection.\nYou can use the \nbeadm list\n command to see a list of all the boot environments on the system, including the backup boot environment that still has its original, unchanged software.\nIf you are not satisfied with the updates made to the environment, you can use the \nbeadm activate\n command to specify that the backup will become the default boot environment on the next reboot.\n\n\n\n\n\n\nIf you are modifying a boot environment, you can take a snapshot of that environment at any stage during modifications by using the \nbeadm create\n command.\nA snapshot is a read-only image of a dataset or boot environment at a given point in time.\nYou can create custom names for each snapshot that identify when or why the snapshot was created.\nFor example, if you are doing monthly upgrades to your boot environment, you can capture snapshots for each monthly upgrade.\nYou can use the \nbeadm list -s\n command to view the available snapshots for a boot environment.\nA snapshot is not bootable.\nBut, you can create a boot environment, based on that snapshot, by using the \n-e\n option for the \nbeadm create\n command.\nThen you can use the \nbeadm activate\n command to specify that this boot environment will become the default boot environment on the next reboot.\n\n\n\n\n\n\nYou can maintain more than one boot environment on your system, and perform various upgrades on each of them as needed.\nFor example, you can clone a boot environment by using the \nbeadm create\n command.\nA clone is a bootable copy of a boot environment.\nThen, you can install, test, and update different software packages on the original boot environment and on its clone.\nAlthough only one boot environment can be active at a time, you can mount an inactive boot environment by using the \nbeadm mount\n command.\nThen you can use the \npkg update\n command with the \n-R\n option to update all the packages in that inactive, mounted environment.\nOr, use the \npkg install packagename\n with the \n-R\n option to update specific packages on that environment.\n\n\n\n\n\n\n\nWhen \npkg\n creates new boot environment, it determines its name using \nauto-be-name\n image property.\nWhen prefixed with \"time:\" string, the remaining part of property is interpreted as \nstrftime(3C)\n argument.\nIf \npkg\n can't produce unique boot environment name based on auto-be-name image property,\nit uses the property as base to generate unique name, appending numerical suffix prefixed by \"-\" symbol.\nNote, that due to name generation rules, any numerical suffix, prefixed by \"-\", can be incremented to\ngenerate unique name, so given \"time:openindiana-%Y-%m-%d\" \nauto-be-name image\n property value\n(which is not recommended), \npkg\n will produce boot environment names ending with current date, current date + 1 and so on.\nBy default \nauto-be-name\n is set to \"time:openindiana-%Y:%m:%d\", so that boot environments are named like\n\"openindiana-2019:03:29\". You can get current value using \npkg property\n command and set it with \npkg set-property\n.\n\n\n\n\nFeatures of the beadm utility\n\n\nThe \nbeadm\n utility has the following features:\n\n\n\n\n\n\nThe \nbeadm\n utility aggregates all datasets in a boot environment and performs actions on the entire boot environment at once.\nYou no longer need to perform ZFS commands to modify each dataset individually.\n\n\n\n\n\n\nThe \nbeadm\n utility manages the dataset structures within boot environments.\nFor example, when the \nbeadm\n utility clones a boot environment that has shared datasets, the utility automatically recognizes and manages those shared datasets for the new boot environment.\n\n\n\n\n\n\nThe \nbeadm\n utility enables you to perform administrative tasks on your boot environments.\nThese tasks can be performed without upgrading your system.\n\n\n\n\n\n\nThe \nbeadm\n utility automatically manages and updates the GRUB menu.\nFor example, when you use the \nbeadm\n utility to create a new boot environment, that environment is automatically added to the GRUB menu.\n\n\n\n\n\n\nThe \nbeadm\n utility enables you to perform the following tasks:\n\n\n\n\nCreate a new boot environment based on the active boot environment\n\n\nCreate a new boot environment based on an inactive boot environment\n\n\nCreate a snapshot of an existing boot environment\n\n\nCreate a new boot environment based on an existing snapshot\n\n\nCreate a new boot environment and add a custom title to the GRUB menu.\n\n\nActivate an existing, inactive boot environment\n\n\nMount a boot environment\n\n\nUnmount a boot environment\n\n\nDestroy a boot environment\n\n\nDestroy a snapshot of a boot environment\n\n\nRename an existing, inactive boot environment\n\n\nDisplay information about your boot environment snapshots and datasets\n\n\n\n\nbeadm command reference\n\n\n\n\n\n\n\n\nCommand\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nbeadm\n\n\nDisplays command usage\n\n\n\n\n\n\nbeadm activate \nBE\n\n\nMakes the specified boot environment the active boot environment upon the next reboot.\n\n\n\n\n\n\nbeadm create \nBE\n\n\nCreates a new boot environment with the name specified. Unless the \n-e\n option is provided, the new boot environment is created as a clone of the currently running boot environment.\n\n\n\n\n\n\nbeadm create \nBE@snapshot\n\n\nCreates a snapshot of the existing boot environment with the specified snapshot name.\n\n\n\n\n\n\nbeadm destroy \nBE\n\n\nDestroys the boot environment named BE or destroys an existing snapshot, BE@snapshot, of a boot environment. Prompts for confirmation before destroying the boot environment.\n\n\n\n\n\n\nbeadm list \nBE\n\n\nLists information about the specified boot environment, or lists information for all boot environments if a boot environment name is not provided. The default is to list boot environments without any additional information.\n\n\n\n\n\n\nbeadm mount \nBE\n \nmountpoint\n\n\nMounts the specified boot environment at the specified mount point. The mount point must be an already existing, empty directory.\n\n\n\n\n\n\nbeadm rename \nold BE\n \nnew BE\n\n\nRenames the specified boot environment.\n\n\n\n\n\n\nbeadm unmount [-f] \nBE\n\n\nUnmounts the specified boot environment. \n-f\n \u2013 Forcefully unmounts the boot environment even if it is currently busy.\n\n\n\n\n\n\n\n\nFor detailed instructions about the \nbeadm\n utility, see the \nbeadm\n1M\n man page.\n\n\nbeadm zones support\n\n\nZones partitioning technology is used to virtualize operating system services and provide an isolated and secure environment for running applications.\nEach OpenIndiana system is a global zone.\nWithin a global zone, specific non-global zones can be created.\n\n\nZones support limitations\n\n\nNote the following limitations of support for non-global zones in the beadm utility and in related processes:\n\n\n\n\nWhen using the \npkg update\n command, the \n-r\n switch is required to upgrade all zones.\n\n\nNon-global zone support is limited to ZFS support.\nZones are not supported unless they are on ZFS.\n\n\nZones are not supported in the rpool/ROOT namespace.\nNon-global zones are cloned or copied only when the original zone is within the shared area for the global zone, for example, within rpool/export or within rpool/zones.\n\n\nAlthough the \nbeadm\n utility affects the non-global zones on your system, the \nbeadm\n utility does not display zones information.\nUse the \nzoneadm\n utility to view changes in the zones in your boot environment.\nFor example, use the \nzoneadm\n list command to view a list of all current zones on the system.\n\n\n\n\nFor further information, see the \nzoneadm\n1M\n man page.\n\n\nZones support specifications\n\n\nThe beadm command impacts the non-global zones in your boot environments as follows:\n\n\n\n\n\n\n\n\nCommand\n\n\nSupport Details\n\n\n\n\n\n\n\n\n\n\nbeadm create\n\n\nWhen you clone a boot environment by using the beadm create command, all zones in that boot environment are copied into the new boot environment.\n\n\n\n\n\n\nbeadm destroy\n\n\nWhen you destroy an inactive boot environment, the zones that belong to that boot environment are also destroyed.\n\n\n\n\n\n\nbeadm mount\n\n\nWhen you mount a boot environment, the zones in that environment are mounted relative to the mount points for the environment.\n\n\n\n\n\n\nbeadm unmount\n\n\nWhen you unmount a boot environment, the zones in that environment are also unmounted. All mount points are returned to their states prior to being mounted.\n\n\n\n\n\n\nbeadm rename\n\n\nWhen you rename a boot environment, that change does not impact the names of the zones or the names of the datasets that are used for those zones in that boot environment. The change does not impact the relationships between the zones and their related boot environments.\n\n\n\n\n\n\n\n\nThe X-Window System\n\n\n \nDOC TEAM NOTE:\n\n\n\nWrite about:\n\n\n\n\nHow to create and use an xorg.conf file.\n\n\nGraphics drivers are found in the \n/usr/lib/xorg/modules/drivers/amd64/\n graphics driver directory\n\n\nmodinfo only shows kernel drivers, not Xorg drivers, since Xorg drivers are just driver.so files dlopen'ed by a userspace process, not loaded into the kernel address space.\n\n\nTo see what drivers Xorg loaded, either check \n/var/log/Xorg.0.log\n or run \npldd\n on the Xorg process.\n\n\n\n\n\n\n\n\n\nVideo card support (2D)\n\n\n\n\nNearly all cards can use the VESA driver, and are therefore supported for 2D.\n\n\n2D acceleration for NVidia GPU's is provided by the Nvidia binary driver.\n\n\nAn effort is underway to further improve Radeon (2D) acceleration for both legacy and modern AMD GPU's.\n\n\n\n\nVideo card support (3D)\n\n\n\n\nNearly all NVidia GPU's are supported by the Nvidia binary driver.\n\n\nBeginning with the July 2016 experimental release, most Intel GPU's are now also supported.\n\n\nNo 3D support is currently available for AMD GPU's.\n\n\n\n\n \nDOC TEAM NOTE:\n\n\n\nWrite about:\n\n\n\n\nThe expected behavior when booting the live CD from a system with an NVIDIA card.\n\n\nDiscuss procedure for adding an NVIDIA card to a system that was using VESA or some other non-3d video driver.\n\n\nTroubleshooting - what logs to look at, manual configuration, etc.\n\n\nWalk through NVIDIA utility screens.\n\n\n\n\n\nDevice Drivers\n\n\n \nDOC TEAM NOTE:\n\n\n\nWrite about:\n\n\n\n\nFinding hardware id's\n\n\nSearching for drivers\n\n\nInstalling and loading drivers\n\n\nUsing the \nmodinfo\n command to list information about loaded kernel driver modules\n\n\nUsing \nmodload\n to load kernel driver modules\n\n\nUsing \nmodunload\n to unload kernel driver modules\n\n\nUsing the \nadd_drv\n command\n\n\n\n\n\n\nAdding device ID's to \n/etc/driver_aliases\n, and \n/etc/driver_classes\n, etc.",
            "title": "Getting Started"
        },
        {
            "location": "/handbook/getting-started/#hipster-handbook-getting-started-with-openindiana",
            "text": "NOTE:   This is a  DRAFT  document which may contain errors!  Help us improve and expand this site.  Please see the  Contrib  section for more details about joining the OpenIndiana Documentation Team.",
            "title": "Hipster Handbook - Getting Started with OpenIndiana"
        },
        {
            "location": "/handbook/getting-started/#introduction",
            "text": "Welcome to the OpenIndiana Handbook!  This collection of documents is aimed at providing a comprehensive source of guidance for both new and seasoned Unix administrators.\nWhile our aim is to address as many facets of OpenIndiana use and administration as possible, some topics are simply too complex and beyond the scope of an introductory end user handbook.\nIn such cases external sources of information will be provided in the form of references to other web sites, man pages, or printed books.",
            "title": "Introduction"
        },
        {
            "location": "/handbook/getting-started/#conventions",
            "text": "",
            "title": "Conventions"
        },
        {
            "location": "/handbook/getting-started/#commandlines",
            "text": "Commandlines starting with a # character means that they should be run as root.\nMost of these examples can also be invoked with pfexec(1) \n or sudo(1m) instead.  You can login as root using  su(1m) .  An example of a commandline intended to be invoked as root:  # dd if=image.usb of=/dev/sdb  Commandlines starting with a $ character means that they should be run as a\nregular user.  An example of a commandline intended to be invoked as a regular user:  $ prstat",
            "title": "Commandlines"
        },
        {
            "location": "/handbook/getting-started/#hipster-software-releases",
            "text": "Approximately every six months, the OpenIndiana project releases a snapshot of the Hipster rolling release branch.\nIdeally suited for both workstations and servers, simply choose the installer type which best serves your needs.     Workstation  Server  Minimal      Live installer (Mate desktop)  Text Only (No GUI)  Text Only (No GUI)     For a full list of links to the various installer images, visit the  OpenIndiana Downloads  page.    NOTE:   \n   The legacy oi-dev-151x branch is no longer maintained. \n   While upgrades to Hipster are possible, it can only be performed by doing it in stages. \n   \n     First upgrade from oi-dev to Hipster-2015, and verify the system has been updated to the latest 2015. \n     Only then may you switch to the current Hipster repository and update again. \n     For more details, click here for upgrade instructions \n        CAUTION:   Hipster is a rapid development branch where software versions are frequently updated.\nWhile every package is tested to ensure stability, caution is nevertheless warranted when deploying Hipster into mission critical production environments.",
            "title": "Hipster Software Releases"
        },
        {
            "location": "/handbook/getting-started/#system-requirements",
            "text": "CPU  Disk Space  Memory (RAM)      64 Bit  20GB (or more)  2GB (or more)       NOTE:   \n   For the best performance (and to reduce the possibility of disk swapping), allocate 4GB RAM or more. \n   For desktops, ensure total system memory (RAM + swap) are at least 4GB or greater. \n   The default size of the OpenIndiana swap file is 50% of installed memory. \n   Minimum and maximum default swap allocations are 512MB and 32GB respectively.",
            "title": "System Requirements"
        },
        {
            "location": "/handbook/getting-started/#exploring-openindiana-hipster",
            "text": "There are several ways in which you can explore OpenIndiana without having to perform a bare metal install.   Live media (USB/DVD)  Virtual machines (PC emulation via software)  Vagrant (virtual machine image automation)     NOTE:  \nWhile the Live Media environment provides an opportunity to use and explore many of the features of OpenIndiana, it is not possible to install additional software into the Live Media environment.",
            "title": "Exploring OpenIndiana Hipster"
        },
        {
            "location": "/handbook/getting-started/#live-media",
            "text": "Available in both DVD and USB formats, the OpenIndiana GUI installer also functions as live media.\nThis allows you try OpenIndiana without the need to install it.\nExploring OpenIndiana via the live media is an especially good way to test your hardware compatibility prior to installing the operating system.",
            "title": "Live Media"
        },
        {
            "location": "/handbook/getting-started/#virtual-machines",
            "text": "OpenIndiana is known to work with the following virtualization software:   VirtualBox  VMWare Fusion  VMWare Workstation Pro  VMWare Workstation Player  VMWare VSphere  Linux KVM  illumos KVM - (The illumos port of Linux KVM)   Virtual machines provide a PC emulation layer in which you install OpenIndiana just as you would on physical 'bare metal' hardware.",
            "title": "Virtual machines"
        },
        {
            "location": "/handbook/getting-started/#vagrant",
            "text": "Vagrant provides an excellent way to explore OpenIndiana as it fully automates the process of bringing a virtual machine online.\nOpenIndiana comes with an official  Vagrant  box, which can be used for exploring OpenIndiana before installing it.    NOTE:   At this time, the OpenIndiana Vagrant box is only available in the form of a text based console.\nAdditionally, Virtualbox is the only currently supported Vagrant provider.\nIn the future the OpenIndiana project hopes to provide additional Vagrant box options.     NOTE:   Vagrant is officially available for Mac OS X, Windows and Linux.    Download and install the latest version of Vagrant for your platform from the  official download page .  Download and install the latest version of Virtualbox for your platform from the  official download page .     CAUTION:   Older versions of Vagrant (as packaged by many LTS Linux distributions), may not support downloading the Vagrant box instance.\nTo work around this limitation, be sure to remove any previously installed instances of Vagrant and obtain the latest Vagrant software directly from the Vagrant website.    Run the following command to download and boot the OpenIndiana vagrant box:   $ mkdir ~/openindiana_test\n$ cd ~/openindiana_test\n$ vagrant init openindiana/hipster\n$ vagrant up --provider virtualbox  This will create a file titled  Vagrantfile  under the ~/openindiana_test directory.\nThe Vagrant box will also be booted.   Once, the Vagrant box virtual machine is online, connect to it using the following command:   $ vagrant ssh   To destroy the OpenIndiana Vagrant instance, issue the following command:   $ vagrant destroy",
            "title": "Vagrant"
        },
        {
            "location": "/handbook/getting-started/#preparing-to-install-hipster",
            "text": "Prior to installing OpenIndiana:   Ensure your system meets the recommended hardware requirements.  Ensure to consult the HCL.     CAUTION:   Installing OpenIndiana on unsupported hardware may cause excessive CPU usage, instability, or other problems.  Please be sure to consult the hardware compatibility list (HCL):   Illumos HLC  OpenIndiana HCL - components  OpenIndiana HCL - systems",
            "title": "Preparing to Install Hipster"
        },
        {
            "location": "/handbook/getting-started/#backing-up-data",
            "text": "CAUTION:   Before attempting to install OpenIndiana, first ensure you backup any important data.\nDo not save the data on another partition or on another disk within the same system.\nInstead save the data to an external device such as a USB hard drive, or external system (network backup service, or a networked system).\nAlways verify your backed up data.",
            "title": "Backing up data"
        },
        {
            "location": "/handbook/getting-started/#deciding-where-to-install-openindiana",
            "text": "By default the OpenIndiana installer creates an EFI partition using a GPT partition table.\nUsing this option, OpenIndiana will use the entire disk.\nNo other operating system can share the same disk.  Optionally you may use a legacy MBR partition.\nMBR partitions will allow you to create multiple partitions.\nMBR will also support dual booting another operating system.  Another option is to install to a virtual machine.",
            "title": "Deciding where to install OpenIndiana"
        },
        {
            "location": "/handbook/getting-started/#gathering-network-information",
            "text": "If your network uses a DHCP server, OpenIndiana can be configured to automatically obtain it's network information.\nIf a DHCP server is not available, then you will need to manually configure your network settings.  Obtain the following information:   IP address  Subnet mask  Gateway  Network domain name  Network DNS servers",
            "title": "Gathering network information"
        },
        {
            "location": "/handbook/getting-started/#downloading-the-software",
            "text": "For a full list of links to the various installer images, visit the following page:   OpenIndiana Downloads   For a complete list of alternate mirrors (Asia, Europe, North America, etc.)   OpenIndiana Download Mirrors   If you wish to purchase a ready made DVD or USB drive there is also  OSDISC.COM .  Download example:  $ wget  http://dlc.openindiana.org/isos/hipster/20170502/OI-hipster-gui-20170502.iso \n$ wget  http://dlc.openindiana.org/isos/hipster/20170502/OI-hipster-gui-20170502.iso.sha256sum",
            "title": "Downloading the software"
        },
        {
            "location": "/handbook/getting-started/#checking-the-md5sha",
            "text": "Checksum verification example:  $ sha256sum --check OI-hipster-gui-20170502.iso.sha256sum\nOI-hipster-gui-20170502.iso: OK\n$",
            "title": "Checking the MD5/SHA"
        },
        {
            "location": "/handbook/getting-started/#creating-a-hipster-dvd",
            "text": "",
            "title": "Creating a Hipster DVD"
        },
        {
            "location": "/handbook/getting-started/#bsdillumossolaris",
            "text": "UNIX Console    The command to use for writing a CD or DVD is  cdrecord .\nThe syntax of the command is:  cdrecord dev=device imagefile.iso  Examples:  # cdrecord dev=/dev/rdsk/c4t1d0p0 imagefile.iso  # cdrecord dev=4,1,0 imagefile.iso    NOTE:   If you are re-using a DVD-RW, be sure to blank it first.  For example:  cdrecord dev=/dev/rdsk/c4t1d0p0 blank=fast  Warning: Blanking the disk will destroy all data on the disk.   Locating your DVD or CD writing device:   For BSD, use  cdrecord -scanbus  to locate your device.   For example:  $ cdrecord -scanbus\nCdrecord-ProDVD-ProBD-Clone 3.00 (i386-pc-solaris2.11) Copyright (C) 1995-2010 J\u00f6rg Schilling\nWarning: Using USCSI interface.\nUsing libscg version 'schily-0.9'.\nscsibus4:\n        4,0,0   400) 'ATA     ' 'HITACHI HTS72321' 'C50B' Disk\n        4,1,0   401) 'HL-DT-ST' 'DVDRAM GSA-U20N ' 'HX12' Removable CD-ROM\n        4,2,0   402) *\n        4,3,0   403) *\n        4,4,0   404) *\n        4,5,0   405) *\n        4,6,0   406) *\n        4,7,0   407) *\n$    NOTE:   When using  cdrecord -scanbus  to determine the device name, specify the device using the SCSI bus ID.  For example:  cdrecord dev=4,1,0 imagefile.iso    For illumos/Solaris, you may use either  cdrecord -scanbus  or  rmformat -l  to locate your device.   For example:  $ rmformat -l\nLooking for devices...\n     1. Logical Node: /dev/rdsk/c4t1d0p0\n        Physical Node: /pci@0,0/pci17aa,20f8@1f,2/cdrom@1,0\n        Connected Device: HL-DT-ST DVDRAM GSA-U20N  HX12\n        Device Type: CD Reader\n        Bus:  Unknown \n        Size: 810.2 MB\n        Label:  None \n        Access permissions: Medium is not write protected.\n$    NOTE:   When using  rmformat -l  to determine the device name, specify the device using the  Logical Node .  For example:  # cdrecord dev=/dev/rdsk/c4t1d0p0 imagefile.iso   UNIX GUI     Use the application specific to your desktop (Brasero, K3B, etc.)",
            "title": "BSD/illumos/Solaris"
        },
        {
            "location": "/handbook/getting-started/#linux",
            "text": "Linux Console    The command to use to write a CD or DVD on Linux is  wodim .  The syntax of the command is:  wodim -v dev=device -dao imagefile.iso  For example:  # wodim -v dev=/dev/sr0 -dao imagefile.iso  Locating your DVD or CD writing device:   On Linux use the  lsblk  command to locate your device.   For example:  $ lsblk\nNAME   MAJ:MIN RM   SIZE RO TYPE MOUNTPOINT\nsda      8:0    0 232.9G  0 disk\n\u251c\u2500sda1   8:1    0 227.8G  0 part /\n\u251c\u2500sda2   8:2    0     1K  0 part\n\u2514\u2500sda5   8:5    0     4G  0 part\nsr0     11:0    1  1024M  0 rom\n$  Linux GUI     There are several different CD/DVD writer applications available for Linux.     Desktop  Application      GNOME  Brasero    KDE  K3B     Other desktops may offer additional choices.\nFor further information, please consult the help documentation for your Linux distribution.",
            "title": "Linux"
        },
        {
            "location": "/handbook/getting-started/#mac-os-x",
            "text": "MAC Console     # growisofs -Z /dev/dvdrw=image.iso  MAC GUI     Applications   Utilities   Disk Utility",
            "title": "Mac OS X"
        },
        {
            "location": "/handbook/getting-started/#windows",
            "text": "Windows Console    Isoburn is a Windows GUI utility which can be launched via the command prompt as follows:  ISOBURN.EXE [/Q] [ drive letter :]  disk image file name   Windows GUI     From within Windows Explorer:   Browse to and select the ISO image file  Right click the ISO image file  From the right click menu, select \"Burn Disk Image\"",
            "title": "Windows"
        },
        {
            "location": "/handbook/getting-started/#creating-a-hipster-usb-drive",
            "text": "NOTE:  \nThere are two unique methods for creating bootable USB flash drives.\nThe method to use depends on the release date of the USB image you intend to write.",
            "title": "Creating a Hipster USB Drive"
        },
        {
            "location": "/handbook/getting-started/#method-1",
            "text": "Applies to the experimental releases of July 2016 and all subsequent (newer) releases.  For example: The OpenIndiana Hipster 2016.10 release uses this method.",
            "title": "Method 1"
        },
        {
            "location": "/handbook/getting-started/#method-2",
            "text": "Applies to all OpenIndiana releases up to and including the OpenIndiana Hipster 2016.04 release.  This includes the legacy oi-dev-151a series of OpenIndiana releases.     CAUTION:  \nOpenIndiana Hipster does not yet support UEFI.   If you intend to install OpenIndiana Hipster on a system, which supports UEFI boot, please be sure to boot the system in legacy mode.",
            "title": "Method 2"
        },
        {
            "location": "/handbook/getting-started/#prerequisites",
            "text": "",
            "title": "Prerequisites"
        },
        {
            "location": "/handbook/getting-started/#methods-1-2",
            "text": "USB flash drive - (2GB or larger).  Download the OpenIndiana USB installer image.",
            "title": "Methods 1 &amp; 2"
        },
        {
            "location": "/handbook/getting-started/#method-2_1",
            "text": "NOTE:    Header files are only required when writing a legacy image  AND  using the dd utility.  Header files are  NOT  required when writing current images.  For example: The Hipster 2016.10 release, does  NOT  require header files.       Download the appropriate OpenIndiana  1G  or  2G  header file  There are 2 unique USB header files (1G and 2G).  Please ensure you have selected the correct file as the files are  NOT  interchangeable.  The 1G.header is only suitable for use with the text installer (Command line console).  The 2G.header is only suitable for use with the live installer (Gnome desktop).         CAUTION:  \nFailure to use the correct USB header file can result in the USB drive either failing to boot, or only partially booting.",
            "title": "Method 2"
        },
        {
            "location": "/handbook/getting-started/#identifying-the-path-to-your-usb-device",
            "text": "Operating system  Command  Device      BSD  camcontrol devlist  /dev/da*    illumos/Solaris  rmformat -l  /dev/rdsk/c*t*d*p0    Linux  lsblk  /dev/sd*    MAC OS X  diskutil list  /dev/disk*       CAUTION:  \nWhen issuing the USB copy command:   Make sure you identify the correct storage device as all data on the device will be erased.  Be sure to specify the entire USB device without appending any partition or slice number.   For example:     Example  Device      Correct  /dev/sda    Incorrect  /dev/sda1    Correct  /dev/rdsk/c0t0d0p0    Incorrect  /dev/rdsk/c0t0d0p1       In illumos, the whole disk device name is depending on partition type.   On x86, the whole disk name ends with p0  In the case of a GPT (EFI) partition, the whole disk device name ends with dX.  on sparc, the disk has usually VTOC partition and whole disk device name usually ends with s2.  Note, if on x86 and an MBR+VTOC is used, then the s2 device is addressing the Solaris2 MBR partition, not the whole disk.     If any file systems are located on the USB storage device, they must first be unmounted.   Desktops may automatically mount removable devices.  As necessary, select any desktop icons for the USB device and issue an 'Eject' or 'Unmount' command.  For Linux, use  umount  path .  For illumos/Solaris use  rmumount  path .  for MAC OS X use  diskutil unmountDisk  path .  Verify using the  mount  command.",
            "title": "Identifying the path to your USB device"
        },
        {
            "location": "/handbook/getting-started/#bsdlinuxos-x",
            "text": "In the command below, replace  X  with the appropriate letter for your USB device. At least on Linux and FreeBSD you can add  status=progress  operand to print basic transfer statistics, refer to  dd(1)  man page of your platform for more information.",
            "title": "BSD/Linux/OS X"
        },
        {
            "location": "/handbook/getting-started/#method-1-new-releases",
            "text": "# dd bs=4M if=./image.usb of=/dev/sdX   sync",
            "title": "Method 1 (New releases)"
        },
        {
            "location": "/handbook/getting-started/#method-2-legacy-releases",
            "text": "# cat 1G.header image.usb | dd bs=1024k of=/dev/sdX  For live images larger than 1GB, use the following command instead.  # cat 2G.header image.usb | dd bs=1024k of=/dev/sdX",
            "title": "Method 2 (Legacy releases)"
        },
        {
            "location": "/handbook/getting-started/#illumossolaris",
            "text": "",
            "title": "illumos/Solaris"
        },
        {
            "location": "/handbook/getting-started/#method-1-new-releases_1",
            "text": "In the command below, replace each  X  with appropriate number for your USB device.  # /usr/bin/dd if=./image.usb of=/dev/rdsk/cXtXdXpX bs=4194304",
            "title": "Method 1 (New releases)"
        },
        {
            "location": "/handbook/getting-started/#method-2-legacy-releases_1",
            "text": "For illumos based distributions including OpenIndiana, a script  (USBCOPY)  is available to copy the USB image onto a USB device.  Be sure to run as root or with SUDO as the script exits if not run with elevated permissions.   # ./usbcopy image.usb\nFound the following USB devices:\n0:    devices/dev/rdsk/c4t0d0p0    3.9 GB    USB    DISK 2.0       1.00\nEnter the number of your choice: 0\n\nWARNING: All data on your USB storage will be lost.\nAre you sure you want to install to\nUSB DISK 2.0 1.00, 3900 MB at /dev/rdsk/c4t0d0p0 ?  (y/n) y\nCopying and verifying image to USB device\nFinished 1643 MB in 685 seconds (2.3MB/s)\n0 block(s) re-written due to verification failure\nInstalling grub to USB device /dev/rdsk/c4t0d0s0\nCompleted copy to USB\n#",
            "title": "Method 2 (Legacy releases)"
        },
        {
            "location": "/handbook/getting-started/#windows_1",
            "text": "",
            "title": "Windows"
        },
        {
            "location": "/handbook/getting-started/#method-1-new-releases_2",
            "text": "Newer releases can be written using  Win32 Disk Imager .    NOTE:  \nBy default the Win32 Disk Imager utility is looking for  .img  files and won't see files with a  .usb  extension.\nTo resolve this issue, be sure to select the  *.*  (all files) option from the file extension drop down menu.",
            "title": "Method 1 (New releases)"
        },
        {
            "location": "/handbook/getting-started/#method-2-legacy-releases_2",
            "text": "The  OpenSolaris Live USB Creator  is a small stand alone GUI utility suitable for creating an OpenIndiana bootable USB flash drive.",
            "title": "Method 2 (Legacy releases)"
        },
        {
            "location": "/handbook/getting-started/#booting-the-hipster-installer",
            "text": "Insert the bootable media (DVD or USB flash drive) and boot (start/restart) your computer.\nWhen you see the OpenIndiana boot menu, select a boot entry, and press the enter key to start OpenIndiana on your computer.\nAs it runs, you will be prompted with a few questions.    NOTE:   For the computer to successfully boot from the media, you may be required to perform one of the following tasks:   Specify the appropriate boot device by pressing the boot order hotkey.  Change the boot device order found in your computer's system BIOS configuration.      CAUTION:   OpenIndiana does not yet support the following technologies:   Secure boot (UEFI boot path validation)  UEFI (Unified Extensible Firmware Interface)   To successfully boot the OpenIndiana installer, these technologies must first be disabled.\nFor further information, consult the manufacturers documentation for your computer hardware.",
            "title": "Booting the Hipster Installer"
        },
        {
            "location": "/handbook/getting-started/#booting-the-openindiana-installer-on-virtual-hardware",
            "text": "The most efficient way to boot a virtual machine is to boot directly from the DVD ISO file.\nAlternately, you may use host to guest DVD/USB passthrough to boot from physical media.\nSee the notes below for optimizing OpenIndiana for several popular hypervisors.     Hypervisor  Configuration Notes      Virtualbox  OS type = Solaris 11 64-bit    Vmware player  OS type = Solaris 11 64-bit    KVM  OS type = Sun OpenSolaris Disk = SATA Remove USB Tablet NIC = e1000 sound = AC97 Processor = Copy host CPU configuration Disable CPU feature  'xsave' Video = QXL (QXL driver not supported, but the extra video memory helps) Display = VNC (Spice not supported)    Hyper-V  Select single CPU, generation 1 VM, and legacy NIC.       NOTE:   The OpenIndiana Project recommends the Oracle Virtualbox hypervisor as it provides the best support for illumos based distributions such as OpenIndiana.  If you experience difficulties booting OpenIndiana on virtual hardware, or find virtual hardware devices which are either not properly recognized, or fail to function as expected, please report the problem to the upstream illumos Project. You may do so by submitting an issue using the  illumos project bug tracker .",
            "title": "Booting the OpenIndiana installer on virtual hardware"
        },
        {
            "location": "/handbook/getting-started/#the-openindiana-installer-boot-menu",
            "text": "Introduced with the Hipster 2016.10 release, the FreeBSD boot loader has been ported to OpenIndiana.  The new boot loader provides many new capabilities:   Booting to the first disk  Single user mode  Debugger options     NOTE:   The OpenIndiana installer will automatically boot option #  1. Boot Multi User  within 10 seconds.   To pause the Autoboot timer, press the  Space  key.     The OpenIndiana installer boot menu offers multiple choices.     Main Menu Option  Description      1. Boot Multi User  Normal boot (desktop or shell)    2. Boot Single user  Boots to rescue mode    3. Escape to loader prompt  Boots to forth shell    4. Reboot  Restarts the computer    5. Configure Boot Options  Enters into boot options menu    6. ChainLoad disk0  Boots the OS found on 1st disk    7. Select OI Extras  Enters into extras menu     Select your boot option by pressing the associated number key.   Options 1, 2, 3, 4, and 6, result in the immediate execution of the selected option.  Options 5 and 7 provide interactive menus as shown below.       Boot Option Menu  Description      1. Back to Main Menu  Returns to main menu    2. OsConsole  Provides several tty options    3. ACPI  Toggles ACPI to ON, OFF, MADT, or Legacy    4. Single User  Toggles single user mode    5. Verbose  Toggles verbose boot messages    6. Reconfigure  Reconfigures hardware    7. kmdb  Toggles Kernel Mode Debugger    8. Debug  Toggles debug     Toggle (enable/disable) these options by selecting the associated number key.  For example:   Pressing 5 enables verbose mode.  Pressing 5 again, disables the verbose option.       OI Extras Menu  Description      1. Back to Main Menu  Returns to main menu    2. Vesa driver  Forces the vesa driver    3. Text console  Enables the text console    4. Enable ssh  Enables ssh server for live desktop     Toggle (enable/disable) these options by selecting the associated number key.  For example:   Pressing 2 forces the VESA driver.  Pressing 2 again, disables the VESA driver.     NOTE:   Even when booting the Mate Live Image, selecting option # 3 (text console) option will boot the system to a text based console.\nThe logon credentials required to access the shell are jack/jack.",
            "title": "The OpenIndiana installer boot menu"
        },
        {
            "location": "/handbook/getting-started/#selecting-keyboard-layout-and-display-language",
            "text": "OpenIndiana offers 47 different keyboard layouts.   Select your keyboard layout by entering the number corresponding to your desired keyboard layout.  For example, select  18  for German, or  35  for Russian, etc.  The default keyboard layout is selection  47  US-English.   Once you have selected a keyboard layout, press the  Enter  key to continue.   OpenIndiana offers 22 different language options.   Select a language by entering the number corresponding to your desired language.  For example, select  3  for Chinese - Simplified, or  18  for Portuguese - Brazil, etc.  The default language selection is  7 for English.   Once you have selected a language, press the  Enter  key to continue.    NOTE:   After selecting the keyboard layout and language, OpenIndiana will begin to search for hardware and configure devices.\nWhen the configuration process is complete, the system will load to either the Mate desktop, or a logon console.",
            "title": "Selecting keyboard layout and display language"
        },
        {
            "location": "/handbook/getting-started/#the-live-media-desktop",
            "text": "The Live Media DVD and USB installers provide a graphical live environment where you can explore OpenIndiana and test the compatibility of your hardware.\nWhen using Live Media, no changes are made to your system unless you explicitly choose to install OpenIndiana or alter the configuration of your disk using the Gparted Partition Editor.  The following options are available to you from the Live Media Desktop:   Install OpenIndiana using the Text Installer  Install OpenIndiana (graphical installer)  Device Driver Utility  Gparted Partition Editor",
            "title": "The live media desktop"
        },
        {
            "location": "/handbook/getting-started/#using-the-device-driver-utility",
            "text": "Available from the Live Media desktop, the  Device Driver Utility  may be used to scan your hardware for compatibility.\nThe utility generates a list of hardware devices along with the corresponding driver in use for each device.\nThe utility will also show you devices for which there is no driver loaded.\nThe device driver utility allows you to check whether your hardware requires additional drivers.",
            "title": "Using the device driver utility"
        },
        {
            "location": "/handbook/getting-started/#using-the-gparted-partition-editor",
            "text": "The Gparted partition editor allows you to add, remove, or resize partitions in preparation for installing OpenIndiana.    CAUTION:  \nEditing partition tables is a potentially destructive process.\nWhile you are unlikely to physically damage the disk, there is a risk of losing data.\nBefore using the partition editor, please be sure to back up your data to a remote system or device.",
            "title": "Using the Gparted Partition Editor"
        },
        {
            "location": "/handbook/getting-started/#live-media-authentication",
            "text": "The user login for the live media session is  jack  along with the password  jack .  For administrative or elevated access, prepend your commands with  sudo .  You may obtain root using the  su  command along with the password  openindiana .",
            "title": "Live media authentication"
        },
        {
            "location": "/handbook/getting-started/#installing-openindiana",
            "text": "DOC TEAM NOTE:  \nFor some guidance writing this section:   Installation walkthrough:  web link  Installation videos:  web link      NOTE:  \nIf your intention is to multi-boot OpenIndiana on a system that is already running a UNIX like operating system (for example Linux), be sure to save a copy of the  menu.lst  file prior to beginning the installation.\nThe contents of the GRUB  menu.lst  file dictate the booting parameters for each entry displayed in the GRUB boot menu.\nThe information provided by the  menu.lst  will be required for updating the GRUB menu after the installation.    CAUTION:  \nPlease be advised of the following important considerations:   The installation overwrites the whole disk layout if one of the following is true:  The disk table cannot be read.  The disk was not previously partitioned.    If an existing Solaris fdisk partition is on a multiboot system, and the user makes no modifications to the existing partitions, the installation overwrites the Solaris fdisk partition only.\nOther existing partitions are not changed.",
            "title": "Installing OpenIndiana"
        },
        {
            "location": "/handbook/getting-started/#installing-openindiana-from-live-media",
            "text": "To install OpenIndiana from Live Media, you have two options.   Install OpenIndiana using the Text Installer  Install OpenIndiana (graphical installer)   Each of these options is represented by a desktop icon.\nSelect the appropriate installer option by clicking the corresponding desktop installer icon.    NOTE:   New for the Hipster 2016.10 release  Selecting the  Install OpenIndiana using the Text Installer  desktop installer option provides new installation capabilities.  In addition to installing OpenIndiana to single disks, the following are now also supported:   Mirrors  RAIDZ   Yes, that's right, you can now install the rpool to logical disk arrays, created during the installation process.  However, please keep in mind the following:   This capability applies only to the python based installer which runs within a console window.  The graphical installer does not yet have this capability.",
            "title": "Installing OpenIndiana from live media"
        },
        {
            "location": "/handbook/getting-started/#install-openindiana-graphical-installer",
            "text": "To launch the OpenIndiana graphical installer, locate and double click the desktop icon labeled:  Install OpenIndiana .  As shown below, and in the subsequent screens, the installer starts a new process, running within it's own window.   When the installer starts, the first screen you will see is the welcome page.\nPlease take some time to read the additional guidance provided below.\nWhen ready to begin, click the  Next  button to continue on with the installation process.    NOTE:  \nPlease disregard the reference to the getting started guide.\nThis guide no longer exists on the Live Media installer.  A bug has been opened for this issue and a new getting started guide is being created .  Also, when clicking the link for the release notes, please click it only once and wait until Firefox finishes loading.\nThe Firefox web browser will open to the 'OpenIndiana Releases' page of the OpenIndiana Wiki.\nThis however, is not where you will find the release notes. A bug has been opened to correct this issue .  The release notes may be accessed in one of the following ways:   Perform a search within the Wiki site for the release notes.  Browse to the following Wiki page:  https://wiki.openindiana.org/oi/Release+Notes .    The top portion of the disk selection and partitioning screen shows all the disks found on the system, including removable disks.\nEach disk is represented with a disk icon.\nBelow each disk icon the installer displays the size of each disk in Gigabytes (GB) and the disk type (IDE, ATA, etc.).\nWithin this upper panel, select the disk where you wish to install OpenIndiana.\nThe lower portion of this screen displays partitioning options.  Within the lower panel, select one of the following options:     Option  Description      Use the whole disk  When the  Use the whole disk  option is selected, the entire disk is used for the installation. For the selected disk, all existing partitions and any data which they may contain, will be overwritten with the OpenIndiana operating system.    Partition the disk  When the  Partition the disk  option is selected, the bottom portion of this panel displays the disk partitioning layout. Prior to selecting this option, please be sure to review all the informational notes and warnings concerning the use of the partitioning option.     \nIf you choose to partition the disk, you have additional options as shown above.\nPlease take some time to read the additional guidance provided below.\nWhen you have revised the partitioning as needed, click the  Next  button to continue.    NOTE:  \nRegardless of the partitioning option chosen for the installation, manual control of the OpenIndiana file system layout is not supported.\nDuring the installation, the Solaris fdisk partition is reformatted with a default ZFS file system layout.\nAll existing file systems on the Solaris partition are destroyed.\nThe installation uses a Solaris fdisk partition to create a ZFS storage pool.    NOTE:  \nIf you choose to partition the disk, review the following partitioning guidelines, then revise the partitioning panel settings as needed.   Only one Solaris partition is allowed.\nIf an existing Solaris partition is available, that Solaris partition will be the target for the installation.\nOr, if you do not have an existing Solaris partition, you can change any existing partition to a Solaris partition.  You can resize existing partitions, delete partitions, and create new partitions in this panel.\nFor this option, one existing Solaris partition must be available as the target for the installation.  If you used a third-party partitioning tool such as GParted, then the Disk panel displays a partition named Linux-swap on which you can install OpenIndiana.  In this panel, use the drop-down list for the Linux-swap partition name to change the partition name to Solaris.       CAUTION:  \nIf the existing partition table cannot be read, a warning is displayed, and the panel displays proposed partitioning.\nIn this case, all data on the selected disk is destroyed.  If the table can be read, then the following information applies:   The partitions are displayed in physically sequential order as they are laid out on the disk.  Resizing a Solaris partition destroys the data on that partition and all physically subsequent partitions.  Existing data is not moved to conform to a new partition layout.  However, resizing the last partition or appending a new partition does not affect the data that already exists in other partitions.    Non-Solaris partitions cannot be resized.  To make additional space available, you can change an existing partition to Unused.  However, if you change an existing partition to Unused, all subsequent non-Solaris partitions are also changed to Unused.    New partitions can only use the available space that follows the last defined partition.  The installer cannot utilize unallocated chunks of space between existing defined partitions.  Use the fdisk(1M) command to create new partitions that use the free space between exiting partitions.    This screen enables you to type the correct time zone, date, and time for the system to be installed.\nThe top half of the panel displays a world map with major cities marked.\nThe bottom half of the panel provides drop-down selections.\nYou can choose the time zone either from the map or from the drop-down list.   If you select the time zone from the map, click on a city or click anywhere on the map.   If you click on the map, but not on a city, the map automatically magnifies that area.\nYou can click on a location within that magnified area.\nYou can drag the cursor to move the magnified area to a different location on the map.\nWhen you select a site on the map, the drop-down selections automatically populate with the time zone, date, and current time for that map selection.\nYou can right-click to undo magnification.   Instead of using the map, you can make your selections in the drop-down fields.   Select your region, then select Location. Finally, select time zone.\nThe options for each drop-down field are determined by the selection made in the prior drop-down field.    NOTE:  \nAfter making your selections, you may also edit the default date and time that is provided.  When the settings are correct, click Next to continue.   This screen enables you to select a language and locale.\nThese selections determine the language support, the default date and time, and other data formats for the installed system.    You can accept the default language selection or change the selection.    A language selection is required.\nYou can select \u201cno default language support.\u201d    The language chosen automatically determines the available locales in the drop-down list.\nOnly one locale can be selected.      NOTE:  \nAny time that you log in to the installed system, you can change either the locale for that particular session or the default locale by using the Options button in the Login dialog box.   Review the following guidelines:   Root login is not enabled either on the Live CD or on the installed system.\nYou must log in as the user that you create in this panel.\nAfter you log in, you can then become root to configure the system.     NOTE:  \nIf you do not create a user account in this panel, root is set up as a normal account on the installed system, instead of as a role.\nThis is the only situation where you can log in to the installed system as root.    Both the root password and user account are optional.\nHowever, for better security, do complete these fields.\nIf the root password is not defined, a reminder is displayed when you click Next.\nIf you do not want to define a root password, you can proceed.    A user account requires only a Login name for the account to be valid.\nFor better security, however, do complete all fields.\nIf the user account information is not valid, a reminder is displayed when you click Next.\nIf you do not want to define a user account, you can proceed.    Type a computer name or accept the default.\nThe computer name field cannot be blank.     This screen summarizes the configuration options which will be used to perform the installation.\nBe sure to take the time to review this summary.\nIf a configuration option needs to be changed, you may do so by clicking the  Back  button.\nIf the installation options are acceptable, click the  Install  button to begin the installation.    CAUTION:  \nOnce you have clicked the  Install  button, the option to  Quit  the installation is no longer available.\nDo not attempt to interrupt an installation already in progress or the system will be left in an inconsistent state.   During the installation, a progress bar is displayed.\nThe time required to complete the installation is dependent on your hardware.   The final screen displays completion messages.\nFrom within this panel you may review the installation log.\nTo view the installation log, click the link titled  OpenIndiana Installation Log .\nThe installation log will open in a new window.   Using the slider located on the right side of the log viewer window, you may scroll up and down to view the entire log file.\nAfter reviewing the log, you may exit the log viewer by clicking the  Close  button.  Congratulations! \nYou have completed the installation of the OpenIndiana Hipster operating system.  From here you now have several options:   Quit the installer by clicking the  Quit  button and continue to explore the Live Media.  Quit the installer by clicking the  Quit  button and then manually shut down or restart your system.  Reboot the computer by clicking the  Reboot  button.     NOTE:  \nTo prevent the Live Media from starting again after the reboot, eject the Live Media as the next boot begins.\nOr alternately, when presented with the Live Media installer options menu, select the  Boot from Hard Disk  option.    NOTE:  \nAfter you have installed OpenIndiana, if you have another operating system on your system, you might need to update the GRUB menu.\nThe GRUB menu displays a list of operating systems that can be booted.\nSolaris and Windows operating systems are displayed automatically on the GRUB menu.\nThe contents of the GRUB  menu.lst  file define what is displayed in the GRUB menu when you boot the system.\nIf you have an additional OpenIndiana or a Linux OS that is not displayed on the menu, you may need to edit the GRUB  menu.lst  file.    DOC TEAM NOTE:  \nWrite about:   How to configure the Linux GRUB2 bootloader to chainload an OpenIndiana partition   [13:08:17]  tsoome  configure chainloader to load illumos partition\n[13:11:02]  tsoome  the chain load is the safest option - you let the native boot loader to do all the work and thats it.\n[14:10:43]  tsoome  yep, you need to configure it to read partition boot block and execute it.\n[14:11:43]  tsoome  this way you dont have to worry about updates etc",
            "title": "Install OpenIndiana (graphical installer)"
        },
        {
            "location": "/handbook/getting-started/#install-openindiana-using-the-text-installer",
            "text": "NOTE:  \nThe text based guided install starts and runs within a command line console.\nNavigation within the installer is performed by pressing specifically designated navigation keys ( F2 , Tab, etc.).  The instructions for performing a text based install apply to the following installation scenarios:  \n    Launching the text based installer icon from the Live Media (GUI) desktop. \n    Beginning a text based installation by booting from the OpenIndiana text based installer.    New for the 2016.10 release  Mirrors and RAIDZ are now supported install options!  \n   To install to a mirror, select 2 or more disks. \n   To install to RAIDZ, select 3 or more disks.     The text based installation process begins with the welcome screen, which provides the following information:   Location of the installation log file  Navigational guidance     NOTE:  \nAt any time during the installation process you may press the  F6  key for context specific help.  When ready to begin, press the  F2  key to continue.   On this screen the installer displays the disks which have been discovered and are available for installation.   Use the up and down arrow keys to navigate between the disks.  To select a disk, press the space bar while the disk is highlighted.  A disk is selected for installation when an asterisk appears next to the disk.   Once you have selected the appropriate disk, press the  F2  key to continue.   If your system has only a single disk, it is already selected.  If your system has multiple disks, select the appropriate disk(s).  To install to a mirror, select 2 or more disks.  To install to RAIDZ, select 3 or more disks.       NOTE:   While the minimum and recommended disk sizes are technically accurate, they do not take into account periodic disk usage growth resulting from:   ZFS snapshots  Installation of additional software  New boot environments automatically created when running the  pkg update  command  New backup boot environments automatically created when running the  pkg install  command   To account for this, your disk should be at least 20GB or more.    After pressing the  F2  key, you may be presented with warning shown above.\nIf reformatting the entire disk is acceptable with you, press the  Tab  key to select  continue  and then press the  Enter  key.\nOtherwise press the  Enter  key to  cancel .  If you select cancel, you will have the following options:   Select another disk  Abort the installation so you may provide remedial action such as:  Modifying the partition table using Gparted  Adding another disk to the system       CAUTION:  \nIf your disk contains a GPT disk label, the entire disk will be used.   Any existing GPT partitions will be destroyed  A new single GPT partition will be created.   This warning serves as your advisory.     NOTE:  \nThis screen will be available only when  2 or more disks  have been selected.   If 2 disks have been selected, the ZFS mirror option becomes available.  If 3 or more disks have been selected, the ZFS RAIDZ option become available.   Select between the options using the up and down arrow keys.  When ready, press the  F2  key to continue.     NOTE:  \nThis screen will be available only when a  single disk  has been selected.  In this screen you are presented with the following choices for how to partition the disk:   Use the whole disk (EFI)  Use a partition of the disk (MBR)   Select between the options using the up and down arrow keys.  When ready, press the  F2  key to continue.     NOTE:  \nThis screen will be available only when the  Use a partition of the disk (MBR)  option has been selected.  This screen provides the following options:   Select the partition where you would like to install Openindiana.  Change the partition type  Change the partition size  Free up space by deleting a partition   Navigate the fields using the arrow keys.\nChange a partition type using the  F5  key.  When ready, press the  F2  key to continue.     NOTE:  \nWe have illustrated this screen twice as 2 different tasks are required.  In this step you will configure the hostname.  At the top portion of the screen specify the computer name (system hostname) you wish to use.\nBy default the computer name is  openindiana .\nUsing the backspace key, you may remove the default hostname and provide another hostname.  When ready, proceed to the next screen shot below where you will be provided additional guidance for completing this screen.     NOTE:  \nWe have illustrated this screen twice as 2 different tasks are required.  In this step you will select your network configuration type.  After configuring the system hostname, navigate to the lower portion of the screen to select your networking configuration.  From the lower portion of this screen you have the following choices:   Automatically configure the (networking) connection (using DHCP)  Manually configure the network settings by entering the information on the next screen  Do not configure the network at this time   Select between the options using the up and down arrow keys.  When ready, press the  F2  key to continue.     NOTE:  \nThis screen will be available only when the  Manually  configure network option has been selected.   The values illustrated above are for example only, do not use them.  Substitute each field with correct values for your network.    In the fields provided, enter in the following information:   IP Address  Netmask  Gateway  DNS  Domain   Navigate between the fields using the up and down arrow keys.  When ready, press the  F2  key to continue.   The next few screens illustrate time zone configuration.  Select your time zone  region  by navigating up and down with the arrow keys.  When ready, press the  F2  key to continue.    NOTE:  \nWhen selecting the  UTC/GMT  time zone region, only this screen will be presented.   Select your time zone  location  by navigating up and down with the arrow keys.  When ready, press the  F2  key to continue.   Select your  time zone  by navigating up and down with the arrow keys.  When ready, press the  F2  key to continue.   In this screen you may reconfigure the date and time as necessary.  Using the up and down arrow keys, navigate between the fields.  When ready, press the  F2  key to continue.   In this screen you are presented with several fields to configure.   Root password  Confirm Root password  Real name  User name  User password  Confirm user password   Using the up and down arrow keys, navigate between the fields and enter the required information.  When ready, press the  F2  key to continue.    NOTE    The first user created on the system is granted the root role via  Role Based Access Control  (RBAC).  In effect this means the following:  Without any further configuration, the specified user will be granted the authority to perform administrative task by assuming the root role as needed.     Please take note the following additional information:   Immediately after installation the root password is automatically expired and needs to be changed prior to being used for any administrative task.     Now that you have completed the installation configuration, you are presented with an  Installation Summary .  If these configuration settings are correct, you may begin the installation by pressing the  F2  key.   Depending on the speed of your computer, the installation may take several minutes to complete.\nInstallation progress is measured by means of a status bar.   When the installation is complete, a summary screen is presented.   The installation logs are available by pressing the  F4  key.  If you ran the installation from Live Media, you may exit the installation by pressing the  F9  key.  Otherwise, you will want to reboot the system by pressing the  F8  key.    If you chose to view the installation logs, you will be presented with the screen above.  To return to the summary screen, press the  F3  key.",
            "title": "Install OpenIndiana using the Text Installer"
        },
        {
            "location": "/handbook/getting-started/#installing-openindiana-using-the-text-installer-dvd-iso-or-usb",
            "text": "The text installer DVD ISO and USB installer options are not graphical nor do they provide a live environment.\nWhen booting from the text based installer, you are presented with the following choices:   Install OpenIndiana  Spawn a shell to be used as a rescue disk.   The procedure for installing from the text based installer follows the same process as the previously described  Install OpenIndiana using the Text Installer",
            "title": "Installing OpenIndiana using the text installer (DVD ISO or USB)"
        },
        {
            "location": "/handbook/getting-started/#troubleshooting-installations",
            "text": "If you do not see a menu after booting your computer with the DVD or USB device, and instead see some text and a  grub  prompt, there may be an error in your copy of the installer, or it was created incorrectly.  If you see a  login:  prompt after selecting your keyboard and language and no desktop appears after several seconds, there may be a problem with the drivers for your graphics hardware.  Please let us know via IRC or the mailing list if this happens.  When you contact us, please include any error messages you see on the console, as well as the output of the  svcs -xv  command.  If possible, also include the contents of the file  /var/log/Xorg.0.log .",
            "title": "Troubleshooting Installations"
        },
        {
            "location": "/handbook/getting-started/#post-installation-steps",
            "text": "",
            "title": "Post Installation Steps"
        },
        {
            "location": "/handbook/getting-started/#boot-menu-post-install",
            "text": "After successfully installing OpenIndiana Hipster, a new boot menu option becomes available.\nAs shown in the screen below, option # 6 allows you to select the boot environment.   Each time you perform an update of software installed on OpenIndiana Hipster, a new boot environment may be created.\nOption # 6 allows you to select from among them.   After using OpenIndiana for a period of time, several boot environments will accumulate, with the label for each environment incrementing numerically.\nThe image above illustrates what this looks like on a system with several boot environment choices.",
            "title": "Boot Menu - Post Install"
        },
        {
            "location": "/handbook/getting-started/#resetting-the-root-password",
            "text": "After installation, the root password is immediately expired and you will be required to change it.  Use the following steps to change the root password:   Open a Terminal  Execute  su -  and provide the password you chose for your account at installation time  You will be informed that root's password has expired and prompted to change it  Once changed you can exit the su session  You should be able to login/authenticate as root now.",
            "title": "Resetting the root password"
        },
        {
            "location": "/handbook/getting-started/#image-package-system-ips",
            "text": "NOTE:  \nThe image packaging system is delivered as part of the OpenIndiana userland.\nAs such, the pkg related man pages are not available on the illumos.org website.\nThese pages are only available by running the man page viewer locally on your system.    DOC TEAM NOTE:   Have a look at:  pgk cheat sheet  to see whether there is anything there which we might want to import and validate.",
            "title": "Image Package System (IPS)"
        },
        {
            "location": "/handbook/getting-started/#introduction_1",
            "text": "After an initial installation of the OpenIndiana Hipster operating system, you will find many of the software applications you use on a regular basis are not immediately available to you.\nThese software applications are available as packages in a remote Image Packaging System (IPS) repository for downloading and installing over the Internet.  Written in Python, IPS is a network-centric packaging system which enables users to connect to a remote repository for the purpose of downloading and installing packages.\nOpenIndiana Hipster uses IPS for its packaging system.  Besides installing packages from a repository, users can also perform the following tasks:   Create and publish their own IPS packages  Set up an OpenIndiana Hipster repository  Mirror an existing repository  Publish existing packages to a repository   Once you have installed packages, IPS enables you to search, update, and manage those packages on your system.  With IPS , you can upgrade your system to a newer build of OpenIndiana Hipster, install and update your software to the latest available versions, and retrieve packages from mirror repositories.  If the system on which IPS is installed is located on a network, IPS can automatically access the OpenIndiana Hipster package repository.\nFor OpenIndiana Hipster, your IPS client can access the packages from  https://pkg.openindiana.org/hipster .",
            "title": "Introduction"
        },
        {
            "location": "/handbook/getting-started/#ips-packages",
            "text": "An IPS package is defined as a collection of files, directories, links, drivers and dependencies in a defined format.  Note the following points about IPS packages:   An IPS package consists of a set of actions.\nActions are defined when an IPS package is created.\nActions are used for defining the files and directories of the package, setting package attributes, declaring dependencies on other packages, creating users and groups, and installing device drivers.\nSome actions may optionally have tags that provide meta information about the action such as locale information and debug configuration.  IPS packages can only be installed from an IPS repository.  IPS package repositories can be local to the system or on a remote networked system.",
            "title": "IPS packages"
        },
        {
            "location": "/handbook/getting-started/#ips-commands",
            "text": "The Image Packaging System software provides the following commands:     Command  Description      pkg 1  Use the  pkg 1  command to create an image, to install packages to your image, and to manage packages on your image.    pkgsend 1  Use the  pkgsend 1  command to publish packages from your image to an existing repository.    pkg.depotd 1M  Use the  pkg.depotd 1M  command to create and manage your own network repository or set up a mirror repositories.    pkgrecv  Use the  pkgrecv  command to download the contents of a package from a server. The user can then modify the contents by adding additional package attributes and republish the package with the  pkgsend  command.       NOTE:    The  pkg 5  man page describes the overall Image Packaging System.  The  pkg 1  man page describes the Image Packaging System retrieval client.",
            "title": "IPS commands"
        },
        {
            "location": "/handbook/getting-started/#pkg1-uses-fmris",
            "text": "Each IPS package is represented by a  Fault Management Resource Identifier  (FMRI).\nThe pkg 1  command uses valid FMRI package information to perform its command actions.\nThe FMRI includes descriptive information about the package, such as the package name, version information, and date.  For example:  FMRI: pkg://openindiana.org/image/editor/gimp@2.8.16-2016.0.0.0:20160702T042138Z   Scheme \u2013 pkg  Authority \u2013 openindiana.org  PackageName \u2013 gimp  Version String \u2013 Consists of three components :  Build Version \u2013 2.8.16  Branch Version \u2013 2016.0.0.0  Timestamp \u2013 20160702T042138Z",
            "title": "pkg1 uses FMRIs"
        },
        {
            "location": "/handbook/getting-started/#finding-help-with-pkg",
            "text": "The primary source of help for any OpenIndiana command is to review the man page for the command.\nTherefore, be sure to consult the  pkg 1  man page for full command information and usage examples.  For example:  man pkg  To reference command usage directly from the command line, use  pkg help .  For example:  pkg help  Usage:    pkg [options] command [cmd_options] [operands]\nThe following commands are supported:\n\nPackage Information  : list           search         info      contents\nPackage Transitions  : update         install        uninstall\n                       history        exact-install\nPackage Maintenance  : verify         fix            revert\nPublishers           : publisher      set-publisher  unset-publisher\nPackage Configuration: mediator       set-mediator   unset-mediator\n                       facet          change-facet\n                       variant        change-variant\nImage Constraints    : avoid          unavoid        freeze    unfreeze\nImage Configuration  : refresh        rebuild-index  purge-history\n                       property       set-property   add-property-value\n                       unset-property remove-property-value\nMiscellaneous        : image-create   dehydrate      rehydrate\nFor more info, run: pkg help  command   To retrieve information about a specific command use:  pkg help [command]  For example:  pkg help update  Usage:\n        pkg update [-fnvq] [-C n] [-g path_or_uri ...] [--accept] [--ignore-missing]\n            [--licenses] [--no-be-activate] [--no-index] [--no-refresh]\n            [--no-backup-be | --require-backup-be] [--backup-be-name]\n            [--deny-new-be | --require-new-be] [--be-name name]\n            [-r [-z image_name ... | -Z image_name ...]]\n            [--sync-actuators | --sync-actuators-timeout timeout]\n            [--reject pkg_fmri_pattern ...] [pkg_fmri_pattern ...]",
            "title": "Finding help with pkg"
        },
        {
            "location": "/handbook/getting-started/#searching-for-packages",
            "text": "The  pkg search  command is used to search locally or remotely for information about packages.\nThe syntax of the command is  pkg search [options] [package] .\nIf no search options are specified, the command defaults to performing a search of all the remote repositories defined on the system.\nUsing the  -l  option, you may restrict the search to the local system.  For example:  pkg search xchat  INDEX                ACTION VALUE                                   PACKAGE\npkg.summary          set    XChat IRC Client                        pkg:/desktop/irc/xchat@2.8.8-2016.0.0.5\npkg.summary          set    HexChat is an IRC client based on XChat pkg:/desktop/irc/hexchat@2.12.1-2016.0.0.1\nbasename             file   usr/bin/xchat                           pkg:/desktop/irc/xchat@2.8.8-2016.0.0.5\ncom.oracle.info.name set    xchat                                   pkg:/desktop/irc/xchat@2.8.8-2016.0.0.5\npkg.fmri             set    openindiana.org/desktop/irc/xchat       pkg:/desktop/irc/xchat@2.8.8-2016.0.0.5  As you can see, the search results include package names along with additional information.\nTo search for package names only, include the  -p  option.  For example:  pkg search -p xchat  PACKAGE                                    PUBLISHER\npkg:/desktop/irc/hexchat@2.12.1-2016.0.0.1 openindiana.org\npkg:/desktop/irc/xchat@2.8.8-2016.0.0.5    openindiana.org    NOTE:  \nWhen using the  pkg search  command, remember it works much like the Unix  find  command.\nIf you have difficulty finding a package you know should exist, try modifying your search by including wildcards.  The  pkg search  command may also be used to find the package containing a particular file.  For example:  pkg search -l /usr/bin/gpg2  INDEX      ACTION VALUE        PACKAGE\npath       file   usr/bin/gpg2 pkg:/crypto/gnupg@2.0.28-2016.0.0.0",
            "title": "Searching for packages"
        },
        {
            "location": "/handbook/getting-started/#listing-the-status-of-packages",
            "text": "To list the status of locally installed packages, use the  pkg list [package]  command.  For example:  pkg list bash  NAME (PUBLISHER)                                  VERSION                    IFO\nshell/bash                                        4.3.46-2016.0.0.0          i--    NOTE:  \nTo list all the packages installed on the local system, use  pkg list  without specifying a package.",
            "title": "Listing the status of packages"
        },
        {
            "location": "/handbook/getting-started/#listing-information-about-packages",
            "text": "To list detailed information about a locally installed package, use the  pkg info [package]  command.\nIf the package is not installed on the local system, use the  -r  option to search the remote repositories defined on the system.  For example:  pkg info -r gimp            Name: image/editor/gimp\n       Summary: The Gimp image editor\n      Category: Applications/Graphics and Imaging\n         State: Not installed\n     Publisher: openindiana.org\n       Version: 2.8.16\n        Branch: 2016.0.0.2\nPackaging Date: July 30, 2016 12:04:41 AM\n          Size: 65.01 MB\n          FMRI: pkg://openindiana.org/image/editor/gimp@2.8.16-2016.0.0.2:20160730T000441Z\n   Project URL: http://www.gimp.org/\n    Source URL: http://download.gimp.org/pub/gimp/v2.8/gimp-2.8.16.tar.bz2",
            "title": "Listing information about packages"
        },
        {
            "location": "/handbook/getting-started/#listing-the-contents-of-packages",
            "text": "To list the entire contents of a package, use the  pkg contents [package]  command.\nIf the package is not installed on the local system, use the  -r  option to search the remote repositories defined on the system.",
            "title": "Listing the contents of packages"
        },
        {
            "location": "/handbook/getting-started/#listing-the-dependencies-of-packages",
            "text": "The  pkg contents  command can also be used to list the dependencies found in a package.\nIf the package is not installed on the local system, be sure to include the  -r  option.  For example:  pkg contents -r -t depend -o fmri xchat  FMRI\npkg:/library/desktop/gdk-pixbuf@2.31.6-2016.0.0.0\npkg:/library/desktop/gtk2@2.24.30-2016.0.0.0\npkg:/library/desktop/libsexy@0.1.11-2016.0.0.0\npkg:/library/desktop/pango@1.36.8-2016.0.0.2\npkg:/library/glib2@2.43.4-2016.0.0.3\npkg:/library/security/openssl@1.0.2.8-2016.0.0.3\npkg:/runtime/perl-522@5.22.1-2016.0.0.1\npkg:/runtime/python-27@2.7.12-2016.0.0.0\npkg:/runtime/tcl-8@8.5.19-2016.0.0.1\npkg:/system/library/libdbus-glib@0.100.2-2016.0.0.0\npkg:/system/library@0.5.11-2016.0.0.15685\npkg:/x11/library/libx11@1.6.3-2016.0.0.0",
            "title": "Listing the dependencies of packages"
        },
        {
            "location": "/handbook/getting-started/#installing-packages",
            "text": "Use the following command to install a package.  pkg install [options] [packages]  Some commonly used options are:     Option  Description      -v  Issue verbose progress messages    -n  Perform a dry run (no actual changes are made)    -q  Hides progress messages     For example:  pkg install xchat             Packages to install:   1\n            Packages to update:   1\n            Services to change:   2\n       Create boot environment:  No\nCreate backup boot environment: Yes\n\nDOWNLOAD                                PKGS         FILES    XFER (MB)   SPEED\nCompleted                                2/2         38/38      2.6/2.6  746k/s\n\nPHASE                                          ITEMS\nRemoving old actions                             4/4\nInstalling new actions                         69/69\nUpdating modified actions                        2/2\nUpdating package state database                 Done\nUpdating package cache                           1/1\nUpdating image state                            Done\nCreating fast lookup database                   Done    NOTE:    The  pkg install  command is also used to update specific packages on the system.  The  pkg install  command automatically checks for newer versions of specific packages or package groups and installs them if they are available.\nAny dependent packages are also automatically updated.  To install a specific version of a package you may substitute the common name for the FMRI.",
            "title": "Installing packages"
        },
        {
            "location": "/handbook/getting-started/#updating-packages",
            "text": "The command to use for updating packages on the system is:  pkg update [options] [packages]  Some commonly used options are:     Option  Description      -v  Issue verbose progress messages    -n  Perform a dry run (no actual changes are made)    -q  Hides progress messages     To update all the packages installed on a system to their latest available version, use the  pkg update  command without specifying any package names.  For example:  pkg update              Packages to remove:    4\n           Packages to install:   11\n            Packages to update: 1018\n            Packages to change:    2\n           Mediators to change:    1\n       Create boot environment:  Yes\nCreate backup boot environment:   No\n\nDOWNLOAD                                PKGS         FILES    XFER (MB)   SPEED\nCompleted                          1035/1035     7502/7502  303.4/303.4  886k/s\n\nPHASE                                          ITEMS\nRemoving old actions                       3931/3931\nInstalling new actions                     6889/6889\nUpdating modified actions                11999/11999\nUpdating package state database                 Done\nUpdating package cache                     1022/1022\nUpdating image state                            Done\nCreating fast lookup database                   Done\n\nA clone of openindiana-1 exists and has been updated and activated.\nOn the next boot the Boot Environment openindiana-2 will be\nmounted on '/'.  Reboot when ready to switch to this updated BE.\n\n\n---------------------------------------------------------------------------\nNOTE: Please review release notes posted at:\n\nhttp://wiki.openindiana.org/display/oi/oi_hipster\n---------------------------------------------------------------------------",
            "title": "Updating packages"
        },
        {
            "location": "/handbook/getting-started/#removing-packages",
            "text": "To remove a package from the system, use the command:  pkg uninstall [options] [packages]",
            "title": "Removing packages"
        },
        {
            "location": "/handbook/getting-started/#downgrading-packages",
            "text": "In addition to installing, upgrading, and removing packages, it is also possible to downgrade packages.\nTo downgrade packages, use the  pkg update  command and specify the versions of the packages you wish to install.\nWhere the package has dependencies, you will need to specify the versions of the dependencies as well.\nThe  pkg  utility will remove the newer versions and replace them with the versions you have specified.  For example:  pkg update pkg://userland/library/audio/gstreamer@0.10.36 \\\nlibrary/audio/gstreamer/plugin/base@0.10.36 \\\nlibrary/audio/gstreamer/plugin/good@0.10.31    NOTE:  \nThe OpenIndiana project uses package incorporations to ensure packages are maintained to specific versions.\nWhere packages are included in an incorporation, it is not possible to revert to an earlier (or newer) version of the package without first relaxing the restrictions imposed by the incorporation.\nWhere packages are not restricted by an incorporation, you may freely revert to earlier package versions.  To relax the restrictions on a package, the  pkg change-facet  command is used.  The syntax of the command is  pkg change-facet facet.version-lock.[package]=false  For example:  pkg change-facet facet.version-lock.library/security/gstreamer=false",
            "title": "Downgrading packages"
        },
        {
            "location": "/handbook/getting-started/#ips-package-repositories",
            "text": "As previously mentioned, the IPS repository is the remote network location where IPS packages reside.\nBelow is a list of commands for adding, removing, or replacing repositories.     Task  Command      List configured repositories  pkg publisher    Add a repository  pkg set-publisher \\     -g  repository_URL  \\     repository_name    Remove a repository  pkg set-publisher \\     -G  repository_URL  \\     repository_name    Replace a repository  pkg set-publisher \\     -G  old_repository_URL  \\     -g  new_repository_URL  \\     repository_name     Example (Listing the repositories configured on the system):  pkg publisher  PUBLISHER                   TYPE     STATUS P LOCATION\nopenindiana.org             origin   online F https://pkg.openindiana.org/hipster/\nhipster-encumbered          origin   online F https://pkg.openindiana.org/hipster-encumbered/  Example (Replacing a repository):  pkg set-publisher \\\n-G http://pkg.openindiana.org/hipster-2015 \\\n-g https://pkg.openindiana.org/hipster openindiana.org",
            "title": "IPS package repositories"
        },
        {
            "location": "/handbook/getting-started/#listing-information-about-repositories",
            "text": "While the  pkgrepo  command is primarily used for creating and working with IPS repositories.\nIt can also be used for querying the contents of a repository.  For example:  pkgrepo info -s https://pkg.openindiana.org/hipster/  PUBLISHER       PACKAGES STATUS           UPDATED\nopenindiana.org 3692     online           2016-08-21T07:03:11.566484Z  If you want to directly query the remote repository for a full list of all available packages, you can do so using the  pkgrepo list  command.   pkgrepo list -s  repo_URL   Do keep in mind you may want to filter the output of the command in some way to keep the list more manageable.\nIf not, you're likely to see thousands of lines scroll through your console window.",
            "title": "Listing information about repositories"
        },
        {
            "location": "/handbook/getting-started/#ips-package-repository-precedence",
            "text": "When multiple remote IPS repositories are associated with a system and when using the  pkg  command-line interface with only package names, the following rules apply.\nThese rules can be overridden by using explicit publishers and package version numbers.     Package Installation Type  Rules When Only Package Names Are Provided      New package installations  The latest available version of new packages are always installed from the preferred publisher unless the publisher is provided in the FMRI during installation. Even if later versions of the package are available in other publishers, those later versions are not installed by default.    Package updates: package originally installed from preferred publisher  If the package was originally installed from the preferred publisher, then the latest available update of the package can be installed from the  current  preferred publisher. The package can be install from the  current  preferred even if the preferred publisher designation had been moved to another publisher after the package had been originally installed. Even if later versions of the package are available in other publishers, those later versions are not installed by default.    Package updates: package originally installed from non-preferred publisher  If the package was originally installed from a non-preferred publisher, then the latest available update of the package is installed from the publisher from which the package was originally installed. Even if later versions of the package are available in other publishers, those later versions are not installed by default.",
            "title": "IPS package repository precedence"
        },
        {
            "location": "/handbook/getting-started/#listing-package-history",
            "text": "To list the IPS transactional history, use the  pkg history  command.  For example:  pkg history  START                    OPERATION                CLIENT             OUTCOME\n2016-04-21T03:30:04      purge-history            pkg                Succeeded\n2016-07-02T16:09:56      uninstall                pkg                Succeeded\n2016-07-02T16:10:33      uninstall                pkg                Succeeded\n2016-07-02T16:11:08      uninstall                pkg                Succeeded\n2016-07-02T16:11:42      uninstall                pkg                Succeeded\n2016-07-02T16:12:18      set-property             pkg                Succeeded\n2016-07-02T16:12:22      set-property             pkg                Succeeded\n2016-07-02T16:37:06      refresh-publishers       pkg                Succeeded\n2016-07-02T16:37:06      update                   pkg                Succeeded\n2016-07-02T16:37:32      rebuild-image-catalogs   pkg                Succeeded\n2016-07-02T17:33:44      install                  pkg                Succeeded\n2016-07-02T17:35:11      install                  pkg                Succeeded\n2016-07-02T18:31:39      install                  pkg                Succeeded\n2016-07-04T19:49:19      install                  pkg                Succeeded\n2016-07-04T19:49:23      refresh-publishers       pkg                Succeeded\n2016-07-04T19:49:56      rebuild-image-catalogs   pkg                Succeeded\n2016-07-09T01:16:43      install                  pkg                Succeeded\n2016-07-09T01:16:45      refresh-publishers       pkg                Succeeded\n2016-07-09T01:17:20      rebuild-image-catalogs   pkg                Succeeded\n2016-07-09T11:33:05      install                  pkg                Succeeded\n2016-07-09T11:33:07      refresh-publishers       pkg                Succeeded\n2016-07-09T11:33:37      rebuild-image-catalogs   pkg                Succeeded\n2016-07-09T12:27:23      update                   pkg                Succeeded  To view more details of a particular IPS transaction, use the command:  pkg history [-l] [-t time_stamp]  For example:  pkg history -l -t 2016-07-09T11:33:05   The  -l  option provides comprehensive details of each transaction  The  -t  option allows you to specify a particular transaction",
            "title": "Listing package history"
        },
        {
            "location": "/handbook/getting-started/#ips-package-archives-p5p",
            "text": "When the IPS system was originally conceived there was no standard on-disk format for an IPS package.\nHence, unlike a .rpm file, an SVR4 package, or a .nbm file, it was not possible to transfer IPS packages from system to system.\nThe remote IPS repository where the IPS package resided was the only source for the package.\nThis is because in its native state, the IPS package is not something you can normally download as a single archive file.  Recognizing this limitation of IPS, the  .p5p  IPS archive format was developed.\nFor IPS archives, files are stored in the pax archive format, along with additional metadata, such as IPS manifest files, and a specific layout of the contents.  IPS p5p archives are not like Linux packages where you can install software directly from the package.\nInstead p5p archives are a portable repository format containing a collection of packages.\nThis allows you to create p5p archives for transfer to non-networked systems.\nIPS package archives are also useful for sharing packages for the purpose of testing.  IPS archives allow you to:   Download one or more packages (along with all necessary dependencies) into a p5p archive file.  Create a local repository based on the contents of the p5p archive file.  Install packages from the locally created repository.",
            "title": "IPS package archives (.p5p)"
        },
        {
            "location": "/handbook/getting-started/#creating-the-p5p-package",
            "text": "To create an IPS archive, the  pkgrecv  command is used.  For example, to create a  .p5p  IPS package archive containing the package  userland/web/browser/firefox  and all of its dependencies from the repository located at  http://example.com:10000 , use the following command:  pkgrecv -s http://example.com:10000 -d ~/firefox_test.p5p -a -r pkg://userland/web/browser/firefox@45.3.0-2016.0.0.0:20160817T064143Z",
            "title": "Creating the p5p package"
        },
        {
            "location": "/handbook/getting-started/#listing-the-contents-of-a-p5p-package",
            "text": "There are at least two different ways to view the contents of an IPS archive.  pkgrepo -s ~/firefox_test.p5p list  PUBLISHER NAME                                          O VERSION\nuserland  library/expat                                   2.1.0-2015.0.1.1:20150901T125810Z\nuserland  library/glib2                                   2.43.4-2016.0.0.4:20160705T121550Z\nuserland  library/glib2/charset-alias                     2.43.4-2016.0.0.4:20160705T121609Z\nuserland  system/library/fontconfig                       2.11.95-2016.0.0.0:20160512T122747Z\nuserland  web/browser/firefox                             45.3.0-2016.0.0.0:20160817T064143Z\nuserland  x11/library/toolkit/libxt                       1.1.4-2016.0.0.0:20160706T165209Z  This also works:  pkg list -f -g  ~/firefox_test.p5p  NAME (PUBLISHER)                                  VERSION                    IFO\nlibrary/expat (userland)                          2.1.0-2015.0.1.1           ---\nlibrary/glib2 (userland)                          2.43.4-2016.0.0.4          ---\nlibrary/glib2/charset-alias (userland)            2.43.4-2016.0.0.4          ---\nsystem/library/fontconfig (userland)              2.11.95-2016.0.0.0         ---\nweb/browser/firefox (userland)                    45.3.0-2016.0.0.0          ---\nx11/library/toolkit/libxt (userland)              1.1.4-2016.0.0.0           ---",
            "title": "Listing the contents of a p5p package"
        },
        {
            "location": "/handbook/getting-started/#adding-the-package-as-a-local-repository",
            "text": "pkg set-publisher -p firefox_test.p5p",
            "title": "Adding the package as a local repository"
        },
        {
            "location": "/handbook/getting-started/#installing-software-from-the-local-repository",
            "text": "pkg install firefox@45.3.0-2016.0.0.0:20160817T064143",
            "title": "Installing software from the local repository"
        },
        {
            "location": "/handbook/getting-started/#legacy-package-management-tools",
            "text": "OpenIndiana continues to support the use of legacy package tools for managing SVR4 packages.\nHere are some of the available tools:   pkginfo  pkgadd  pkgrm",
            "title": "Legacy package management tools"
        },
        {
            "location": "/handbook/getting-started/#3rd-party-package-management-tools",
            "text": "DOC TEAM NOTE:  \nITEMS TO WRITE ABOUT:   Need to answer the question \u201cWhere and how can I install more software?\u201d  Discuss 3rd party package managers ( pkgin , etc.)  Discuss the various 3rd party repos, what's available in them, and which\n  might break compatibility, etc.:  pkgsrc \n  ( wiki page ,\n   NetBSD wiki page )  Joyent's pkgsrc binary packages \n  ( install on illumos ,\n   wiki page )  opencsw  SFE (spec-files-extra) \n  ( wiki page ,\n   other wiki page ):\n  describe and explain how it differs from OI and other repos.    How to add additional repos, etc.  How to compile your own software.  Existing wiki pages:\n   Knowledge base ,\n   Compiling software on OpenIndiana  Also could look here (might be outdated):\n   Compiling Software on Solaris    Given the limited number of IPS packages currently available, these are\n  pretty important subjects to write about.    In addition to IPS and SVR4 package management tools, it is also possible to use  pkgsrc .  For more information about pkgsrc, see the  Joyent package source website .    CAUTION:   The use of 3rd party repositories and package managers increases the likelihood of conflicts between package versions and their dependencies.\nFurthermore, the OpenIndiana project cannot guarantee the qualify of packages obtained from 3rd party repositories.\nTherefore, use 3rd party repositories and 3rd party package tools at your own risk.",
            "title": "3rd party package management tools"
        },
        {
            "location": "/handbook/getting-started/#managing-boot-environments",
            "text": "A boot environment is a bootable instance of an OpenIndiana operating system image plus any other application software packages installed into that image.\nYou can maintain multiple boot environments on your system, and each boot environment could have different software versions installed.\nUpon the initial installation of OpenIndiana onto your system, a boot environment is created.\nUse the  beadm 1M  utility to administer additional boot environments on your system.  The  beadm  utility is designed to work in concert with the ZFS file system and the IPS package manager.",
            "title": "Managing Boot Environments"
        },
        {
            "location": "/handbook/getting-started/#why-use-multiple-boot-environments",
            "text": "With multiple boot environments, the process of updating software becomes a low risk operation because you can create backup boot environments before making any software updates to your system.\nIf needed, you have the option of booting a backup boot environment.  Here are some specific examples where having more than one OpenIndiana boot environment, and managing them with the  beadm  utility, is useful:    When you use the  pkg update  command to update all the packages in your active OpenIndiana boot environment, this process automatically creates a clone of that boot environment.\nThe packages are updated in the clone rather than in the original boot environment.\nAfter successfully completing the updates, the new clone is activated.\nThen, the clone will become the new default boot environment on the next reboot.\nThe original boot environment remains on the GRUB menu as an alternate selection.\nYou can use the  beadm list  command to see a list of all the boot environments on the system, including the backup boot environment that still has its original, unchanged software.\nIf you are not satisfied with the updates made to the environment, you can use the  beadm activate  command to specify that the backup will become the default boot environment on the next reboot.    If you are modifying a boot environment, you can take a snapshot of that environment at any stage during modifications by using the  beadm create  command.\nA snapshot is a read-only image of a dataset or boot environment at a given point in time.\nYou can create custom names for each snapshot that identify when or why the snapshot was created.\nFor example, if you are doing monthly upgrades to your boot environment, you can capture snapshots for each monthly upgrade.\nYou can use the  beadm list -s  command to view the available snapshots for a boot environment.\nA snapshot is not bootable.\nBut, you can create a boot environment, based on that snapshot, by using the  -e  option for the  beadm create  command.\nThen you can use the  beadm activate  command to specify that this boot environment will become the default boot environment on the next reboot.    You can maintain more than one boot environment on your system, and perform various upgrades on each of them as needed.\nFor example, you can clone a boot environment by using the  beadm create  command.\nA clone is a bootable copy of a boot environment.\nThen, you can install, test, and update different software packages on the original boot environment and on its clone.\nAlthough only one boot environment can be active at a time, you can mount an inactive boot environment by using the  beadm mount  command.\nThen you can use the  pkg update  command with the  -R  option to update all the packages in that inactive, mounted environment.\nOr, use the  pkg install packagename  with the  -R  option to update specific packages on that environment.    \nWhen  pkg  creates new boot environment, it determines its name using  auto-be-name  image property.\nWhen prefixed with \"time:\" string, the remaining part of property is interpreted as  strftime(3C)  argument.\nIf  pkg  can't produce unique boot environment name based on auto-be-name image property,\nit uses the property as base to generate unique name, appending numerical suffix prefixed by \"-\" symbol.\nNote, that due to name generation rules, any numerical suffix, prefixed by \"-\", can be incremented to\ngenerate unique name, so given \"time:openindiana-%Y-%m-%d\"  auto-be-name image  property value\n(which is not recommended),  pkg  will produce boot environment names ending with current date, current date + 1 and so on.\nBy default  auto-be-name  is set to \"time:openindiana-%Y:%m:%d\", so that boot environments are named like\n\"openindiana-2019:03:29\". You can get current value using  pkg property  command and set it with  pkg set-property .",
            "title": "Why use multiple boot environments?"
        },
        {
            "location": "/handbook/getting-started/#features-of-the-beadm-utility",
            "text": "The  beadm  utility has the following features:    The  beadm  utility aggregates all datasets in a boot environment and performs actions on the entire boot environment at once.\nYou no longer need to perform ZFS commands to modify each dataset individually.    The  beadm  utility manages the dataset structures within boot environments.\nFor example, when the  beadm  utility clones a boot environment that has shared datasets, the utility automatically recognizes and manages those shared datasets for the new boot environment.    The  beadm  utility enables you to perform administrative tasks on your boot environments.\nThese tasks can be performed without upgrading your system.    The  beadm  utility automatically manages and updates the GRUB menu.\nFor example, when you use the  beadm  utility to create a new boot environment, that environment is automatically added to the GRUB menu.    The  beadm  utility enables you to perform the following tasks:   Create a new boot environment based on the active boot environment  Create a new boot environment based on an inactive boot environment  Create a snapshot of an existing boot environment  Create a new boot environment based on an existing snapshot  Create a new boot environment and add a custom title to the GRUB menu.  Activate an existing, inactive boot environment  Mount a boot environment  Unmount a boot environment  Destroy a boot environment  Destroy a snapshot of a boot environment  Rename an existing, inactive boot environment  Display information about your boot environment snapshots and datasets",
            "title": "Features of the beadm utility"
        },
        {
            "location": "/handbook/getting-started/#beadm-command-reference",
            "text": "Command  Description      beadm  Displays command usage    beadm activate  BE  Makes the specified boot environment the active boot environment upon the next reboot.    beadm create  BE  Creates a new boot environment with the name specified. Unless the  -e  option is provided, the new boot environment is created as a clone of the currently running boot environment.    beadm create  BE@snapshot  Creates a snapshot of the existing boot environment with the specified snapshot name.    beadm destroy  BE  Destroys the boot environment named BE or destroys an existing snapshot, BE@snapshot, of a boot environment. Prompts for confirmation before destroying the boot environment.    beadm list  BE  Lists information about the specified boot environment, or lists information for all boot environments if a boot environment name is not provided. The default is to list boot environments without any additional information.    beadm mount  BE   mountpoint  Mounts the specified boot environment at the specified mount point. The mount point must be an already existing, empty directory.    beadm rename  old BE   new BE  Renames the specified boot environment.    beadm unmount [-f]  BE  Unmounts the specified boot environment.  -f  \u2013 Forcefully unmounts the boot environment even if it is currently busy.     For detailed instructions about the  beadm  utility, see the  beadm 1M  man page.",
            "title": "beadm command reference"
        },
        {
            "location": "/handbook/getting-started/#beadm-zones-support",
            "text": "Zones partitioning technology is used to virtualize operating system services and provide an isolated and secure environment for running applications.\nEach OpenIndiana system is a global zone.\nWithin a global zone, specific non-global zones can be created.",
            "title": "beadm zones support"
        },
        {
            "location": "/handbook/getting-started/#zones-support-limitations",
            "text": "Note the following limitations of support for non-global zones in the beadm utility and in related processes:   When using the  pkg update  command, the  -r  switch is required to upgrade all zones.  Non-global zone support is limited to ZFS support.\nZones are not supported unless they are on ZFS.  Zones are not supported in the rpool/ROOT namespace.\nNon-global zones are cloned or copied only when the original zone is within the shared area for the global zone, for example, within rpool/export or within rpool/zones.  Although the  beadm  utility affects the non-global zones on your system, the  beadm  utility does not display zones information.\nUse the  zoneadm  utility to view changes in the zones in your boot environment.\nFor example, use the  zoneadm  list command to view a list of all current zones on the system.   For further information, see the  zoneadm 1M  man page.",
            "title": "Zones support limitations"
        },
        {
            "location": "/handbook/getting-started/#zones-support-specifications",
            "text": "The beadm command impacts the non-global zones in your boot environments as follows:     Command  Support Details      beadm create  When you clone a boot environment by using the beadm create command, all zones in that boot environment are copied into the new boot environment.    beadm destroy  When you destroy an inactive boot environment, the zones that belong to that boot environment are also destroyed.    beadm mount  When you mount a boot environment, the zones in that environment are mounted relative to the mount points for the environment.    beadm unmount  When you unmount a boot environment, the zones in that environment are also unmounted. All mount points are returned to their states prior to being mounted.    beadm rename  When you rename a boot environment, that change does not impact the names of the zones or the names of the datasets that are used for those zones in that boot environment. The change does not impact the relationships between the zones and their related boot environments.",
            "title": "Zones support specifications"
        },
        {
            "location": "/handbook/getting-started/#the-x-window-system",
            "text": "DOC TEAM NOTE:  \nWrite about:   How to create and use an xorg.conf file.  Graphics drivers are found in the  /usr/lib/xorg/modules/drivers/amd64/  graphics driver directory  modinfo only shows kernel drivers, not Xorg drivers, since Xorg drivers are just driver.so files dlopen'ed by a userspace process, not loaded into the kernel address space.  To see what drivers Xorg loaded, either check  /var/log/Xorg.0.log  or run  pldd  on the Xorg process.",
            "title": "The X-Window System"
        },
        {
            "location": "/handbook/getting-started/#video-card-support-2d",
            "text": "Nearly all cards can use the VESA driver, and are therefore supported for 2D.  2D acceleration for NVidia GPU's is provided by the Nvidia binary driver.  An effort is underway to further improve Radeon (2D) acceleration for both legacy and modern AMD GPU's.",
            "title": "Video card support (2D)"
        },
        {
            "location": "/handbook/getting-started/#video-card-support-3d",
            "text": "Nearly all NVidia GPU's are supported by the Nvidia binary driver.  Beginning with the July 2016 experimental release, most Intel GPU's are now also supported.  No 3D support is currently available for AMD GPU's.     DOC TEAM NOTE:  \nWrite about:   The expected behavior when booting the live CD from a system with an NVIDIA card.  Discuss procedure for adding an NVIDIA card to a system that was using VESA or some other non-3d video driver.  Troubleshooting - what logs to look at, manual configuration, etc.  Walk through NVIDIA utility screens.",
            "title": "Video card support (3D)"
        },
        {
            "location": "/handbook/getting-started/#device-drivers",
            "text": "DOC TEAM NOTE:  \nWrite about:   Finding hardware id's  Searching for drivers  Installing and loading drivers  Using the  modinfo  command to list information about loaded kernel driver modules  Using  modload  to load kernel driver modules  Using  modunload  to unload kernel driver modules  Using the  add_drv  command    Adding device ID's to  /etc/driver_aliases , and  /etc/driver_classes , etc.",
            "title": "Device Drivers"
        },
        {
            "location": "/handbook/common-tasks/",
            "text": "Hipster Handbook - Common Tasks\n\n\n \nNOTE:\n\n\n\n\nThis is a \nDRAFT\n document which may contain errors!\n\n\nHelp us improve and expand this site.\n\n\nPlease see the \nContrib\n section for more details about joining the OpenIndiana Documentation Team.\n\n\n\n\n place holder for introduction content \n\n\nBasic UNIX commands\n\n\nIn addition to native command line system administration tools, OpenIndiana also includes the GNU core utilities suite.\nWhen working with basic UNIX commands, most likely you will be using the GNU core utilities.\nFor learning to navigate the OpenIndiana command line environment, Linux command line books are very helpful.\n\n\nOne of the best books currently available is \nThe Linux Command Line\n by William Shotts.\nIf you want to quickly become a command line guru, this is the book to read.\nBest of all, it was released under a Creative Commons license and can be downloaded for free.\nPrint versions are also available.\n\n\nBasic system administration\n\n\nCommands to be able to use administration commands\n\n\n\n\n\n\n\n\nCommand\n\n\nFurther details\n\n\nBrief summary\n\n\n\n\n\n\n\n\n\n\nsu\n\n\nsu(1M)\n\n\nSwitch user. Without any parameters, root implied\n\n\n\n\n\n\nsudo\n\n\nsudo(1M)\n\n\nPerform the command following with root privilages\n\n\n\n\n\n\npfexec\n\n\npfexec(1)\n\n\nSimilar to \nsudo\n but not prompted for a password and limited privilages\n\n\n\n\n\n\n\n\nExamples:\n\n\nBasic system information\n\n\n\n\n\n\n\n\nCommand\n\n\nFurther details\n\n\nBrief summary\n\n\n\n\n\n\n\n\n\n\nprstat\n\n\nprstat(1M)\n\n\nStatistics on system processes\n\n\n\n\n\n\ndf\n\n\ndf(1M)\n\n\nDisk usage by partition\n\n\n\n\n\n\ndu\n\n\ndu(1)\n\n\nDisk usage by file\n\n\n\n\n\n\npkg list\n\n\npkg(1)\n\n\nList software packages installed on the system\n\n\n\n\n\n\n\n\nExamples:\n\n\nSystem shutdown, reboot\u2026\n\n\n\n\n\n\n\n\nCommand\n\n\nFurther details\n\n\nBrief summary\n\n\n\n\n\n\n\n\n\n\nshutdown\n\n\nshutdown(1M)\n\n\nShutdown the system\n\n\n\n\n\n\n\n\nExamples:\n\n\nshutdown -i5 -g0 -y # Turn off the machine immediately\nshutdown -i6 -g0 -y # Reboot the machine immediately\nshutdown -i6 -g120 -y # Reboot the machine in 2 minutes (120 seconds)\n\n\n\n\nUser management\n\n\n\n\n\n\n\n\nCommand\n\n\nFurther details\n\n\nBrief summary\n\n\n\n\n\n\n\n\n\n\nlistusers\n\n\nlistusers(1)\n\n\nList users accounts\n\n\n\n\n\n\nwho\n\n\nwho(1)\n\n\nList users logged onto the system\n\n\n\n\n\n\nuseradd\n\n\nuseradd(1M)\n\n\nCreate a new user\n\n\n\n\n\n\nusermod\n\n\nusermod(1M)\n\n\nModify a user (group memberships, roles, login shell\u2026)\n\n\n\n\n\n\n\n\nDesktop applications\n\n\n place holder \n\n\nHow can the desktop be modified?\n\n\n \nDOC TEAM NOTE:\n\n\n\nITEMS TO WRITE ABOUT:\n\n\n\n\nGnome or (MATE) walkthrough\n\n\nAppearance applet\n\n\nEnabling Compiz\n\n\nConfiguring font anti-aliasing\n\n\nDesktop backgrounds\n\n\n\n\n\n\n\n\nIn regards to the default terminal emulator, see: \nhttps://www.illumos.org/issues/7525\n\n\n\n\nwe introduce mediator x-terminal-emulator for link /usr/bin/x-terminal-emulator with possible implementations gnome-terminal, mate-terminal and xterm;\n\n\nmate-terminal implementation has the highest priority (if it is installed, by default it wins);\n\n\nglib is modified to use link /usr/bin/x-terminal-emulator if it's found for running applications with Terminal=true.\n\n\n\n\n\nMultimedia - Audio\n\n\n Place Holder for future content \n\n\nMultimedia - Video\n\n\n \nDOC TEAM NOTE:\n\n\n\nITEMS TO WRITE ABOUT:\n\n\n\n\nHow to get OI to play a DVD\n\n\nHow to get flash player installed and working.\n\n\nHow to get VLC installed and working.\n\n\nTotem (video player)\n\n\n\n\n\n\n\nUsing OpenIndiana as a media server, HTPC, etc.\n\n\n \nDOC TEAM NOTE:\n\n\n\nITEMS TO WRITE ABOUT:\n\n\n\n\nhttp://forum.kodi.tv/showthread.php?tid=44315\npage=2\n\n\nhttp://lightsandshapes.com/plex-on-smartos.html\n\n\n\n\n\n\n\nPrinting\n\n\n \nDOC TEAM NOTE:\n\n\n\nITEMS TO WRITE ABOUT:\n\n\n\n\nOI uses CUPS as the primary print system.\n\n\nGNOME print manager (\nsystem-config-printer\n)\n\n\n\n\nSee the additional information about printing in contrib/topics.md\nAlso see the deprecation comments in the OSOL printing guide.\n\n\n\n\n\nGraphics workstation\n\n\n \nDOC TEAM NOTE:\n\n\n\nITEMS TO WRITE ABOUT:\n\n\n\n\nGIMP\n\n\n\n\n\n\n\nDesktop Publishing system, Etc.\n\n\n Place holder for content \n\n\nBoot loader settings\n\n\nOpenIndiana Hipster uses the 'BootForth' boot loader (GRUB is not used any\nmore, disregard older manusls/wiki pages that mention grub).\n\n\nBoot configuration items should be stored in \n/boot/conf.d\n.\n\n\n\n\n\n\nTo change the console from the standard monitor to serial console\n    (e.g. \nCOM1\n / \nttyS0\n on other OSes), use the following command:\n\n\n# echo console=ttya \n /boot/conf.d/console\n\n\n\n(Alternatively, use \neeprom console=ttya\n).\n\n\n\n\n\n\nTo change the boot-loader's default timeout, run:\n\n\n# echo autoboot_delay=2 \n /boot/conf.d/autoboot\n\n\n\n\n\n\n\nNOTE:\nAny filename can be used under \n/boot/conf.d/\n - the filename does not\nmatter (only its content matters).\n\n\nSee \ncurrent status for loader\n\nfor more technical details (and other boot options).",
            "title": "Common Tasks"
        },
        {
            "location": "/handbook/common-tasks/#hipster-handbook-common-tasks",
            "text": "NOTE:   This is a  DRAFT  document which may contain errors!  Help us improve and expand this site.  Please see the  Contrib  section for more details about joining the OpenIndiana Documentation Team.    place holder for introduction content",
            "title": "Hipster Handbook - Common Tasks"
        },
        {
            "location": "/handbook/common-tasks/#basic-unix-commands",
            "text": "In addition to native command line system administration tools, OpenIndiana also includes the GNU core utilities suite.\nWhen working with basic UNIX commands, most likely you will be using the GNU core utilities.\nFor learning to navigate the OpenIndiana command line environment, Linux command line books are very helpful.  One of the best books currently available is  The Linux Command Line  by William Shotts.\nIf you want to quickly become a command line guru, this is the book to read.\nBest of all, it was released under a Creative Commons license and can be downloaded for free.\nPrint versions are also available.",
            "title": "Basic UNIX commands"
        },
        {
            "location": "/handbook/common-tasks/#basic-system-administration",
            "text": "",
            "title": "Basic system administration"
        },
        {
            "location": "/handbook/common-tasks/#commands-to-be-able-to-use-administration-commands",
            "text": "Command  Further details  Brief summary      su  su(1M)  Switch user. Without any parameters, root implied    sudo  sudo(1M)  Perform the command following with root privilages    pfexec  pfexec(1)  Similar to  sudo  but not prompted for a password and limited privilages     Examples:",
            "title": "Commands to be able to use administration commands"
        },
        {
            "location": "/handbook/common-tasks/#basic-system-information",
            "text": "Command  Further details  Brief summary      prstat  prstat(1M)  Statistics on system processes    df  df(1M)  Disk usage by partition    du  du(1)  Disk usage by file    pkg list  pkg(1)  List software packages installed on the system     Examples:",
            "title": "Basic system information"
        },
        {
            "location": "/handbook/common-tasks/#system-shutdown-reboot",
            "text": "Command  Further details  Brief summary      shutdown  shutdown(1M)  Shutdown the system     Examples:  shutdown -i5 -g0 -y # Turn off the machine immediately\nshutdown -i6 -g0 -y # Reboot the machine immediately\nshutdown -i6 -g120 -y # Reboot the machine in 2 minutes (120 seconds)",
            "title": "System shutdown, reboot\u2026"
        },
        {
            "location": "/handbook/common-tasks/#user-management",
            "text": "Command  Further details  Brief summary      listusers  listusers(1)  List users accounts    who  who(1)  List users logged onto the system    useradd  useradd(1M)  Create a new user    usermod  usermod(1M)  Modify a user (group memberships, roles, login shell\u2026)",
            "title": "User management"
        },
        {
            "location": "/handbook/common-tasks/#desktop-applications",
            "text": "place holder",
            "title": "Desktop applications"
        },
        {
            "location": "/handbook/common-tasks/#how-can-the-desktop-be-modified",
            "text": "DOC TEAM NOTE:  \nITEMS TO WRITE ABOUT:   Gnome or (MATE) walkthrough  Appearance applet  Enabling Compiz  Configuring font anti-aliasing  Desktop backgrounds     In regards to the default terminal emulator, see:  https://www.illumos.org/issues/7525   we introduce mediator x-terminal-emulator for link /usr/bin/x-terminal-emulator with possible implementations gnome-terminal, mate-terminal and xterm;  mate-terminal implementation has the highest priority (if it is installed, by default it wins);  glib is modified to use link /usr/bin/x-terminal-emulator if it's found for running applications with Terminal=true.",
            "title": "How can the desktop be modified?"
        },
        {
            "location": "/handbook/common-tasks/#multimedia-audio",
            "text": "Place Holder for future content",
            "title": "Multimedia - Audio"
        },
        {
            "location": "/handbook/common-tasks/#multimedia-video",
            "text": "DOC TEAM NOTE:  \nITEMS TO WRITE ABOUT:   How to get OI to play a DVD  How to get flash player installed and working.  How to get VLC installed and working.  Totem (video player)",
            "title": "Multimedia - Video"
        },
        {
            "location": "/handbook/common-tasks/#using-openindiana-as-a-media-server-htpc-etc",
            "text": "DOC TEAM NOTE:  \nITEMS TO WRITE ABOUT:   http://forum.kodi.tv/showthread.php?tid=44315 page=2  http://lightsandshapes.com/plex-on-smartos.html",
            "title": "Using OpenIndiana as a media server, HTPC, etc."
        },
        {
            "location": "/handbook/common-tasks/#printing",
            "text": "DOC TEAM NOTE:  \nITEMS TO WRITE ABOUT:   OI uses CUPS as the primary print system.  GNOME print manager ( system-config-printer )   See the additional information about printing in contrib/topics.md\nAlso see the deprecation comments in the OSOL printing guide.",
            "title": "Printing"
        },
        {
            "location": "/handbook/common-tasks/#graphics-workstation",
            "text": "DOC TEAM NOTE:  \nITEMS TO WRITE ABOUT:   GIMP",
            "title": "Graphics workstation"
        },
        {
            "location": "/handbook/common-tasks/#desktop-publishing-system-etc",
            "text": "Place holder for content",
            "title": "Desktop Publishing system, Etc."
        },
        {
            "location": "/handbook/common-tasks/#boot-loader-settings",
            "text": "OpenIndiana Hipster uses the 'BootForth' boot loader (GRUB is not used any\nmore, disregard older manusls/wiki pages that mention grub).  Boot configuration items should be stored in  /boot/conf.d .    To change the console from the standard monitor to serial console\n    (e.g.  COM1  /  ttyS0  on other OSes), use the following command:  # echo console=ttya   /boot/conf.d/console  (Alternatively, use  eeprom console=ttya ).    To change the boot-loader's default timeout, run:  # echo autoboot_delay=2   /boot/conf.d/autoboot    NOTE:\nAny filename can be used under  /boot/conf.d/  - the filename does not\nmatter (only its content matters).  See  current status for loader \nfor more technical details (and other boot options).",
            "title": "Boot loader settings"
        },
        {
            "location": "/handbook/systems-administration/",
            "text": "Hipster Handbook - System Administration\n\n\nOnce OpenIndiana has been installed, the system will require monitoring to\nensure smooth operation. Software will periodically have to be updated,\nredundant software removed, new users added to the system, etc. All these\nactivities and many more are referred to as system administration.\n\n\nBasic system administration can be reduced to a number of common tasks:\n\n\n\n\nManagement of system resources\n\n\nInstallation and maintenance of software\n\n\nUser administration\n\n\n\n\nWhile it is certainly possible to add more to this list or select alternative\nitems, this small selection is readily absorbed and is convenient to illustrate\na number of essential concepts central to OpenIndiana system administration.\n\n\nBefore we discuss these topics, it is first important to introduce how these\ntasks can be carried out.\n\n\nPerforming System Administration Tasks\n\n\nOpenIndiana is a multi-user platform. The role of administering the system was\ntraditionally assigned to one privileged user known as the \nsuperuser\n or \nroot\n\nuser. This user is assigned \nall\n privileges.\n\n\nTo become root, it is possible to switch user using the command: \nsu(1M)\n.\n\n\nHowever, it is not always feasible for one user to perform all administrative\ntasks. It would be more flexible if some tasks could be performed by some, say,\nexperienced users. To enable some users to carry out a command with \nall\n root\nprivileges, or to \ndo\n an administrative command sudo(1m) can be used.\n\n\nHowever, security concerns dictate that performing sensitive administration\ntasks would be more secure if carried out by a user with a minimum number of\nprivileges. Both aforementioned mechanisms provide \nall\n privileges.\n\n\nIt is not always prudent to perform system administration duties with all\nprivileges.\n\n\nHence, a mechanism was developed whereby users could be assigned a select number\nof privileges by the superuser. OpenIndia provides, in addition to these\ntraditional  mechanisms, a richer means to perform these duties known as\nRole-Based Access Control.\n\n\nRBAC involves collecting a select number of privileges and bundling these\ntogether as a role. A user can then be assigned one, or several roles.\n\n\nroot: \nsu(1M)\n\n\nThis is historically the privileged, super user that can perform all\nadministrative tasks.\n\n\nUse the \nsu\n command to login as root:\n\n\nsu\nPassword:\n\n\n\n\nSUperuser DO: sudo(1m)\n\n\nThe \nsudo\n command, i.e., superuser do, permits a user to use \nall\n supperuser\ncommands without having to become the superuser. A sudo enabled user, simply\nprecedes a command with \nsudo\n.\n\n\nTo enable a user the ability to use \nsudo\n, the superuser edits \n/etc/sudoers\n.\nThis should ideally be done as follows:\n\n\nvisudo\n\n\n\n\nThis performs various syntax checks.\nsudoers(1) provides details on the precise\nmeans to appropriately add a user to use sudo.\n\n\nExample:\n\n\nTo shutdown the system, root privileges are required. If a standard user issues\nthe \nshutdown\n command, the system will issue a warning. However, if the user has\nbeen enabled to use sudo, then the user can now shutdown the system:\n\n\nsudo shutdown -i5 -g0 -y\n\n\n\n\nThe user is then prompted for the user's password and a file is checked to\nestablish whether the user is permitted to perform the operation.\nThe options are explained below.\n\n\nRole-Based Access Control (RBAC)\n\n\nThe \nall-or-nothing\n power assigned to the root user has its obvious\nlimitations.  While sudo is an improvement by limiting root privileges for only\na single command, a user allowed to use sudo has access to all root commands.\n\n\nAn improvement on the above systems would be one in which privileges could be\nassigned on a more fine-grained and selective basis.\n\n\nImagine a user assigned the task of administrating some particular hardware, for\nexample, printers attached to the system.  A more desirable system would be one\nin which this user had the ability to permit users to use a printing device,\nremove print jobs from the print spool, add new printers to the system, ...\nMoreover, it would be advantageous if it were possible to assign privileges to\nperform only these actions and none other.\n\n\nRBAC was developed to accomplish this.\n\n\nWhat is RBAC\n\n\nHow to use RBAC\n\n\nThe root user or a user with sudo enabled can shutdown the system.\nWe can use RBAC to enable a user to be able to shutdown the system. However, we\ncan create a role that allows only the privilege to shutdown the system, and\nno additional privileges. We can then assign this role to one or several users.\n\n\n\n\nassign a privilege to a role to shutdown the system\n\n\n\n\nroleadd shutdown\n\n\n\n\n\n\nAssign a password\n\n\n\n\npasswd shutdown\n\n\n\n\n\n\nAssign this role to a user\n\n\n\n\nusermod -R shutdown whoever\n\n\n\n\n\n\nCreate a SHUTDOWN profile\n\n\n\n\necho \nSHUTDOWN:::profile to shutdown:help=shutdown.html\n \n /etc/security/prof_attr\n\n\n\n\n\n\nOkay, now assign the role profile SHUTDOWN to the role shutdown\n\n\n\n\nrolemod -P SHUTDOWN shutdown\n\n\n\n\n\n\nAssign some administrative command to profile\n\n\n\n\necho \nSHUTDOWN:suser:cmd:::/usr/sbin/shutdown:uid=0\n \n /etc/security/exec_attr\n\n\n\n\n\n\nUse it\n\n\n\n\nsu shutdown\nshutdown -i5 -g0 -y\n\n\n\n\nNow user whoever can shutdown the system.\n\n\nThe \npfexec\n command is more flexibly in the number of privileges that can be\nassigned to a user.\n\n\nIt also worth mentioning an additional method of assigning privileges to users:\nroles. The idea behind roles is a sophisticated and powerful mechanism. It was\noriginally developed with security in mind.\n\n\nThe superuser can define roles, assign various privileges to these roles and\nthen assign a set of roles to a user. In other words, it allows a much more\nfine grained means of assigning privileges to users as opposed to the 'all or\nnothing' method of sudo.\n\n\nConvention\n\n\nInstead of elaborating each administrative command with one of the above means\nof acquiring administrative privileges, it has become standard procedure to prefix\nthe command with a dollar character.\n\n\nExample:\n\n\n$ shutdown -i5 -g0 -y\n\n\n\n\nManagement of System Resources\n\n\nBasic system information\n\n\nSystem processes\n\n\nprstat\n\n\n\n\nThis command provides a host of information on all processes running on the system.\nSome of the information provided is as follows:\n\n\n\n\npercentage of CPU used by each process\n\n\namount of memory consumed by each process\n\n\nunique id of each process (which can, for example, be used to stop the process)\n\n\n\n\nDisk usage\n\n\ndf -h\n\n\n\n\nProvides information on disk size, amount of space used and available free space\nfor all attached storage devices. The \n-h\n option reports this information in\nhuman readable format.\n\n\nLargest files in a directory\n\n\nGo to the directory using the \ncd\n command and issue the following command:\n\n\ndu | sort -n\n\n\n\n\nThis will list the size of each file in the current directory and all\nsub-directories, starting with the smallest up to the largest files.\n\n\nWho is logged on to the system\n\n\nlistusers\n\n\n\n\nList all software packages installed on the system\n\n\npkg list\n\n\n\n\nSystem shutdown, reboot, ...\n\n\nOpenIndiana defines a number of different system states known as run-levels. You\ncan change from one system state to another by using the \nshutdown\n command and\nspecify the run-level using the \ni\n option. You can always determine the\nrun-level via \nwho -r\n.\n\n\nYou must be root or have root privileges (e.g., using \nsudo\n) to send the system\ninto a different state, i.e., turn off, reboot, etc. Shutdown and turn off all\nhardware (if supported by the hardware) now:\n\n\nshutdown -i5 -g0 -y\n\n\n\n\nChanging the run-level of the system can be disruptive to other users currently\nusing the system. Thus, it is always wise to establish who is currently logged\nonto the system before changing the run-level.\n\n\n\n\n-i [run-level]\n is used to specify the run-level. This is either a digit or a\n  single letter. Here are some run-levels available:\n\n\n5\n stop all system services, and turns off hardware devices, etc.\n\n\n6\n reboot the system.\n\n\n1\n single-user mode. Primarily used for system maintenance.\n\n\nS\n single-user mode where only a command line terminal is available.\n\n\n\n\n\n\n-g [seconds]\n is used to specify the number of seconds after which to commence\n   shutting down services. \n0\n immediately intiates shutting down all services.\n\n\n-y\n automatically answers all system questions with 'yes'. The shutdown\n   process is not interrupted by system prompts requiring user-interactive\n   intervention.\n\n\n\n\nConfiguring and Tuning\n\n\n place holder \n\n\nConfiguring a UPS\n\n\n\n\nNUT?\n\n\n\n\nFault management (FMA)\n\n\n place holder \n\n\nService management (SMF)\n\n\n \nDOC TEAM NOTE:\n\n\n\nITEMS TO WRITE ABOUT: provide more detailed explanations.\n\n\n\nList services:\n\n\nsvcs # list (permanently) enabled services\nsvcs -a # list all services\nsvcs -vx # list faulty services\n\n\n\n\nGet information about a service:\n\n\nsvcs \nservice name\n # one-line status\nsvcs -x \nservice name\n # important information\nsvcs -d \nservice name\n # check the service's dependencies\nsvcs -l \nservice name\n # all the available information\n\n\n\n\nStart a service:\n\n\nsvcadm enable \nservice name\n # permanently enable/start\nsvcadm enable -t \nservice name\n # temporary start (won't survive a reboot)\nsvcadm enable -r \nservice name\n # permanently enable/start service along with its dependencies\n\n\n\n\nRestart / reload a service:\n\n\nsvcadm refresh \nservice name\n # reload the service's configuration\nsvcadm restart \nservice name\n # restart the service\n\n\n\n\nSystems logging and monitoring\n\n\n \nDOC TEAM NOTE:\n\n\n\nITEMS TO WRITE ABOUT:\n\n\n\n\nWhere to find the logs (\n/var/log\n, \n/var/svc/log\n).\n\n\n\n\n\nIllumos boot process\n\n\n place holder \n\n\nSecurity\n\n\n place holder \n\n\nRole based access control (RBAC)\n\n\n place holder \n\n\nZones\n\n\n \nDOC TEAM NOTE:\n\n\n\nITEMS TO WRITE ABOUT:\n\n\n\n\nNeed to mention some of the changes to zone management...e.g..\n\n\nsys-unconfig gone.\n\n\nsysding replaced syscfg\n\n\nnow have to have DNS, root password, etc. all configured inside the zone before being able to logon using \nzlogin -C \nzonename\n, otherwise have to do \nzlogin \nzonename\n.\n\n\n\n\n\n\n\n\nSo a fair amount of stuff has changed there.\n\n\n\n\n\nZones are an OpenIndiana feature that provides \noperating system-level virtualization\n. Each zone is managed as a completely separate OpenIndiana machine. Zones have very low overhead and are one of the most efficient forms of OS virtualization.\n\n\nThe global zone (GZ) is the operating system itself, which has hardware access. From the global zone, non-global zones (NGZ) are created and booted. Boot time for non-global zones is very fast, often a few seconds. The CPU, network, and memory resources for each zone can be controlled from the global zone, ensuring fair access to system resources. Disk space access is usually controlled by ZFS (with quotas and reservations if needed), as well as mounting of filesystem resources with NFS or lofs. As with other forms of virtualization, each zone is isolated from the other zones \u2013 zones cannot see processes or resources used in other zones. The low marginal cost of a zone allows large systems have tens or even hundreds of zones without significant overhead. The theoretical limit to the number of zones on a single platform is 8,192.\n\n\nDifferent releases of (Open)Solaris used different packaging distribution method for the global zone. OpenIndiana zones use two basic brands - \"ipkg\" and \"nlipkg\", which are based on IPS Packaging. The brand determines how zone is initialized and how zone's processes are treated by kernel. Both type of zones represent a PKG image. \"ipkg\"-branded zones are tightly coupled with GZ.Image pakaging system (IPS) knows about ipkg-branded zones and can perform several actions simultaneously in GZ and NGZ. For example, you can update all your zones and GZ with a single \"pkg update -r\" command. IPS can ensure some depenencies between packages in GZ and NGZ. To allow this it cheks that NGZ's publishers are a superset of GZ's publishers and their properties are the same (for example, stickiness or repository location). As this is not always suitable for development zones, \"nlipkg\"-branded zones were introduced. \"nlipkg\"-branded zone behave like completely independent instance and IPS ignores them during operations in GZ.\n\n\nAn easy way to implement zones is to use a separate ZFS file system as the zone root's backing store. File systems are easy to create in ZFS and zones can take advantage of the ZFS snapshot and clone features. Due to the strong isolation between zones, sharing a file system must be done with traditional file sharing methods (eg NFS).\n\n\nWhen each zone is created  it comes with a minimal set of packages, and from there you can add and use most packages and applications as required.\n\n\nQuick Setup Example\n\n\nZone creation consists of two steps - creating zone configuration and zone installation or cloning. Zone configuration determines basic parameters, such as zone's root location and provided resources.\nZone configuration is performed using zonecfg tool, zone administration (for example, installation) is performed using zoneadm tool.\n\n\nFor example, we create a simple zone:\n\n\n# zonecfg -z example\nexample: No such zone configured\nUse 'create' to begin configuring a new zone.\nzonecfg:example\n create\nzonecfg:example\n add net\nzonecfg:example:net\n set physical=e1000g0\nzonecfg:example:net\n set address=192.168.0.10/24\nzonecfg:example:net\n end\nzonecfg:example\n set zonepath=/zones/example\nzonecfg:example\n verify\nzonecfg:example\n commit\nzonecfg:example\n exit\n\n\n\n\n\nHere \ncreate\n puts you inside the zone configuration program where you can change and update settings particular to the zone specified with -z.\n\nzonecfg\n break different resource groups of data, you add a new resource with add.\nThe next block adds ressource \"net\", configuring network in default \nshared\n ip-type mode. It allows zone to share IP stack with GZ. If you want to\nget dedicated nic in NGZ, you have to use \nset ip-type=exclusive\n. In exclusive mode zone has complete control over network interface and you\ncan't assigned address in zonecfg prompt.\nAfter network configuration \nzonepath\n is set. It's a location for zone's root file system, which should be a ZFS filesystem.\nThe \nverify\n command checks that no mistakes were made.\nFinally changes are committed (saved to zone configuration file).\n\n\nAfter configuring a zone you can install it with \nzoneadm install\n subcommand:\n\n\n# zoneadm -z example install\n\n\n\n\nDuring installation pkg image rooted at $zonepath/root is created and minimal set of packages is installed to the image.\nWhen installation finishes, zone can be booted with \nzoneadm -z example boot\n command. If you want your zone to boot automatically during system startup,\nyou should set autoboot parameter to true during zone configuration:\n\n\nzonecfg:example\n set autoboot=true\n\n\n\n\nOnce zone is booted you can log in locally with \nzlogin example\n, or you can ssh in via the IP address you provided to zone config.\n\n\n\nNote, that on first zone boot sysding(1M) will set root's password to NP. Before this happened you will not be able to login to zone with zlogin, so this command will not work on early startup stage.\n\n\n\n\nSystem repository configuration\n\n\nIn latest OpenIndiana versions (starting from November 2017) it's possible to configure so-called zone proxy daemon. This configuration is intended to use GZ proxy service for NGZs to access configured publishers\nand can be useful for sharing pkg cache between zones or to provide network access for performing updates to otherwise restricted zone environment (i.e. to zone without Internet access).\n\n\nThe functionality is provided by series of services in GZ and NGZs. In GZ two services are running: system repository service and zones proxy daemon (see \npkg.sysrepo(1M)\n). In NGZ zones proxy client\ncommunicates with GZ's zone proxy daemon.\nSystem repository service \nsvc:/application/pkg/system-repository\n  is responsible for providing access to the package repositories configured in a reference image through a centralized proxy.\nZones proxy daemon service \nsvc:/application/pkg/zones-proxyd\n starts on system boot and registers door in each running ipkg-branded zone (the door is created at \n/var/tmp/zoneproxy_door\n path).\nLater, on zone startup or shutdown /usr/lib/zones/zoneproxy-adm is used to notify zones-proxyd, so that it could create the door for the zone or to cleanup it.\nZones proxy daemon client \nsvc:/application/pkg/zones-proxy-client:default\n runs in NGZ and talks to GZ's zones-proxyd via created door.\n\n\nNote, you can't use system repository with nlipkg-branded zones.\n\n\n\nIPS determines if it should use zones proxy client in zone based on image's \nuse-system-repo\n property (defaults to False).\n\n\nTo configure your system to use system repository, perform the following actions.\n\n\n1) In global zone:\n\n\n# pkg install pkg:/package/pkg/system-repository pkg:/package/pkg/zones-proxy\n# svcadm enable svc:/application/pkg/system-repository:default\n# svcadm enable svc:/application/pkg/zones-proxyd:default\n\n\n\n\n2) In non-global zone:\n\n\n# pkg install pkg:/package/pkg/zones-proxy\n# svcadm enable svc:/application/pkg/zones-proxy-client:default\n# pkg set-property use-system-repo True\n\n\n\n\nAfter this in NGZ's publisher description you'll see system-repository location:\n\n\n# pkg publisher\nPUBLISHER                   TYPE     STATUS P LOCATION\nopenindiana.org (non-sticky, syspub) origin   online T \nsystem-repository\n\nhipster-encumbered (syspub)     origin   online T \nsystem-repository\n\n\n\n\n\nYou can check if your configuration works by issuing \npkg refresh\n command in the zone. \npkg(1M)\n should contact repository indirectly via zones-proxy-client.\n\n\nTo revert your zone to proxy-less configuration, run\n\n\n# pkg set-property use-system-repo False\n\n\n\n\nStorage\n\n\n place holder \n\n\nMounting file systems\n\n\n \nDOC TEAM NOTE:\n\n\n\nITEMS TO WRITE ABOUT:\n\n\n\n\nNeed a walkthrough of mounting options for other filesystems...NTFS, FAT, UFS, etc.\n\n\n\n\n\n\n\nNTFS support - 3rd party\n\n\n\n\nhttp://jp-andre.pagesperso-orange.fr/openindiana-ntfs-3g.html\n\n\n\n\nConfiguring OpenIndiana as an ISCSI Target Server - (COMSTAR)\n\n\n Place holder for content \n\n\nSystem backups\n\n\nOpenIndiana offers several backup solutions.\nHere are just a few of them:\n\n\n\n\nBorg Backup\n\n\nBacula\n\n\nTime-Slider\n\n\nrdiff-backup\n\n\nRsync\n\n\nZetaback\n\n\nZFS exports\n\n\ncpio\n\n\ntar, zip, etc.\n\n\n\n\nZFS\n\n\n \nDOC TEAM NOTE:\n\n\n\nITEMS TO WRITE ABOUT:\n\n\nGotcha's such as the following:\n\n\ne^ipi\n don't suppose there's any solution to this:\n\ne^ipi\n cannot replace 1509280528045021472 with /dev/dsk/c0t5000C5009204EB9Bd0s0: devices have different sector alignment\n\ntsoome\n thats 512 versus non-512 sector issue\n\ntsoome\n you need to build new pool based on larger sector\n\ntsoome\n if its mirror, you can attach 512B disk to 4k pool, but not vice versa...\n\ne^ipi\n well, damn.\n\ntsoome\n that error message is too confusing, should be replaced by more clear one;)\n\ne^ipi\n I swear this pool is already mix \n match, freebsd complained about it\n\ne^ipi\n (but still used it)\n\ntsoome\n there is that thing that ashift is vdev property;)\n\ntsoome\n not pool property (one reason why that linux zpool create ashift= option is bad)\n\ntsoome\n or sort of bad anyhow\n\n\n\n\n\n\n\nImporting ZFS disks\n\n\n \nDOC TEAM NOTE:\n\n\n\nITEMS TO WRITE ABOUT:\n\n\n\n\nTalk about the ZFS import command.\n\n\n\n\n\n\n\nHow does one mirror their root zpool?\n\n\n \nDOC TEAM NOTE:\n\n\n\nITEMS TO WRITE ABOUT:\n\n\n\n\nAdding a 2nd disk to the root pool\n\n\n\n\n\n\n\nHow does one create additional zpools?\n\n\n \nDOC TEAM NOTE:\n\n\n\nITEMS TO WRITE ABOUT:\n\n\n\n\nzpool create command\n\n\nMirrors\n\n\nRaidz\n\n\n\n\n\n\n\n\n\n\n\nModifying zpool settings and attributes\n\n\n \nDOC TEAM NOTE:\n\n\n\nITEMS TO WRITE ABOUT:\n\n\n\n\nzpool get/set commands\n\n\n\n\n\n\n\nModifying zfs file system settings and attributes\n\n\n \nDOC TEAM NOTE:\n\n\n\nITEMS TO WRITE ABOUT:\n\n\n\n\nzfs get/set commands\n\n\n\n\n\n\n\nHow does one create additional zfs datasets?\n\n\n \nDOC TEAM NOTE:\n\n\n\nITEMS TO WRITE ABOUT:\n\n\n\n\nzfs create command\n\n\n\n\n\n\n\nConfiguring system swap\n\n\n \nDOC TEAM NOTE:\n\n\n\nITEMS TO WRITE ABOUT:\n\n\n\n\nzfs set command\n\n\nswap -l\n\n\n\n\n\n\n\nVirtualization\n\n\n Place holder \n\n\nOpenIndiana as a virtualization host server\n\n\n \nDOC TEAM NOTE:\n\n\n\nITEMS TO WRITE ABOUT:\n\n\n\n\nQemu-KVM (KVM) walkthrough\n\n\nillumos KVM port does not support AMD processors.\n\n\nIntel processors require EPT support.\n\n\n\n\n\n\nVirtualbox walkthrough\n\n\nThere is no package for this yet, but folks do have it working, see the wiki for details.\n\n\n\n\n\n\n\n\n\n\n\n \nDOC TEAM NOTE:\n\n\n\nITEMS TO WRITE ABOUT:\n\n\nIn a nutshell, most modern Intel processors such as i3, i5, i7, and Xeon provide EPT support.\nMost older processors such as Core2duo and Core2Quad lack EPT support, and a few of them lack virtualization support at all.\nYou can check your processor for EPT support via the following link: \nhttp://ark.intel.com/Products/VirtualizationTechnology\n\n\n\n\nLocalization\n\n\n \nDOC TEAM NOTE:\n\n\n\nITEMS TO WRITE ABOUT:\n\n\nPossible resources to help write this section:\n\n\n\n\nhttps://wiki.openindiana.org/oi/4.4+Localization\n\n\nhttps://docs.oracle.com/cd/E23824_01/html/E26033/glmen.html\n\n\n\n\n\n\n\nDtrace\n\n\n Place Holder \n\n\nConfiguring Networking\n\n\n Place Holder \n\n\nManual Configuration (static IP)\n\n\n:~$ sudo svcadm disable physical:nwam\n\n\n\n\nDefine your IP/hostname in \n/etc/hosts\n. For example:\n\n\n192.168.1.22 hostname hostname.local localhost loghost\n# Subsittude 192.168.1.22 for YOUR IP\n\n\n\n\nEnable the default physical service with \nsvcadm\n and configure the \ninterface\n:\n\n\n:~$ sudo svcadm enable physical:default\n\n\n\n\nConfigure interface with ipadm:\n\n\n:~$ sudo ipadm create-addr -T static -a local=192.168.1.22/24 bge0/v4static\n\n\n\n\nIf you do not know what the interface name is (bge0 in this case); then type in\n\n\n:~$ dladm show-link\n\n\n\n\nor:\n\n\n:~$ kstat -c net | grep net\n\n# look for hme0, bge0, e1000g0 or soemthing that resembles the driver in use.\n\n\n\n\nAdd gateway\n\n\n:~$ sudo route -p add default 192.168.1.121\n\n\n\n\nor\n\n\n:~$ sudo nano /etc/defaultrouter\n\n# Enter in your gateways IP\n\n\n\n\nSet DNS server(s)\n\n\n:~$ sudo nano /etc/resolv.conf\n# Enter in the DNS server IP(s)\nnameserver 192.168.1.121\n\n\n\n\nor\n\n\n\n:~$ sudo sh -c 'echo \nnameserver 192.168.1.121\n \n /etc/resolv.conf'\n\n\n\n\n\nRestart\n\n\n:~$ sudo reboot\n\n\n\n\n \nNOTE:\n\n\n\nIF you cannot ping an external IP (e.g. google.com) run this command and try again.\n\n\n\n:~$ sudo cp /etc/nsswitch.dns /etc/nsswitch.conf\n\n\n\n\ncredit for this section of docs go to \n/u/127b\n\n\nAutomatic Configuration (NWAM)\n\n\n\n\nHow to use NWAM (network auto magic)\n\n\n\n\nNetwork automagic online help\n\n\nComprehensive and fully illustrated online help for using NWAM is available by right clicking the NWAM tray icon and selecting \nHelp\n.\nThis opens the online help browser.\n\n\nTroubleshooting NWAM\n\n\nIf NWAM is already configured and fails to connect to a wireless network try restarting the service.\n\n\nFor example:\n\n\nsvcadm restart nwam\n\n\n\n\nSometimes the location gets set to \nNoNet\n and it's nessessary to manually change the location.\n\n\nWhen the location setting is configured to \nSwitch Locations Automatically\n, it's not possible to change the location.\nThis is resolved by reconfiguring the location to allow manual switching.\nTo perform this task, do the following:\n\n\nRight click the NWAM tray icon and select \nLocation\n \n \nSwitch Locations Manually\n.\nRight click the NWAM tray icon and select \nLocation\n \n \nAutomatic\n.\n\n\nDesktop GUI\n\n\n Place Holder \n\n\nManual Configuration\n\n\n Place Holder \n\n\nAutomatic Configuration\n\n\n Place Holder \n\n\nTroubleshooting\n\n\n\n\nMake sure the network auto magic 'Location' setting is configured as 'Automatic' and not 'NoNet'\n\n\n\n\nClustering with Open HA Cluster\n\n\n \nDOC TEAM NOTE:\n\n\n\nITEMS TO WRITE ABOUT:\n\n\nSee old sun docs\n\n\n\n\nhttp://docs.oracle.com/cd/E19735-01/\n\n\n\n\nAlso see:\n\n\n\n\nhttp://zfs-create.blogspot.nl/",
            "title": "Systems Administration"
        },
        {
            "location": "/handbook/systems-administration/#hipster-handbook-system-administration",
            "text": "Once OpenIndiana has been installed, the system will require monitoring to\nensure smooth operation. Software will periodically have to be updated,\nredundant software removed, new users added to the system, etc. All these\nactivities and many more are referred to as system administration.  Basic system administration can be reduced to a number of common tasks:   Management of system resources  Installation and maintenance of software  User administration   While it is certainly possible to add more to this list or select alternative\nitems, this small selection is readily absorbed and is convenient to illustrate\na number of essential concepts central to OpenIndiana system administration.  Before we discuss these topics, it is first important to introduce how these\ntasks can be carried out.",
            "title": "Hipster Handbook - System Administration"
        },
        {
            "location": "/handbook/systems-administration/#performing-system-administration-tasks",
            "text": "OpenIndiana is a multi-user platform. The role of administering the system was\ntraditionally assigned to one privileged user known as the  superuser  or  root \nuser. This user is assigned  all  privileges.  To become root, it is possible to switch user using the command:  su(1M) .  However, it is not always feasible for one user to perform all administrative\ntasks. It would be more flexible if some tasks could be performed by some, say,\nexperienced users. To enable some users to carry out a command with  all  root\nprivileges, or to  do  an administrative command sudo(1m) can be used.  However, security concerns dictate that performing sensitive administration\ntasks would be more secure if carried out by a user with a minimum number of\nprivileges. Both aforementioned mechanisms provide  all  privileges.  It is not always prudent to perform system administration duties with all\nprivileges.  Hence, a mechanism was developed whereby users could be assigned a select number\nof privileges by the superuser. OpenIndia provides, in addition to these\ntraditional  mechanisms, a richer means to perform these duties known as\nRole-Based Access Control.  RBAC involves collecting a select number of privileges and bundling these\ntogether as a role. A user can then be assigned one, or several roles.",
            "title": "Performing System Administration Tasks"
        },
        {
            "location": "/handbook/systems-administration/#root-su1m",
            "text": "This is historically the privileged, super user that can perform all\nadministrative tasks.  Use the  su  command to login as root:  su\nPassword:",
            "title": "root: su(1M)"
        },
        {
            "location": "/handbook/systems-administration/#superuser-do-sudo1m",
            "text": "The  sudo  command, i.e., superuser do, permits a user to use  all  supperuser\ncommands without having to become the superuser. A sudo enabled user, simply\nprecedes a command with  sudo .  To enable a user the ability to use  sudo , the superuser edits  /etc/sudoers .\nThis should ideally be done as follows:  visudo  This performs various syntax checks.\nsudoers(1) provides details on the precise\nmeans to appropriately add a user to use sudo.  Example:  To shutdown the system, root privileges are required. If a standard user issues\nthe  shutdown  command, the system will issue a warning. However, if the user has\nbeen enabled to use sudo, then the user can now shutdown the system:  sudo shutdown -i5 -g0 -y  The user is then prompted for the user's password and a file is checked to\nestablish whether the user is permitted to perform the operation.\nThe options are explained below.",
            "title": "SUperuser DO: sudo(1m)"
        },
        {
            "location": "/handbook/systems-administration/#role-based-access-control-rbac",
            "text": "The  all-or-nothing  power assigned to the root user has its obvious\nlimitations.  While sudo is an improvement by limiting root privileges for only\na single command, a user allowed to use sudo has access to all root commands.  An improvement on the above systems would be one in which privileges could be\nassigned on a more fine-grained and selective basis.  Imagine a user assigned the task of administrating some particular hardware, for\nexample, printers attached to the system.  A more desirable system would be one\nin which this user had the ability to permit users to use a printing device,\nremove print jobs from the print spool, add new printers to the system, ...\nMoreover, it would be advantageous if it were possible to assign privileges to\nperform only these actions and none other.  RBAC was developed to accomplish this.",
            "title": "Role-Based Access Control (RBAC)"
        },
        {
            "location": "/handbook/systems-administration/#what-is-rbac",
            "text": "",
            "title": "What is RBAC"
        },
        {
            "location": "/handbook/systems-administration/#how-to-use-rbac",
            "text": "The root user or a user with sudo enabled can shutdown the system.\nWe can use RBAC to enable a user to be able to shutdown the system. However, we\ncan create a role that allows only the privilege to shutdown the system, and\nno additional privileges. We can then assign this role to one or several users.   assign a privilege to a role to shutdown the system   roleadd shutdown   Assign a password   passwd shutdown   Assign this role to a user   usermod -R shutdown whoever   Create a SHUTDOWN profile   echo  SHUTDOWN:::profile to shutdown:help=shutdown.html    /etc/security/prof_attr   Okay, now assign the role profile SHUTDOWN to the role shutdown   rolemod -P SHUTDOWN shutdown   Assign some administrative command to profile   echo  SHUTDOWN:suser:cmd:::/usr/sbin/shutdown:uid=0    /etc/security/exec_attr   Use it   su shutdown\nshutdown -i5 -g0 -y  Now user whoever can shutdown the system.  The  pfexec  command is more flexibly in the number of privileges that can be\nassigned to a user.  It also worth mentioning an additional method of assigning privileges to users:\nroles. The idea behind roles is a sophisticated and powerful mechanism. It was\noriginally developed with security in mind.  The superuser can define roles, assign various privileges to these roles and\nthen assign a set of roles to a user. In other words, it allows a much more\nfine grained means of assigning privileges to users as opposed to the 'all or\nnothing' method of sudo.",
            "title": "How to use RBAC"
        },
        {
            "location": "/handbook/systems-administration/#convention",
            "text": "Instead of elaborating each administrative command with one of the above means\nof acquiring administrative privileges, it has become standard procedure to prefix\nthe command with a dollar character.  Example:  $ shutdown -i5 -g0 -y",
            "title": "Convention"
        },
        {
            "location": "/handbook/systems-administration/#management-of-system-resources",
            "text": "",
            "title": "Management of System Resources"
        },
        {
            "location": "/handbook/systems-administration/#basic-system-information",
            "text": "",
            "title": "Basic system information"
        },
        {
            "location": "/handbook/systems-administration/#system-processes",
            "text": "prstat  This command provides a host of information on all processes running on the system.\nSome of the information provided is as follows:   percentage of CPU used by each process  amount of memory consumed by each process  unique id of each process (which can, for example, be used to stop the process)",
            "title": "System processes"
        },
        {
            "location": "/handbook/systems-administration/#disk-usage",
            "text": "df -h  Provides information on disk size, amount of space used and available free space\nfor all attached storage devices. The  -h  option reports this information in\nhuman readable format.",
            "title": "Disk usage"
        },
        {
            "location": "/handbook/systems-administration/#largest-files-in-a-directory",
            "text": "Go to the directory using the  cd  command and issue the following command:  du | sort -n  This will list the size of each file in the current directory and all\nsub-directories, starting with the smallest up to the largest files.",
            "title": "Largest files in a directory"
        },
        {
            "location": "/handbook/systems-administration/#who-is-logged-on-to-the-system",
            "text": "listusers",
            "title": "Who is logged on to the system"
        },
        {
            "location": "/handbook/systems-administration/#list-all-software-packages-installed-on-the-system",
            "text": "pkg list",
            "title": "List all software packages installed on the system"
        },
        {
            "location": "/handbook/systems-administration/#system-shutdown-reboot",
            "text": "OpenIndiana defines a number of different system states known as run-levels. You\ncan change from one system state to another by using the  shutdown  command and\nspecify the run-level using the  i  option. You can always determine the\nrun-level via  who -r .  You must be root or have root privileges (e.g., using  sudo ) to send the system\ninto a different state, i.e., turn off, reboot, etc. Shutdown and turn off all\nhardware (if supported by the hardware) now:  shutdown -i5 -g0 -y  Changing the run-level of the system can be disruptive to other users currently\nusing the system. Thus, it is always wise to establish who is currently logged\nonto the system before changing the run-level.   -i [run-level]  is used to specify the run-level. This is either a digit or a\n  single letter. Here are some run-levels available:  5  stop all system services, and turns off hardware devices, etc.  6  reboot the system.  1  single-user mode. Primarily used for system maintenance.  S  single-user mode where only a command line terminal is available.    -g [seconds]  is used to specify the number of seconds after which to commence\n   shutting down services.  0  immediately intiates shutting down all services.  -y  automatically answers all system questions with 'yes'. The shutdown\n   process is not interrupted by system prompts requiring user-interactive\n   intervention.",
            "title": "System shutdown, reboot, ..."
        },
        {
            "location": "/handbook/systems-administration/#configuring-and-tuning",
            "text": "place holder",
            "title": "Configuring and Tuning"
        },
        {
            "location": "/handbook/systems-administration/#configuring-a-ups",
            "text": "NUT?",
            "title": "Configuring a UPS"
        },
        {
            "location": "/handbook/systems-administration/#fault-management-fma",
            "text": "place holder",
            "title": "Fault management (FMA)"
        },
        {
            "location": "/handbook/systems-administration/#service-management-smf",
            "text": "DOC TEAM NOTE:  \nITEMS TO WRITE ABOUT: provide more detailed explanations.  List services:  svcs # list (permanently) enabled services\nsvcs -a # list all services\nsvcs -vx # list faulty services  Get information about a service:  svcs  service name  # one-line status\nsvcs -x  service name  # important information\nsvcs -d  service name  # check the service's dependencies\nsvcs -l  service name  # all the available information  Start a service:  svcadm enable  service name  # permanently enable/start\nsvcadm enable -t  service name  # temporary start (won't survive a reboot)\nsvcadm enable -r  service name  # permanently enable/start service along with its dependencies  Restart / reload a service:  svcadm refresh  service name  # reload the service's configuration\nsvcadm restart  service name  # restart the service",
            "title": "Service management (SMF)"
        },
        {
            "location": "/handbook/systems-administration/#systems-logging-and-monitoring",
            "text": "DOC TEAM NOTE:  \nITEMS TO WRITE ABOUT:   Where to find the logs ( /var/log ,  /var/svc/log ).",
            "title": "Systems logging and monitoring"
        },
        {
            "location": "/handbook/systems-administration/#illumos-boot-process",
            "text": "place holder",
            "title": "Illumos boot process"
        },
        {
            "location": "/handbook/systems-administration/#security",
            "text": "place holder",
            "title": "Security"
        },
        {
            "location": "/handbook/systems-administration/#role-based-access-control-rbac_1",
            "text": "place holder",
            "title": "Role based access control (RBAC)"
        },
        {
            "location": "/handbook/systems-administration/#zones",
            "text": "DOC TEAM NOTE:  \nITEMS TO WRITE ABOUT:   Need to mention some of the changes to zone management...e.g..  sys-unconfig gone.  sysding replaced syscfg  now have to have DNS, root password, etc. all configured inside the zone before being able to logon using  zlogin -C  zonename , otherwise have to do  zlogin  zonename .     So a fair amount of stuff has changed there.   Zones are an OpenIndiana feature that provides  operating system-level virtualization . Each zone is managed as a completely separate OpenIndiana machine. Zones have very low overhead and are one of the most efficient forms of OS virtualization.  The global zone (GZ) is the operating system itself, which has hardware access. From the global zone, non-global zones (NGZ) are created and booted. Boot time for non-global zones is very fast, often a few seconds. The CPU, network, and memory resources for each zone can be controlled from the global zone, ensuring fair access to system resources. Disk space access is usually controlled by ZFS (with quotas and reservations if needed), as well as mounting of filesystem resources with NFS or lofs. As with other forms of virtualization, each zone is isolated from the other zones \u2013 zones cannot see processes or resources used in other zones. The low marginal cost of a zone allows large systems have tens or even hundreds of zones without significant overhead. The theoretical limit to the number of zones on a single platform is 8,192.  Different releases of (Open)Solaris used different packaging distribution method for the global zone. OpenIndiana zones use two basic brands - \"ipkg\" and \"nlipkg\", which are based on IPS Packaging. The brand determines how zone is initialized and how zone's processes are treated by kernel. Both type of zones represent a PKG image. \"ipkg\"-branded zones are tightly coupled with GZ.Image pakaging system (IPS) knows about ipkg-branded zones and can perform several actions simultaneously in GZ and NGZ. For example, you can update all your zones and GZ with a single \"pkg update -r\" command. IPS can ensure some depenencies between packages in GZ and NGZ. To allow this it cheks that NGZ's publishers are a superset of GZ's publishers and their properties are the same (for example, stickiness or repository location). As this is not always suitable for development zones, \"nlipkg\"-branded zones were introduced. \"nlipkg\"-branded zone behave like completely independent instance and IPS ignores them during operations in GZ.  An easy way to implement zones is to use a separate ZFS file system as the zone root's backing store. File systems are easy to create in ZFS and zones can take advantage of the ZFS snapshot and clone features. Due to the strong isolation between zones, sharing a file system must be done with traditional file sharing methods (eg NFS).  When each zone is created  it comes with a minimal set of packages, and from there you can add and use most packages and applications as required.",
            "title": "Zones"
        },
        {
            "location": "/handbook/systems-administration/#quick-setup-example",
            "text": "Zone creation consists of two steps - creating zone configuration and zone installation or cloning. Zone configuration determines basic parameters, such as zone's root location and provided resources.\nZone configuration is performed using zonecfg tool, zone administration (for example, installation) is performed using zoneadm tool.  For example, we create a simple zone:  # zonecfg -z example\nexample: No such zone configured\nUse 'create' to begin configuring a new zone.\nzonecfg:example  create\nzonecfg:example  add net\nzonecfg:example:net  set physical=e1000g0\nzonecfg:example:net  set address=192.168.0.10/24\nzonecfg:example:net  end\nzonecfg:example  set zonepath=/zones/example\nzonecfg:example  verify\nzonecfg:example  commit\nzonecfg:example  exit  Here  create  puts you inside the zone configuration program where you can change and update settings particular to the zone specified with -z. zonecfg  break different resource groups of data, you add a new resource with add.\nThe next block adds ressource \"net\", configuring network in default  shared  ip-type mode. It allows zone to share IP stack with GZ. If you want to\nget dedicated nic in NGZ, you have to use  set ip-type=exclusive . In exclusive mode zone has complete control over network interface and you\ncan't assigned address in zonecfg prompt.\nAfter network configuration  zonepath  is set. It's a location for zone's root file system, which should be a ZFS filesystem.\nThe  verify  command checks that no mistakes were made.\nFinally changes are committed (saved to zone configuration file).  After configuring a zone you can install it with  zoneadm install  subcommand:  # zoneadm -z example install  During installation pkg image rooted at $zonepath/root is created and minimal set of packages is installed to the image.\nWhen installation finishes, zone can be booted with  zoneadm -z example boot  command. If you want your zone to boot automatically during system startup,\nyou should set autoboot parameter to true during zone configuration:  zonecfg:example  set autoboot=true  Once zone is booted you can log in locally with  zlogin example , or you can ssh in via the IP address you provided to zone config.  \nNote, that on first zone boot sysding(1M) will set root's password to NP. Before this happened you will not be able to login to zone with zlogin, so this command will not work on early startup stage.",
            "title": "Quick Setup Example"
        },
        {
            "location": "/handbook/systems-administration/#system-repository-configuration",
            "text": "In latest OpenIndiana versions (starting from November 2017) it's possible to configure so-called zone proxy daemon. This configuration is intended to use GZ proxy service for NGZs to access configured publishers\nand can be useful for sharing pkg cache between zones or to provide network access for performing updates to otherwise restricted zone environment (i.e. to zone without Internet access).  The functionality is provided by series of services in GZ and NGZs. In GZ two services are running: system repository service and zones proxy daemon (see  pkg.sysrepo(1M) ). In NGZ zones proxy client\ncommunicates with GZ's zone proxy daemon.\nSystem repository service  svc:/application/pkg/system-repository   is responsible for providing access to the package repositories configured in a reference image through a centralized proxy.\nZones proxy daemon service  svc:/application/pkg/zones-proxyd  starts on system boot and registers door in each running ipkg-branded zone (the door is created at  /var/tmp/zoneproxy_door  path).\nLater, on zone startup or shutdown /usr/lib/zones/zoneproxy-adm is used to notify zones-proxyd, so that it could create the door for the zone or to cleanup it.\nZones proxy daemon client  svc:/application/pkg/zones-proxy-client:default  runs in NGZ and talks to GZ's zones-proxyd via created door. \nNote, you can't use system repository with nlipkg-branded zones.  IPS determines if it should use zones proxy client in zone based on image's  use-system-repo  property (defaults to False).  To configure your system to use system repository, perform the following actions.  1) In global zone:  # pkg install pkg:/package/pkg/system-repository pkg:/package/pkg/zones-proxy\n# svcadm enable svc:/application/pkg/system-repository:default\n# svcadm enable svc:/application/pkg/zones-proxyd:default  2) In non-global zone:  # pkg install pkg:/package/pkg/zones-proxy\n# svcadm enable svc:/application/pkg/zones-proxy-client:default\n# pkg set-property use-system-repo True  After this in NGZ's publisher description you'll see system-repository location:  # pkg publisher\nPUBLISHER                   TYPE     STATUS P LOCATION\nopenindiana.org (non-sticky, syspub) origin   online T  system-repository \nhipster-encumbered (syspub)     origin   online T  system-repository   You can check if your configuration works by issuing  pkg refresh  command in the zone.  pkg(1M)  should contact repository indirectly via zones-proxy-client.  To revert your zone to proxy-less configuration, run  # pkg set-property use-system-repo False",
            "title": "System repository configuration"
        },
        {
            "location": "/handbook/systems-administration/#storage",
            "text": "place holder",
            "title": "Storage"
        },
        {
            "location": "/handbook/systems-administration/#mounting-file-systems",
            "text": "DOC TEAM NOTE:  \nITEMS TO WRITE ABOUT:   Need a walkthrough of mounting options for other filesystems...NTFS, FAT, UFS, etc.",
            "title": "Mounting file systems"
        },
        {
            "location": "/handbook/systems-administration/#ntfs-support-3rd-party",
            "text": "http://jp-andre.pagesperso-orange.fr/openindiana-ntfs-3g.html",
            "title": "NTFS support - 3rd party"
        },
        {
            "location": "/handbook/systems-administration/#configuring-openindiana-as-an-iscsi-target-server-comstar",
            "text": "Place holder for content",
            "title": "Configuring OpenIndiana as an ISCSI Target Server - (COMSTAR)"
        },
        {
            "location": "/handbook/systems-administration/#system-backups",
            "text": "OpenIndiana offers several backup solutions.\nHere are just a few of them:   Borg Backup  Bacula  Time-Slider  rdiff-backup  Rsync  Zetaback  ZFS exports  cpio  tar, zip, etc.",
            "title": "System backups"
        },
        {
            "location": "/handbook/systems-administration/#zfs",
            "text": "DOC TEAM NOTE:  \nITEMS TO WRITE ABOUT:  Gotcha's such as the following:  e^ipi  don't suppose there's any solution to this: e^ipi  cannot replace 1509280528045021472 with /dev/dsk/c0t5000C5009204EB9Bd0s0: devices have different sector alignment tsoome  thats 512 versus non-512 sector issue tsoome  you need to build new pool based on larger sector tsoome  if its mirror, you can attach 512B disk to 4k pool, but not vice versa... e^ipi  well, damn. tsoome  that error message is too confusing, should be replaced by more clear one;) e^ipi  I swear this pool is already mix   match, freebsd complained about it e^ipi  (but still used it) tsoome  there is that thing that ashift is vdev property;) tsoome  not pool property (one reason why that linux zpool create ashift= option is bad) tsoome  or sort of bad anyhow",
            "title": "ZFS"
        },
        {
            "location": "/handbook/systems-administration/#importing-zfs-disks",
            "text": "DOC TEAM NOTE:  \nITEMS TO WRITE ABOUT:   Talk about the ZFS import command.",
            "title": "Importing ZFS disks"
        },
        {
            "location": "/handbook/systems-administration/#how-does-one-mirror-their-root-zpool",
            "text": "DOC TEAM NOTE:  \nITEMS TO WRITE ABOUT:   Adding a 2nd disk to the root pool",
            "title": "How does one mirror their root zpool?"
        },
        {
            "location": "/handbook/systems-administration/#how-does-one-create-additional-zpools",
            "text": "DOC TEAM NOTE:  \nITEMS TO WRITE ABOUT:   zpool create command  Mirrors  Raidz",
            "title": "How does one create additional zpools?"
        },
        {
            "location": "/handbook/systems-administration/#modifying-zpool-settings-and-attributes",
            "text": "DOC TEAM NOTE:  \nITEMS TO WRITE ABOUT:   zpool get/set commands",
            "title": "Modifying zpool settings and attributes"
        },
        {
            "location": "/handbook/systems-administration/#modifying-zfs-file-system-settings-and-attributes",
            "text": "DOC TEAM NOTE:  \nITEMS TO WRITE ABOUT:   zfs get/set commands",
            "title": "Modifying zfs file system settings and attributes"
        },
        {
            "location": "/handbook/systems-administration/#how-does-one-create-additional-zfs-datasets",
            "text": "DOC TEAM NOTE:  \nITEMS TO WRITE ABOUT:   zfs create command",
            "title": "How does one create additional zfs datasets?"
        },
        {
            "location": "/handbook/systems-administration/#configuring-system-swap",
            "text": "DOC TEAM NOTE:  \nITEMS TO WRITE ABOUT:   zfs set command  swap -l",
            "title": "Configuring system swap"
        },
        {
            "location": "/handbook/systems-administration/#virtualization",
            "text": "Place holder",
            "title": "Virtualization"
        },
        {
            "location": "/handbook/systems-administration/#openindiana-as-a-virtualization-host-server",
            "text": "DOC TEAM NOTE:  \nITEMS TO WRITE ABOUT:   Qemu-KVM (KVM) walkthrough  illumos KVM port does not support AMD processors.  Intel processors require EPT support.    Virtualbox walkthrough  There is no package for this yet, but folks do have it working, see the wiki for details.        DOC TEAM NOTE:  \nITEMS TO WRITE ABOUT:  In a nutshell, most modern Intel processors such as i3, i5, i7, and Xeon provide EPT support.\nMost older processors such as Core2duo and Core2Quad lack EPT support, and a few of them lack virtualization support at all.\nYou can check your processor for EPT support via the following link:  http://ark.intel.com/Products/VirtualizationTechnology",
            "title": "OpenIndiana as a virtualization host server"
        },
        {
            "location": "/handbook/systems-administration/#localization",
            "text": "DOC TEAM NOTE:  \nITEMS TO WRITE ABOUT:  Possible resources to help write this section:   https://wiki.openindiana.org/oi/4.4+Localization  https://docs.oracle.com/cd/E23824_01/html/E26033/glmen.html",
            "title": "Localization"
        },
        {
            "location": "/handbook/systems-administration/#dtrace",
            "text": "Place Holder",
            "title": "Dtrace"
        },
        {
            "location": "/handbook/systems-administration/#configuring-networking",
            "text": "Place Holder",
            "title": "Configuring Networking"
        },
        {
            "location": "/handbook/systems-administration/#manual-configuration-static-ip",
            "text": ":~$ sudo svcadm disable physical:nwam  Define your IP/hostname in  /etc/hosts . For example:  192.168.1.22 hostname hostname.local localhost loghost\n# Subsittude 192.168.1.22 for YOUR IP  Enable the default physical service with  svcadm  and configure the  interface :  :~$ sudo svcadm enable physical:default  Configure interface with ipadm:  :~$ sudo ipadm create-addr -T static -a local=192.168.1.22/24 bge0/v4static  If you do not know what the interface name is (bge0 in this case); then type in  :~$ dladm show-link  or:  :~$ kstat -c net | grep net\n\n# look for hme0, bge0, e1000g0 or soemthing that resembles the driver in use.  Add gateway  :~$ sudo route -p add default 192.168.1.121  or  :~$ sudo nano /etc/defaultrouter\n\n# Enter in your gateways IP  Set DNS server(s)  :~$ sudo nano /etc/resolv.conf\n# Enter in the DNS server IP(s)\nnameserver 192.168.1.121  or  \n:~$ sudo sh -c 'echo  nameserver 192.168.1.121    /etc/resolv.conf'  Restart  :~$ sudo reboot    NOTE:  \nIF you cannot ping an external IP (e.g. google.com) run this command and try again.  :~$ sudo cp /etc/nsswitch.dns /etc/nsswitch.conf  credit for this section of docs go to  /u/127b",
            "title": "Manual Configuration (static IP)"
        },
        {
            "location": "/handbook/systems-administration/#automatic-configuration-nwam",
            "text": "How to use NWAM (network auto magic)",
            "title": "Automatic Configuration (NWAM)"
        },
        {
            "location": "/handbook/systems-administration/#network-automagic-online-help",
            "text": "Comprehensive and fully illustrated online help for using NWAM is available by right clicking the NWAM tray icon and selecting  Help .\nThis opens the online help browser.",
            "title": "Network automagic online help"
        },
        {
            "location": "/handbook/systems-administration/#troubleshooting-nwam",
            "text": "If NWAM is already configured and fails to connect to a wireless network try restarting the service.  For example:  svcadm restart nwam  Sometimes the location gets set to  NoNet  and it's nessessary to manually change the location.  When the location setting is configured to  Switch Locations Automatically , it's not possible to change the location.\nThis is resolved by reconfiguring the location to allow manual switching.\nTo perform this task, do the following:  Right click the NWAM tray icon and select  Location     Switch Locations Manually .\nRight click the NWAM tray icon and select  Location     Automatic .",
            "title": "Troubleshooting NWAM"
        },
        {
            "location": "/handbook/systems-administration/#desktop-gui",
            "text": "Place Holder",
            "title": "Desktop GUI"
        },
        {
            "location": "/handbook/systems-administration/#manual-configuration",
            "text": "Place Holder",
            "title": "Manual Configuration"
        },
        {
            "location": "/handbook/systems-administration/#automatic-configuration",
            "text": "Place Holder",
            "title": "Automatic Configuration"
        },
        {
            "location": "/handbook/systems-administration/#troubleshooting",
            "text": "Make sure the network auto magic 'Location' setting is configured as 'Automatic' and not 'NoNet'",
            "title": "Troubleshooting"
        },
        {
            "location": "/handbook/systems-administration/#clustering-with-open-ha-cluster",
            "text": "DOC TEAM NOTE:  \nITEMS TO WRITE ABOUT:  See old sun docs   http://docs.oracle.com/cd/E19735-01/   Also see:   http://zfs-create.blogspot.nl/",
            "title": "Clustering with Open HA Cluster"
        },
        {
            "location": "/handbook/network-communications/",
            "text": "Hipster Handbook - Network Communications\n\n\n \nNOTE:\n\n\n\n\nThis is a \nDRAFT\n document which may contain errors!\n\n\nHelp us improve and expand this site.\n\n\nPlease see the \nContrib\n section for more details about joining the OpenIndiana Documentation Team.\n\n\n\n\n Place holder for Introduction content \n\n\nPPP\n\n\n Place holder for content \n\n\nPPPoE\n\n\n Place holder for content \n\n\nEmail\n\n\n Place holder for content \n\n\nWWW server\n\n\n\n\nApache\n\n\nnginx\n\n\n\n\nFirewalls\n\n\n\n\nIP packet filtering (IPF)\n\n\n\n\nAdvanced Networking\n\n\n Place holder for content \n\n\nCrossbow\n\n\n Place holder for content \n\n\nHipster as a NAS\n\n\nOpenIndiana provides several ways to share data with network clients.\n\n\n\n\n\n\n\n\nImplementation\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nCIFS\n\n\nKernel based SMB file sharing solution offering ZFS integration, ease of use, and relatively simple configuration.\n\n\n\n\n\n\nSAMBA\n\n\nModern userland based SMB file sharing solution providing support for newer SMB protocols (SMB 2.1) and better compatibility with modern Windows clients.\n\n\n\n\n\n\nNFS\n\n\nThe Network File System was originally developed by Sun Microsystems.\n\n\n\n\n\n\n\n\n \nDOC TEAM NOTE:\n\n\n\nITEMS TO WRITE ABOUT:\n\n\nFor a variation of configuring a home NAS - this could be done virtually as well\n\n\n\n\nRunning OI as a VMware EXSI guest\n\n\nLocal storage hardware is passed through to the OI guest and then shared via ISCSI, CIFS, NFS, etc.\n\n\n\n\n\n\n\n\nFor help writing this section, see the following OpenSolaris references:\n\n\n\n\nSetting Up an OpenSolaris NAS Box\n\n\nGetting Started With the Solaris CIFS Service\n\n\nHow to enable guest access to a Solaris CIFS share\n\n\nSolaris CIFS Service Troubleshooting\n\n\nWhat's New With Solaris CIFS\n\n\nCIFS Technical References\n\n\n\n\nAlso have a look at the \nOpenSolaris CIFS Administration Guide\n\n\n\n\nHipster as a CIFS server (workgroup)\n\n\n Placeholder for introduction content \n\n\nCommands used\n\n\n\n\nsharemgr\n - configure and manage file sharing\n\n\nsmbadm\n - configure and manage CIFS local groups and users, and manage domain membership\n\n\nzfs\n - configures ZFS file systems\n\n\npasswd\n - change login password and password attributes\n\n\nchown\n - change file ownership\n\n\n\n\nConfiguration steps\n\n\nStart by listing available storage pools.\n\n\nzfs list\n\n\nNAME                           USED  AVAIL  REFER  MOUNTPOINT\nstorage                        498K   899G    19K  /storage\n\n\n\n\nCreate your ZFS dataset to be shared via CIFS/SMB.\n\n\nzfs create -o casesensitivity=mixed -o sharesmb=on storage/backup\n\n\n\n\nStart the CIFS service.\n\n\nsvcadm enable -r smb/server\n\n\n\n\nJoin the CIFS server to a workgroup.\n\n\nsmbadm join -w WORKGROUP\n\n\n\n\nConfigure PAM authentication for the CIFS service.\n\n\necho \nother password required pam_smb_passwd.so.1 nowarn\n \n /etc/pam.conf\n\n\n\n\nReset the password for the local user accounts which will be used for remotely accessing the CIFS/SMB share.\n\n\npasswd \nuser_account\n\n\n\n\n\nSet the share name to be used for the CIFS/SMB share.\n\n\nzfs set sharesmb=name=backup storage/backup\n\n\n\n\nChange the ownership of ZFS dataset to the user account which will be used for remotely accessing the CIFS/SMB share.\n\n\nchown -R \nuser_account\n /storage/backup\n\n\n\n\nVerify everything is all set to go.\n\n\nsharemgr show -vp\n\n\ndefault nfs=()\nsmb smb=()\n        * /var/smb/cvol  smb=() \n\n                  c$=/var/smb/cvol       smb=(abe=\nfalse\n guestok=\nfalse\n)      \nDefault Share\n\nzfs smb=()\n    zfs/storage/backup smb=()\n          backup=/storage/backup\n\n\n\n\nYou can create additional CIFS datasets using the following 4 commands.\n\n\n\n\nzfs create -o casesensitivity=mixed -o sharesmb=on \npool_name/dataset_name\n\n\nzfs set sharesmb=name=\nnew_share_name\n \npool_name/dataset_name\n\n\nchown -R \nuser_account\n \npath_to_dataset\n\n\nsharemgr show -vp\n\n\n\n\nHipster as a CIFS server (domain)\n\n\n Placeholder for introduction content \n\n\nHipster as a SAMBA server\n\n\n Place holder for content \n\n\nConfiguring CIFS/SMB client connectivity\n\n\n Place holder for content \n\n\nAdding a remote share using the Linux smbclient\n\n\n\n\nAccessing an SMB Share With Linux Machines\n\n\n\n\nAdding a remote share using the KDE Dolphin file manager GUI\n\n\n\n\nIn the left hand pane click \nNetwork\n\n\nIn the right hand pane click \nAdd Network Folder\n\n\nThe Network Folder Wizard opens\n\n\nSelect the radio button for \nMicrosoft Windows network drive\n and click next\n\n\nSpecify a name for the share - can be anything - this is just a label\n\n\nSpecify the remote CIFS/SMB server name (or IP address)\n\n\nSpecify the share name of the remote CIFS/SMB share\n\n\nClick the save and connect button\n\n\nYou'll be prompted for a remote username and password\n\n\nEnsure the checkbox is marked to save credentials or you'll be asked for everything you do.\n\n\n\n\nAdding a remote share using a Windows client\n\n\n Place holder for content \n\n\nHipster as an NFS server\n\n\n Place holder for content \n\n\nHipster as an NIS server\n\n\n Place holder for content \n\n\nHipster as an LDAP server\n\n\n Place holder for content \n\n\nHipster as a DHCP server\n\n\n Place holder for content \n\n\nHipster as an FTP server\n\n\n Place holder for content \n\n\nHipster as a DNS server\n\n\n Place holder for content \n\n\nHipster as a NTP server\n\n\n Place holder for content \n\n\nHipster as a INETD server\n\n\n Place holder for content",
            "title": "Network Communications"
        },
        {
            "location": "/handbook/network-communications/#hipster-handbook-network-communications",
            "text": "NOTE:   This is a  DRAFT  document which may contain errors!  Help us improve and expand this site.  Please see the  Contrib  section for more details about joining the OpenIndiana Documentation Team.    Place holder for Introduction content",
            "title": "Hipster Handbook - Network Communications"
        },
        {
            "location": "/handbook/network-communications/#ppp",
            "text": "Place holder for content",
            "title": "PPP"
        },
        {
            "location": "/handbook/network-communications/#pppoe",
            "text": "Place holder for content",
            "title": "PPPoE"
        },
        {
            "location": "/handbook/network-communications/#email",
            "text": "Place holder for content",
            "title": "Email"
        },
        {
            "location": "/handbook/network-communications/#www-server",
            "text": "Apache  nginx",
            "title": "WWW server"
        },
        {
            "location": "/handbook/network-communications/#firewalls",
            "text": "IP packet filtering (IPF)",
            "title": "Firewalls"
        },
        {
            "location": "/handbook/network-communications/#advanced-networking",
            "text": "Place holder for content",
            "title": "Advanced Networking"
        },
        {
            "location": "/handbook/network-communications/#crossbow",
            "text": "Place holder for content",
            "title": "Crossbow"
        },
        {
            "location": "/handbook/network-communications/#hipster-as-a-nas",
            "text": "OpenIndiana provides several ways to share data with network clients.     Implementation  Description      CIFS  Kernel based SMB file sharing solution offering ZFS integration, ease of use, and relatively simple configuration.    SAMBA  Modern userland based SMB file sharing solution providing support for newer SMB protocols (SMB 2.1) and better compatibility with modern Windows clients.    NFS  The Network File System was originally developed by Sun Microsystems.       DOC TEAM NOTE:  \nITEMS TO WRITE ABOUT:  For a variation of configuring a home NAS - this could be done virtually as well   Running OI as a VMware EXSI guest  Local storage hardware is passed through to the OI guest and then shared via ISCSI, CIFS, NFS, etc.     For help writing this section, see the following OpenSolaris references:   Setting Up an OpenSolaris NAS Box  Getting Started With the Solaris CIFS Service  How to enable guest access to a Solaris CIFS share  Solaris CIFS Service Troubleshooting  What's New With Solaris CIFS  CIFS Technical References   Also have a look at the  OpenSolaris CIFS Administration Guide",
            "title": "Hipster as a NAS"
        },
        {
            "location": "/handbook/network-communications/#hipster-as-a-cifs-server-workgroup",
            "text": "Placeholder for introduction content",
            "title": "Hipster as a CIFS server (workgroup)"
        },
        {
            "location": "/handbook/network-communications/#commands-used",
            "text": "sharemgr  - configure and manage file sharing  smbadm  - configure and manage CIFS local groups and users, and manage domain membership  zfs  - configures ZFS file systems  passwd  - change login password and password attributes  chown  - change file ownership",
            "title": "Commands used"
        },
        {
            "location": "/handbook/network-communications/#configuration-steps",
            "text": "Start by listing available storage pools.  zfs list  NAME                           USED  AVAIL  REFER  MOUNTPOINT\nstorage                        498K   899G    19K  /storage  Create your ZFS dataset to be shared via CIFS/SMB.  zfs create -o casesensitivity=mixed -o sharesmb=on storage/backup  Start the CIFS service.  svcadm enable -r smb/server  Join the CIFS server to a workgroup.  smbadm join -w WORKGROUP  Configure PAM authentication for the CIFS service.  echo  other password required pam_smb_passwd.so.1 nowarn    /etc/pam.conf  Reset the password for the local user accounts which will be used for remotely accessing the CIFS/SMB share.  passwd  user_account   Set the share name to be used for the CIFS/SMB share.  zfs set sharesmb=name=backup storage/backup  Change the ownership of ZFS dataset to the user account which will be used for remotely accessing the CIFS/SMB share.  chown -R  user_account  /storage/backup  Verify everything is all set to go.  sharemgr show -vp  default nfs=()\nsmb smb=()\n        * /var/smb/cvol  smb=()  \n                  c$=/var/smb/cvol       smb=(abe= false  guestok= false )       Default Share \nzfs smb=()\n    zfs/storage/backup smb=()\n          backup=/storage/backup  You can create additional CIFS datasets using the following 4 commands.   zfs create -o casesensitivity=mixed -o sharesmb=on  pool_name/dataset_name  zfs set sharesmb=name= new_share_name   pool_name/dataset_name  chown -R  user_account   path_to_dataset  sharemgr show -vp",
            "title": "Configuration steps"
        },
        {
            "location": "/handbook/network-communications/#hipster-as-a-cifs-server-domain",
            "text": "Placeholder for introduction content",
            "title": "Hipster as a CIFS server (domain)"
        },
        {
            "location": "/handbook/network-communications/#hipster-as-a-samba-server",
            "text": "Place holder for content",
            "title": "Hipster as a SAMBA server"
        },
        {
            "location": "/handbook/network-communications/#configuring-cifssmb-client-connectivity",
            "text": "Place holder for content",
            "title": "Configuring CIFS/SMB client connectivity"
        },
        {
            "location": "/handbook/network-communications/#adding-a-remote-share-using-the-linux-smbclient",
            "text": "Accessing an SMB Share With Linux Machines",
            "title": "Adding a remote share using the Linux smbclient"
        },
        {
            "location": "/handbook/network-communications/#adding-a-remote-share-using-the-kde-dolphin-file-manager-gui",
            "text": "In the left hand pane click  Network  In the right hand pane click  Add Network Folder  The Network Folder Wizard opens  Select the radio button for  Microsoft Windows network drive  and click next  Specify a name for the share - can be anything - this is just a label  Specify the remote CIFS/SMB server name (or IP address)  Specify the share name of the remote CIFS/SMB share  Click the save and connect button  You'll be prompted for a remote username and password  Ensure the checkbox is marked to save credentials or you'll be asked for everything you do.",
            "title": "Adding a remote share using the KDE Dolphin file manager GUI"
        },
        {
            "location": "/handbook/network-communications/#adding-a-remote-share-using-a-windows-client",
            "text": "Place holder for content",
            "title": "Adding a remote share using a Windows client"
        },
        {
            "location": "/handbook/network-communications/#hipster-as-an-nfs-server",
            "text": "Place holder for content",
            "title": "Hipster as an NFS server"
        },
        {
            "location": "/handbook/network-communications/#hipster-as-an-nis-server",
            "text": "Place holder for content",
            "title": "Hipster as an NIS server"
        },
        {
            "location": "/handbook/network-communications/#hipster-as-an-ldap-server",
            "text": "Place holder for content",
            "title": "Hipster as an LDAP server"
        },
        {
            "location": "/handbook/network-communications/#hipster-as-a-dhcp-server",
            "text": "Place holder for content",
            "title": "Hipster as a DHCP server"
        },
        {
            "location": "/handbook/network-communications/#hipster-as-an-ftp-server",
            "text": "Place holder for content",
            "title": "Hipster as an FTP server"
        },
        {
            "location": "/handbook/network-communications/#hipster-as-a-dns-server",
            "text": "Place holder for content",
            "title": "Hipster as a DNS server"
        },
        {
            "location": "/handbook/network-communications/#hipster-as-a-ntp-server",
            "text": "Place holder for content",
            "title": "Hipster as a NTP server"
        },
        {
            "location": "/handbook/network-communications/#hipster-as-a-inetd-server",
            "text": "Place holder for content",
            "title": "Hipster as a INETD server"
        },
        {
            "location": "/handbook/appendix/",
            "text": "Hipster Handbook - Appendix\n\n\n \nNOTE:\n\n\n\n\nThis is a \nDRAFT\n document which may contain errors!\n\n\nHelp us improve and expand this site.\n\n\nPlease see the \nContrib\n section for more details about joining the OpenIndiana Documentation Team.\n\n\n\n\n place holder for introduction content \n\n\nGlossary\n\n\n\n\n\n\n\n\nTerm\n\n\nDefinition\n\n\n\n\n\n\n\n\n\n\nBoomer\n\n\nThe code name for the audio driver framework used by OpenIndiana. Its application interface is Open Sound System (OSS) 4 compatible.\n\n\n\n\n\n\nConsolidation\n\n\nA collection of related software which has the scope of a project, historically developed by a dedicated team. OpenIndiana is composed of many consolidations.\n\n\n\n\n\n\ng11n\n\n\nInternationalization and localization consolidation.\n\n\n\n\n\n\nillumos\n\n\nA community maintained derivative of the OpenSolaris OS/NET (ON) source which contains core operating system components, including the kernel, drivers, and basic userland.\n\n\n\n\n\n\noi-userland\n\n\nA new OpenIndiana consolidation which pulls together many of the old legacy consolidations. This new consolidation greatly simplifies the development of OpenIndiana.\n\n\n\n\n\n\nSFE\n\n\nSpec Files Extra - External 3rd party IPS repository\n\n\n\n\n\n\nXNV\n\n\nThe X-Windows consolidation.\n\n\n\n\n\n\n\n\nFinding Help and Support\n\n\n Place Holder for section Introduction Content \n\n\nLocal system command line help\n\n\n\n\napropos - search the manual page names and descriptions\n\n\nUsed to find keywords in man pages\n\n\n\n\n\n\nfind - search for files in a directory hierarchy\n\n\ninfo - read Info documents\n\n\nA viewer for GNU info pages\n\n\n\n\n\n\nlocate - find files by name\n\n\nUses the mlocate database to find files and folders\n\n\n\n\n\n\nman - an interface to the on-line reference manuals (man pages)\n\n\nTo pipe the output of a man page to a text file use the command: \nman [manpage] | col -x -b \n [filename].txt\n.\n\n\nFor example: \nman pkg | col -x -b \n pkg.txt\n\n\n\n\n\n\n\n\nWeb based support resources\n\n\n \nDOC TEAM NOTE:\n\n\n\nThe content for this section was originally pulled from the OpenIndiana FAQ and since has been expanded here.\nWe may want to revisit the FAQ and pull these changes over.\n\n\n\n\n\n\n\n\n\nResource\n\n\nURL\n\n\n\n\n\n\n\n\n\n\nUser Support IRC channel\n\n\n#openindiana (irc.freenode.net)\nchannel logs (echelog)\n\n\n\n\n\n\nDevelopment IRC channel\n\n\n#oi-dev (irc.freenode.net)\nchannel logs (echelog)\n\n\n\n\n\n\nDocumentation IRC channel\n\n\n#oi-documentation (irc.freenode.net)\n\n\n\n\n\n\nUser Support Mailing List\n\n\nopenindiana-discuss\nopenindiana-discuss archives\n\n\n\n\n\n\nDevelopment Mailing List\n\n\noi-dev\noi-dev archives\n\n\n\n\n\n\nOpenIndiana Wiki\n\n\nhttps://wiki.openindiana.org\n\n\n\n\n\n\nOpenIndiana Bug Tracker\n\n\nhttps://www.illumos.org/projects/openindiana/issues\n\n\n\n\n\n\n\n\nIPS Command Matrix\n\n\n\n\n\n\n\n\nTask\n\n\nIPS Command\n\n\napt Equivalent\n\n\n\n\n\n\n\n\n\n\nInstall a package\n\n\npkg install\n\n\napt install\n\n\n\n\n\n\nUninstall a package\n\n\npkg uninstall\n\n\napt remove\n\n\n\n\n\n\nUpdate all packages\n\n\npkg update\n\n\napt upgrade\n\n\n\n\n\n\nSearch for a package\n\n\npkg search\n\n\napt search\n\n\n\n\n\n\nDisplay installed packages\n\n\npkg list\n\n\napt list\n\n\n\n\n\n\nDisplay package information\n\n\npkg info\n\n\napt show\n\n\n\n\n\n\nDisplay package contents\n\n\npkg contents\n\n\ndpkg-query -L\n\n\n\n\n\n\nDisplay publisher information\n\n\npkg publisher\n\n\ncat /etc/apt/sources.list.d/*\n\n\n\n\n\n\nAdd or update a publisher\n\n\npkg set-publisher\n\n\nedit \n/etc/apt/sources.list.d/*\n files\n\n\n\n\n\n\nRemove a publisher\n\n\npkg unset-publisher\n\n\nedit \n/etc/apt/sources.list.d/*\n files\n\n\n\n\n\n\n\n\nDeveloping with OpenIndiana\n\n\n \nDOC TEAM NOTE:\n\n\n\nThe book titled \"Introduction to Operating Systems: A Hands-On Approach Using the OpenSolaris Project\" may be a good resource for helping to complete this part of the handbook.\n\n\nQuestions to ask:\n\n\n\n\nHow can OI be used as a development platform?\n\n\nWhat programming tools, languages, etc., are available?\n\n\nHow can OI be used to further the development of OI itself?\n\n\n\n\n\nSoftware Development Testing\n\n\n \nDOC TEAM NOTE:\n\n\n\nNeed to add some guidance about how to add a test repo to test specific packages, etc.",
            "title": "Appendix"
        },
        {
            "location": "/handbook/appendix/#hipster-handbook-appendix",
            "text": "NOTE:   This is a  DRAFT  document which may contain errors!  Help us improve and expand this site.  Please see the  Contrib  section for more details about joining the OpenIndiana Documentation Team.    place holder for introduction content",
            "title": "Hipster Handbook - Appendix"
        },
        {
            "location": "/handbook/appendix/#glossary",
            "text": "Term  Definition      Boomer  The code name for the audio driver framework used by OpenIndiana. Its application interface is Open Sound System (OSS) 4 compatible.    Consolidation  A collection of related software which has the scope of a project, historically developed by a dedicated team. OpenIndiana is composed of many consolidations.    g11n  Internationalization and localization consolidation.    illumos  A community maintained derivative of the OpenSolaris OS/NET (ON) source which contains core operating system components, including the kernel, drivers, and basic userland.    oi-userland  A new OpenIndiana consolidation which pulls together many of the old legacy consolidations. This new consolidation greatly simplifies the development of OpenIndiana.    SFE  Spec Files Extra - External 3rd party IPS repository    XNV  The X-Windows consolidation.",
            "title": "Glossary"
        },
        {
            "location": "/handbook/appendix/#finding-help-and-support",
            "text": "Place Holder for section Introduction Content",
            "title": "Finding Help and Support"
        },
        {
            "location": "/handbook/appendix/#local-system-command-line-help",
            "text": "apropos - search the manual page names and descriptions  Used to find keywords in man pages    find - search for files in a directory hierarchy  info - read Info documents  A viewer for GNU info pages    locate - find files by name  Uses the mlocate database to find files and folders    man - an interface to the on-line reference manuals (man pages)  To pipe the output of a man page to a text file use the command:  man [manpage] | col -x -b   [filename].txt .  For example:  man pkg | col -x -b   pkg.txt",
            "title": "Local system command line help"
        },
        {
            "location": "/handbook/appendix/#web-based-support-resources",
            "text": "DOC TEAM NOTE:  \nThe content for this section was originally pulled from the OpenIndiana FAQ and since has been expanded here.\nWe may want to revisit the FAQ and pull these changes over.     Resource  URL      User Support IRC channel  #openindiana (irc.freenode.net) channel logs (echelog)    Development IRC channel  #oi-dev (irc.freenode.net) channel logs (echelog)    Documentation IRC channel  #oi-documentation (irc.freenode.net)    User Support Mailing List  openindiana-discuss openindiana-discuss archives    Development Mailing List  oi-dev oi-dev archives    OpenIndiana Wiki  https://wiki.openindiana.org    OpenIndiana Bug Tracker  https://www.illumos.org/projects/openindiana/issues",
            "title": "Web based support resources"
        },
        {
            "location": "/handbook/appendix/#ips-command-matrix",
            "text": "Task  IPS Command  apt Equivalent      Install a package  pkg install  apt install    Uninstall a package  pkg uninstall  apt remove    Update all packages  pkg update  apt upgrade    Search for a package  pkg search  apt search    Display installed packages  pkg list  apt list    Display package information  pkg info  apt show    Display package contents  pkg contents  dpkg-query -L    Display publisher information  pkg publisher  cat /etc/apt/sources.list.d/*    Add or update a publisher  pkg set-publisher  edit  /etc/apt/sources.list.d/*  files    Remove a publisher  pkg unset-publisher  edit  /etc/apt/sources.list.d/*  files",
            "title": "IPS Command Matrix"
        },
        {
            "location": "/handbook/appendix/#developing-with-openindiana",
            "text": "DOC TEAM NOTE:  \nThe book titled \"Introduction to Operating Systems: A Hands-On Approach Using the OpenSolaris Project\" may be a good resource for helping to complete this part of the handbook.  Questions to ask:   How can OI be used as a development platform?  What programming tools, languages, etc., are available?  How can OI be used to further the development of OI itself?",
            "title": "Developing with OpenIndiana"
        },
        {
            "location": "/handbook/appendix/#software-development-testing",
            "text": "DOC TEAM NOTE:  \nNeed to add some guidance about how to add a test repo to test specific packages, etc.",
            "title": "Software Development Testing"
        },
        {
            "location": "/dev/userland/",
            "text": "Quick start for oi-userland\n\n\nClone the repository from OpenIndiana's Github, it is set as origin:\n\n\ngit clone https://github.com/OpenIndiana/oi-userland.git\ncd oi-userland\n\n\n\n\nAdd your Github repository as remote:\n\n\ngit remote add my_name https://github.com/my_name/oi-userland.git\n\n\n\n\nPrint for checking:\n\n\ngit remote -v\n\n\n\n\nInitial setup including creation of local on-disk repository and check:\n\n\ngmake setup\ngmake env-check\n\n\n\n\nEvery time you add or modify a component, create a new branch:\n\n\ngit checkout -b my_feature\n\n\n\n\nKeep this branch synchronized with origin/oi/hipster:\n\n\ngit pull --rebase origin oi/hipster\n\n\n\n\nYour local branch is forwarded to the last commit of oi/hipster and your additional commits are kept on top of the stack.\n\n\nA component consists of several files:\n\n\n\n\nMakefile\n: the recipe to build the software (in the \nbuild/$MARCH\n directory) and install it locally (to the \nbuild/proto\n directory)\n\n\npatches/\n: directory containing patches applied before the configuration\n\n\n*.p5m\n: manifests used to generate the IPS package\n\n\n$(COMPONENT_NAME).license\n: file containing the licenses applicable to the software\n\n\n\n\nHere is a list of important targets for \ngmake\n\n\n\n\n\n\n\n\nTarget\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nclobber\n\n\ncleans up the component directory completely, including deleting source\n\n\n\n\n\n\ndownload\n\n\nfetches the source archive and verify its \nSHA256\n sum\n\n\n\n\n\n\nprep\n\n\nextract and apply patches\n\n\n\n\n\n\nbuild\n\n\nconfigure and build\n\n\n\n\n\n\ninstall\n\n\ninstall locally\n\n\n\n\n\n\nsample-manifest\n\n\ngenerate an IPS manifest based on the files installed locally\n\n\n\n\n\n\npublish\n\n\ngenerate dependencies and publish the package to the local repository\n\n\n\n\n\n\n\n\nFirst you need to make sure that \ngmake prep\n passes, so you can start by changing the component's metadata:\n\n\nExample with \ncomponents/libjpeg6-ijg/Makefile\n:\n\n\nCOMPONENT_NAME# libjpeg6-ijg\nCOMPONENT_VERSION# 6.0.2\nLIBJPEG_API_VERSION# 6b\nCOMPONENT_FMRI# image/library/libjpeg6-ijg\nCOMPONENT_CLASSIFICATION# System/Multimedia Libraries\nCOMPONENT_PROJECT_URL# http://www.ijg.org/\nCOMPONENT_SUMMARY# libjpeg - Independent JPEG Group library version 6b\nCOMPONENT_SRC# jpeg-$(LIBJPEG_API_VERSION)\nCOMPONENT_ARCHIVE# $(COMPONENT_NAME)-$(COMPONENT_VERSION).tar.gz\nCOMPONENT_ARCHIVE_HASH# \\\n sha256:75c3ec241e9996504fe02a9ed4d12f16b74ade713972f3db9e65ce95cd27e35d\nCOMPONENT_ARCHIVE_URL# http://www.ijg.org/files/jpegsrc.v$(LIBJPEG_API_VERSION).tar.gz\nCOMPONENT_LICENSE# IJG,GPLv2.0\nCOMPONENT_LICENSE_FILE# $(COMPONENT_NAME).license\n\n\n\n\n\n\n\n\n\n\nVariable\n\n\nValue\n\n\nComment\n\n\n\n\n\n\n\n\n\n\nCOMPONENT_NAME\n\n\nlibjpeg6-ijg\n\n\nUse the same name as in SFE or other Illumos userlands if applicable, otherwise follow Debian\n\n\n\n\n\n\nCOMPONENT_VERSION\n\n\n6.0.2\n\n\nShould be numerical only, not letters\n\n\n\n\n\n\nLIBJPEG_API_VERSION\n\n\n6b\n\n\nLocal variable declared in the Makefile should be prefixed with the component's name\n\n\n\n\n\n\nCOMPONENT_FMRI\n\n\nimage/library/libjpeg6-ijg\n\n\nFollow the convention for the FMRI, check a similar component\n\n\n\n\n\n\nCOMPONENT_CLASSIFICATION\n\n\nSystem/Multimedia Libraries\n\n\nThis entry should be in the \nOpenSolaris IPS Classification 2008\n\n\n\n\n\n\nCOMPONENT_PROJECT_URL\n\n\nhttp://www.ijg.org/\n\n\nUpstream project website\n\n\n\n\n\n\nCOMPONENT_SUMMARY\n\n\nlibjpeg - Independent JPEG Group library version 6b\n\n\nShort description, one-liner\n\n\n\n\n\n\nCOMPONENT_SRC\n\n\njpeg-$(LIBJPEG_API_VERSION)\n\n\n\n\n\n\n\n\nCOMPONENT_ARCHIVE\n\n\n$(COMPONENT_NAME)-$(COMPONENT_VERSION).tar.gz\n\n\nOnly change the extension\n\n\n\n\n\n\nCOMPONENT_ARCHIVE_HASH\n\n\nsha256:75c3ec241e9996504fe02a9ed4d12f16b74ade713972f3db9e65ce95cd27e35d\n\n\nTo be generated\n\n\n\n\n\n\nCOMPONENT_ARCHIVE_URL\n\n\nhttp://www.ijg.org/files/jpegsrc.v$(LIBJPEG_API_VERSION).tar.gz\n\n\nFull path with archive filename if not equal to COMPONENT_ARCHIVE\n\n\n\n\n\n\nCOMPONENT_LICENSE\n\n\nIJG,GPLv2.0\n\n\nComma separated list of licenses\n\n\n\n\n\n\nCOMPONENT_LICENSE_FILE\n\n\n$(COMPONENT_NAME).license\n\n\nDo not change\n\n\n\n\n\n\n\n\nRun the first targets:\n\n\n\n\ngmake download\n: if the checksum fails, replace \nCOMPONENT_ARCHIVE_HASH\n with the actual hash.\n\n\ngmake unpack\n: once the sources are extracted, concatenate the license files to $(COMPONENT_NAME).license, here \"libjpeg6-ijg.license\".\n\n\ngmake patch\n: to apply patches.\n\n\n\n\nIf you do not have any patches, you can as well run \ngmake prep\n directly.\n\n\nPatch, Build and install\n\n\nThe included .mk file depends on the build system, example:\n\n\ninclude $(WS_TOP)/make-rules/configure.mk\n\n\n\n\nLook in the \nmake-rules\n directory for more\n\n\n\n\n\n\n\n\nFile\n\n\nBuild\n\n\n\n\n\n\n\n\n\n\nant.mk\n\n\nAnt\n\n\n\n\n\n\nattpackagemake.mk\n\n\nAT\nT package tools\n\n\n\n\n\n\ncmake.mk\n\n\nCMake\n\n\n\n\n\n\nconfigure.mk\n\n\nAutotools\n\n\n\n\n\n\ngem.mk\n\n\nRuby\n\n\n\n\n\n\njustmake.mk\n\n\nplain Makefile\n\n\n\n\n\n\nmakemaker.mk\n\n\nPerl\n\n\n\n\n\n\nsetup.py\n\n\nPython distutils\n\n\n\n\n\n\n\n\nRead the \n.mk\n file to see which variables you can modify, in general you can find variables such as:\n\n\n\n\n*_ENV\n\n\n*_OPTIONS\n\n\nPRE_*_ACTION\n\n\nPOST_*_ACTION\n\n\n\n\nFor example, you may add this line for an Autotools-based component:\n\n\nCONFIGURE_OPTIONS+# --enable-shared\n\n\n\n\nIt is now up to you to: patch, play with the configuration flags and such...\nDo not hesitate to look around to see how it is done in other components !\n\n\nPrepare the IPS manifest\n\n\nWhen the \ninstall\n target passes, you can run:\n\n\ngmake sample-manifest\n\n\n\n\nto generate a manifest from the list of installed files.\n\n\nCopy the file \nbuild/manifest-generated.p5m\n to \n$(COMPONENT_NAME).p5m\n and edit it:\n\n\n\n\nAdd you name as contributor\n\n\nRemove unused entries from the manifest:\n\n\ndirectories: \n:%g/^dir/d\n (Vim)\n\n\nstatic libs: \n:%g/.a$/d\n (Vim)\n\n\nlibtool files:: \n:%g/.la$/d\n (Vim)\n\n\nPython *.pyc: \n:%g/.pyc$/d\n (Vim)\n\n\n\n\n\n\n\n\nFor some components, specific rules need to be applied: they can be implemented with \ntransforms\n.\nSome example can be found in the directory with the same name at the root directory of oi-userland.\n\n\nPublish the package to your local repository\n\n\nRun \ngmake publish\n: if the dependencies are resolved and the manifest is valid, your package is published to the local repository.\n\n\nTo be able to search for the new packages in the local repository you need to rebuild search indexes:\n\n\npkgrepo refresh -s /path/to/my_repo\n\n\n\n\nYou can even rebuild the entire metadata:\n\n\npkgrepo rebuild -s /path/to/my_repo\n\n\n\n\nInstall the package and test\n\n\nAfter you've published the package to your local repository and rebuilt the repository index or metadata, you can install the package and perform whatever testing is appropriate.\n\n\nWhen you ran \ngmake setup\n earlier, that step added the local repository with a default name of userland to the list of package publishers that \npkg\n knows about.  It also made the local userland repository a higher priority than openindian.org.  You can verify the list of package publishers with:\n\n\npkg publisher\n\n\n\n\nIf the package you built and published to the local userland repository is not already part of hipster, it should be straightforward to install it:\n\n\npfexec pkg install your/package/name\n\n\n\n\nIf, however, the package you built is an updated version of an existing package, then you may have to take additional steps before it can be updated.\n\n\nIf \npkg\n refuses to install the package from your local repository, it may be because the userland-incorporation is preventing updates to the version of the package:\n\n\n$ pfexec pkg update print/filter/hplip\nNo updates available for this image.\n$ pfexec pkg update pkg://userland/print/filter/hplip@3.15.9,5.11-2017.0.0.2:20170228T235543Z\npkg update: No matching version of print/filter/hplip can be installed:\n  Reject:  pkg://userland/print/filter/hplip@3.15.9-2017.0.0.2\n  Reason:  This version is excluded by installed incorporation consolidation/userland/userland-incorporation@0.5.11-2017.0.0.8131\n\n\n\n\nIf you will be installing many test versions of packages on your development system, you may find it easiest to uninstall userland-incorporation.  Alternately, if you want to test a package on a system while keeping userland-incorporation, you can use \npkg change-facet\n to relax the version constraint for just that package:\n\n\npfexec pkg change-facet facet.version-lock.your/package/name/here=false\n\n\n\n\nAfter you have performed one of those steps to remove the version constraint, there is one more issue you may encounter.  Because the installed version of the package came from the openindiana.org publisher but the updated version you want to install and test is associated with the userland publisher, \npkg\n will by default not allow the package update to switch which publisher provides the package.\n\n\nOne option to work around this is to make the openindiana.org publisher non-sticky:\n\n\npfexec pkg set-publisher --non-sticky openindiana.org\n\n\n\n\nYou only need to perform that operation on your development system once.\n\n\nAlternately, you can force \npkg\n to apply an update from a different publisher by specifying the full FMRI for the package, including the publisher:\n\n\npfexec pkg update pkg://userland/print/filter/hplip@3.15.9,5.11-2017.0.0.2:20170228T235543Z\n\n\n\n\nSubmit your component\n\n\nOnce you've installed and tested the package, you are ready to clean up your branch and then submit a pull-request.\n\n\nFirst you need to \nsquash\n all your commits into one, check how many commits are to be considered:\n\n\ngit log\n\n\n\n\nthen\n\n\ngit rebase -i HEAD~N\n\n\n\n\nwith N the number of commits to be squashed, and follow the instructions: the letter 's' should be put in place of 'pick' for the N - 1 commits before the last.\n\n\nIf you made a mistake with the commit message or author, use:\n\n\ngit commit --amend\n\n\n\n\nwith the relevant option.\n\n\nThen you are ready to push:\n\n\ngit push my_name my_feature\n\n\n\n\nor\n\n\ngit push -f my_name my_feature\n\n\n\n\nif the branch you just rebased had already been pushed: since the history is rewritten you need to force the push, be careful.\n\n\nGo to your Github profile and open a pull request.",
            "title": "Building oi-userland"
        },
        {
            "location": "/dev/userland/#quick-start-for-oi-userland",
            "text": "",
            "title": "Quick start for oi-userland"
        },
        {
            "location": "/dev/userland/#clone-the-repository-from-openindianas-github-it-is-set-as-origin",
            "text": "git clone https://github.com/OpenIndiana/oi-userland.git\ncd oi-userland",
            "title": "Clone the repository from OpenIndiana's Github, it is set as origin:"
        },
        {
            "location": "/dev/userland/#add-your-github-repository-as-remote",
            "text": "git remote add my_name https://github.com/my_name/oi-userland.git",
            "title": "Add your Github repository as remote:"
        },
        {
            "location": "/dev/userland/#print-for-checking",
            "text": "git remote -v",
            "title": "Print for checking:"
        },
        {
            "location": "/dev/userland/#initial-setup-including-creation-of-local-on-disk-repository-and-check",
            "text": "gmake setup\ngmake env-check",
            "title": "Initial setup including creation of local on-disk repository and check:"
        },
        {
            "location": "/dev/userland/#every-time-you-add-or-modify-a-component-create-a-new-branch",
            "text": "git checkout -b my_feature",
            "title": "Every time you add or modify a component, create a new branch:"
        },
        {
            "location": "/dev/userland/#keep-this-branch-synchronized-with-originoihipster",
            "text": "git pull --rebase origin oi/hipster  Your local branch is forwarded to the last commit of oi/hipster and your additional commits are kept on top of the stack.",
            "title": "Keep this branch synchronized with origin/oi/hipster:"
        },
        {
            "location": "/dev/userland/#a-component-consists-of-several-files",
            "text": "Makefile : the recipe to build the software (in the  build/$MARCH  directory) and install it locally (to the  build/proto  directory)  patches/ : directory containing patches applied before the configuration  *.p5m : manifests used to generate the IPS package  $(COMPONENT_NAME).license : file containing the licenses applicable to the software",
            "title": "A component consists of several files:"
        },
        {
            "location": "/dev/userland/#here-is-a-list-of-important-targets-for-gmake",
            "text": "Target  Description      clobber  cleans up the component directory completely, including deleting source    download  fetches the source archive and verify its  SHA256  sum    prep  extract and apply patches    build  configure and build    install  install locally    sample-manifest  generate an IPS manifest based on the files installed locally    publish  generate dependencies and publish the package to the local repository",
            "title": "Here is a list of important targets for gmake"
        },
        {
            "location": "/dev/userland/#first-you-need-to-make-sure-that-gmake-prep-passes-so-you-can-start-by-changing-the-components-metadata",
            "text": "Example with  components/libjpeg6-ijg/Makefile :  COMPONENT_NAME# libjpeg6-ijg\nCOMPONENT_VERSION# 6.0.2\nLIBJPEG_API_VERSION# 6b\nCOMPONENT_FMRI# image/library/libjpeg6-ijg\nCOMPONENT_CLASSIFICATION# System/Multimedia Libraries\nCOMPONENT_PROJECT_URL# http://www.ijg.org/\nCOMPONENT_SUMMARY# libjpeg - Independent JPEG Group library version 6b\nCOMPONENT_SRC# jpeg-$(LIBJPEG_API_VERSION)\nCOMPONENT_ARCHIVE# $(COMPONENT_NAME)-$(COMPONENT_VERSION).tar.gz\nCOMPONENT_ARCHIVE_HASH# \\\n sha256:75c3ec241e9996504fe02a9ed4d12f16b74ade713972f3db9e65ce95cd27e35d\nCOMPONENT_ARCHIVE_URL# http://www.ijg.org/files/jpegsrc.v$(LIBJPEG_API_VERSION).tar.gz\nCOMPONENT_LICENSE# IJG,GPLv2.0\nCOMPONENT_LICENSE_FILE# $(COMPONENT_NAME).license     Variable  Value  Comment      COMPONENT_NAME  libjpeg6-ijg  Use the same name as in SFE or other Illumos userlands if applicable, otherwise follow Debian    COMPONENT_VERSION  6.0.2  Should be numerical only, not letters    LIBJPEG_API_VERSION  6b  Local variable declared in the Makefile should be prefixed with the component's name    COMPONENT_FMRI  image/library/libjpeg6-ijg  Follow the convention for the FMRI, check a similar component    COMPONENT_CLASSIFICATION  System/Multimedia Libraries  This entry should be in the  OpenSolaris IPS Classification 2008    COMPONENT_PROJECT_URL  http://www.ijg.org/  Upstream project website    COMPONENT_SUMMARY  libjpeg - Independent JPEG Group library version 6b  Short description, one-liner    COMPONENT_SRC  jpeg-$(LIBJPEG_API_VERSION)     COMPONENT_ARCHIVE  $(COMPONENT_NAME)-$(COMPONENT_VERSION).tar.gz  Only change the extension    COMPONENT_ARCHIVE_HASH  sha256:75c3ec241e9996504fe02a9ed4d12f16b74ade713972f3db9e65ce95cd27e35d  To be generated    COMPONENT_ARCHIVE_URL  http://www.ijg.org/files/jpegsrc.v$(LIBJPEG_API_VERSION).tar.gz  Full path with archive filename if not equal to COMPONENT_ARCHIVE    COMPONENT_LICENSE  IJG,GPLv2.0  Comma separated list of licenses    COMPONENT_LICENSE_FILE  $(COMPONENT_NAME).license  Do not change     Run the first targets:   gmake download : if the checksum fails, replace  COMPONENT_ARCHIVE_HASH  with the actual hash.  gmake unpack : once the sources are extracted, concatenate the license files to $(COMPONENT_NAME).license, here \"libjpeg6-ijg.license\".  gmake patch : to apply patches.   If you do not have any patches, you can as well run  gmake prep  directly.",
            "title": "First you need to make sure that gmake prep passes, so you can start by changing the component's metadata:"
        },
        {
            "location": "/dev/userland/#patch-build-and-install",
            "text": "The included .mk file depends on the build system, example:  include $(WS_TOP)/make-rules/configure.mk  Look in the  make-rules  directory for more     File  Build      ant.mk  Ant    attpackagemake.mk  AT T package tools    cmake.mk  CMake    configure.mk  Autotools    gem.mk  Ruby    justmake.mk  plain Makefile    makemaker.mk  Perl    setup.py  Python distutils     Read the  .mk  file to see which variables you can modify, in general you can find variables such as:   *_ENV  *_OPTIONS  PRE_*_ACTION  POST_*_ACTION   For example, you may add this line for an Autotools-based component:  CONFIGURE_OPTIONS+# --enable-shared  It is now up to you to: patch, play with the configuration flags and such...\nDo not hesitate to look around to see how it is done in other components !",
            "title": "Patch, Build and install"
        },
        {
            "location": "/dev/userland/#prepare-the-ips-manifest",
            "text": "When the  install  target passes, you can run:  gmake sample-manifest  to generate a manifest from the list of installed files.  Copy the file  build/manifest-generated.p5m  to  $(COMPONENT_NAME).p5m  and edit it:   Add you name as contributor  Remove unused entries from the manifest:  directories:  :%g/^dir/d  (Vim)  static libs:  :%g/.a$/d  (Vim)  libtool files::  :%g/.la$/d  (Vim)  Python *.pyc:  :%g/.pyc$/d  (Vim)     For some components, specific rules need to be applied: they can be implemented with  transforms .\nSome example can be found in the directory with the same name at the root directory of oi-userland.",
            "title": "Prepare the IPS manifest"
        },
        {
            "location": "/dev/userland/#publish-the-package-to-your-local-repository",
            "text": "Run  gmake publish : if the dependencies are resolved and the manifest is valid, your package is published to the local repository.  To be able to search for the new packages in the local repository you need to rebuild search indexes:  pkgrepo refresh -s /path/to/my_repo  You can even rebuild the entire metadata:  pkgrepo rebuild -s /path/to/my_repo",
            "title": "Publish the package to your local repository"
        },
        {
            "location": "/dev/userland/#install-the-package-and-test",
            "text": "After you've published the package to your local repository and rebuilt the repository index or metadata, you can install the package and perform whatever testing is appropriate.  When you ran  gmake setup  earlier, that step added the local repository with a default name of userland to the list of package publishers that  pkg  knows about.  It also made the local userland repository a higher priority than openindian.org.  You can verify the list of package publishers with:  pkg publisher  If the package you built and published to the local userland repository is not already part of hipster, it should be straightforward to install it:  pfexec pkg install your/package/name  If, however, the package you built is an updated version of an existing package, then you may have to take additional steps before it can be updated.  If  pkg  refuses to install the package from your local repository, it may be because the userland-incorporation is preventing updates to the version of the package:  $ pfexec pkg update print/filter/hplip\nNo updates available for this image.\n$ pfexec pkg update pkg://userland/print/filter/hplip@3.15.9,5.11-2017.0.0.2:20170228T235543Z\npkg update: No matching version of print/filter/hplip can be installed:\n  Reject:  pkg://userland/print/filter/hplip@3.15.9-2017.0.0.2\n  Reason:  This version is excluded by installed incorporation consolidation/userland/userland-incorporation@0.5.11-2017.0.0.8131  If you will be installing many test versions of packages on your development system, you may find it easiest to uninstall userland-incorporation.  Alternately, if you want to test a package on a system while keeping userland-incorporation, you can use  pkg change-facet  to relax the version constraint for just that package:  pfexec pkg change-facet facet.version-lock.your/package/name/here=false  After you have performed one of those steps to remove the version constraint, there is one more issue you may encounter.  Because the installed version of the package came from the openindiana.org publisher but the updated version you want to install and test is associated with the userland publisher,  pkg  will by default not allow the package update to switch which publisher provides the package.  One option to work around this is to make the openindiana.org publisher non-sticky:  pfexec pkg set-publisher --non-sticky openindiana.org  You only need to perform that operation on your development system once.  Alternately, you can force  pkg  to apply an update from a different publisher by specifying the full FMRI for the package, including the publisher:  pfexec pkg update pkg://userland/print/filter/hplip@3.15.9,5.11-2017.0.0.2:20170228T235543Z",
            "title": "Install the package and test"
        },
        {
            "location": "/dev/userland/#submit-your-component",
            "text": "Once you've installed and tested the package, you are ready to clean up your branch and then submit a pull-request.  First you need to  squash  all your commits into one, check how many commits are to be considered:  git log  then  git rebase -i HEAD~N  with N the number of commits to be squashed, and follow the instructions: the letter 's' should be put in place of 'pick' for the N - 1 commits before the last.  If you made a mistake with the commit message or author, use:  git commit --amend  with the relevant option.  Then you are ready to push:  git push my_name my_feature  or  git push -f my_name my_feature  if the branch you just rebased had already been pushed: since the history is rewritten you need to force the push, be careful.  Go to your Github profile and open a pull request.",
            "title": "Submit your component"
        },
        {
            "location": "/handbook/community/",
            "text": "Hipster Handbook - Community Tutorials\n\n\nHow to Install Oracle Database 11R2 on OpenIndiana Hipster\n\n\nContributed by OpenIndiana community member Franklin Ronald, this article details the steps required for the installation of Oracle Database 11R2 on OpenIndiana Hipster.\n\n\nLink to PDF Document: \nHow to Install Oracle Database 11R2 on OpenIndiana Hipster\n\n\n \nNOTE:\n\n\n\n\nIt is not recommended to run Oracle Database on OpenIndiana in a production environment. Oracle has a restricted list of supported operating systems and unfortunately OpenIndiana is not in it. The purpose of this article is to install the Oracle Database for use in a development environment.\n\n\nUnfortunately, it is not possible to run Oracle Database version 12 and above on OpenIndiana.\n\n\n\n\n \nCall for Contributors:\n\n\n\n\nHelp us improve and expand this page by offering your community written tutorials for publication on this site.\n\n\nPlease see the \nContrib\n section for more details. The docs team can be reached via email: \ndocs at openindiana.org.",
            "title": "Community Contributed Tutorials"
        },
        {
            "location": "/handbook/community/#hipster-handbook-community-tutorials",
            "text": "",
            "title": "Hipster Handbook - Community Tutorials"
        },
        {
            "location": "/handbook/community/#how-to-install-oracle-database-11r2-on-openindiana-hipster",
            "text": "Contributed by OpenIndiana community member Franklin Ronald, this article details the steps required for the installation of Oracle Database 11R2 on OpenIndiana Hipster.  Link to PDF Document:  How to Install Oracle Database 11R2 on OpenIndiana Hipster    NOTE:   It is not recommended to run Oracle Database on OpenIndiana in a production environment. Oracle has a restricted list of supported operating systems and unfortunately OpenIndiana is not in it. The purpose of this article is to install the Oracle Database for use in a development environment.  Unfortunately, it is not possible to run Oracle Database version 12 and above on OpenIndiana.     Call for Contributors:   Help us improve and expand this page by offering your community written tutorials for publication on this site.  Please see the  Contrib  section for more details. The docs team can be reached via email:  docs at openindiana.org.",
            "title": "How to Install Oracle Database 11R2 on OpenIndiana Hipster"
        },
        {
            "location": "/books/about/",
            "text": "About OpenSolaris Redistributable Books\n\n\nConsisting of 41 titles and originally published on July 15th, 2009, this collection represents the final docs release of the OpenSolaris project.\nFor ease of use, the titles have been organized by subject matter and grouped according to their intended target audience.\nFor each title, a brief synopsis has been provided.\nOtherwise, the books are exactly as originally published.\nNo editing of any kind has been performed on any of the titles.\nThis documentation collection has been released under the \nPublic Documentation License (PDL)\n.\n\n\n \nNOTE:\n\n\n\n\nWhen using these books, please bear in mind:\n\n\n\n\nThe OpenIndiana Project has republished these books primarily for their reference value.\n\n\nAlthough vast portions of these books are still relevant, significant divergence has occurred between OpenIndiana Hipster and OpenSolaris/Solaris Express.\n\n\nSome of the books in this collection reference publications which were either never open-sourced by Sun Microsystems or never released by the OpenSolaris Project.\n\n\nFor example, the \nOpenSolaris Developer's Reference Guide\n was never released as part of this collection.\n  However, the illumos project has published a similar title: \nThe illumos Developer's Guide\n\n\n\n\n\n\nThere are lots of broken links to OpenSolaris.org and Sun Microsystems.\n\n\nIn some cases, it may be possible to follow broken links by using the \nInternet Archive Wayback Machine\n.\n\n\n\n\n\n\n\nBook categories\n\n\n\n  \n\n  \nBasic Systems Administration\n\n  \n\n    \n\n      \nGetting Started with OpenSolaris\n\n      \nSystem Administration Guide: Basic Administration\n\n    \n\n  \n\n  \n\n  \n\n  \nSolaris Express Systems Administration\n\n  \n\n    \n\n      \nSolaris Express Developer Edition What's New\n\n      \nSolaris Express Developer Edition Release Notes\n\n      \nSolaris Express Installation Guide: Planning for Installation and Upgrade\n\n      \nSolaris Express Installation Guide: Basic Installations\n\n      \nSolaris Express Developer Edition Installation Guide: Laptop Installations\n\n      \nSolaris Express Installation Guide: Network-Based Installations\n\n      \nSolaris Express Installation Guide: Solaris Flash Archives (Creation and Installation)\n\n      \nSolaris Express Installation Guide: Solaris Live Upgrade and Upgrade Planning\n\n      \nSolaris Express Installation Guide: Custom JumpStart and Advanced Installations\n\n      \nSolaris Express Package List\n\n    \n\n  \n\n  \n\n  \n\n  \nDevelopment Titles\n\n  \n\n    \n\n      \nSolaris Dynamic Tracing Guide\n\n      \nSolaris Modular Debugger Guide\n\n      \nDevice Driver Tutorial\n\n      \nWriting Device Drivers\n\n      \nApplication Packaging Developer's Guide\n\n      \nOpenSolaris Distribution Constructor Guide\n\n      \nMemory and Thread Placement Optimization Developer's Guide\n\n      \nSolaris Containers: Resource Management and Solaris Zones Developer's Guide\n\n      \nSolaris Trusted Extensions Developer's Guide\n\n    \n\n  \n\n  \n\n\n\n\n\n\n  \n\n  \nIntermediate and Advance Systems Administration\n\n  \n\n    \n\n      \nOpenSolaris Managing Boot Environments\n\n      \nOpenSolaris 2009.06 Image Packaging System Guide\n\n      \nSolaris CIFS Administration Guide\n\n      \nSolaris ZFS Administration Guide\n\n      \nOpenSolaris Automated Installer Guide\n\n      \nSystem Administration Guide: Advanced Administration\n\n      \nSystem Administration Guide: Devices and File Systems\n\n      \nSystem Administration Guide: IP Services\n\n      \nSystem Administration Guide: Network Services\n\n      \nSystem Administration Guide: Naming and Directory Services (DNS, NIS, and LDAP)\n\n      \nSystem Administration Guide: Solaris Printing\n\n      \nSystem Administration Guide: Security Services\n\n      \nSystem Administration Guide: Virtualization Using the Solaris Operating System\n\n      \nSolaris Volume Manager Administration Guide\n\n      \nSolaris Tunable Parameters Reference Manual\n\n    \n\n  \n\n  \n\n  \n\n  \nTrusted Extensions Systems Administration\n\n  \n\n    \n\n      \nSolaris Trusted Extensions Installation and Configuration\n\n      \nSolaris Trusted Extensions User's Guide\n\n      \nSolaris Trusted Extensions Administrator's Procedures\n\n      \nSolaris Trusted Extensions Label Administration\n\n      \nSolaris Trusted Extensions Transition Guide\n\n    \n\n  \n\n  \n\n  \n\n  \nTitles updated by the illumos Project\n\n  \nSeveral of the development related titles were updated in the early days of the illumos project.\n    \n\n      \nDynamic Tracing Guide\n\n      \nModular Debugger Guide\n\n      \nWriting Device Drivers\n\n      \nMemory and Thread Placement Optimization Developer's Guide",
            "title": "About OpenSolaris Books"
        },
        {
            "location": "/books/about/#about-opensolaris-redistributable-books",
            "text": "Consisting of 41 titles and originally published on July 15th, 2009, this collection represents the final docs release of the OpenSolaris project.\nFor ease of use, the titles have been organized by subject matter and grouped according to their intended target audience.\nFor each title, a brief synopsis has been provided.\nOtherwise, the books are exactly as originally published.\nNo editing of any kind has been performed on any of the titles.\nThis documentation collection has been released under the  Public Documentation License (PDL) .    NOTE:   When using these books, please bear in mind:   The OpenIndiana Project has republished these books primarily for their reference value.  Although vast portions of these books are still relevant, significant divergence has occurred between OpenIndiana Hipster and OpenSolaris/Solaris Express.  Some of the books in this collection reference publications which were either never open-sourced by Sun Microsystems or never released by the OpenSolaris Project.  For example, the  OpenSolaris Developer's Reference Guide  was never released as part of this collection.\n  However, the illumos project has published a similar title:  The illumos Developer's Guide    There are lots of broken links to OpenSolaris.org and Sun Microsystems.  In some cases, it may be possible to follow broken links by using the  Internet Archive Wayback Machine .",
            "title": "About OpenSolaris Redistributable Books"
        },
        {
            "location": "/books/about/#book-categories",
            "text": "Basic Systems Administration \n   \n     \n       Getting Started with OpenSolaris \n       System Administration Guide: Basic Administration \n     \n   \n   \n   \n   Solaris Express Systems Administration \n   \n     \n       Solaris Express Developer Edition What's New \n       Solaris Express Developer Edition Release Notes \n       Solaris Express Installation Guide: Planning for Installation and Upgrade \n       Solaris Express Installation Guide: Basic Installations \n       Solaris Express Developer Edition Installation Guide: Laptop Installations \n       Solaris Express Installation Guide: Network-Based Installations \n       Solaris Express Installation Guide: Solaris Flash Archives (Creation and Installation) \n       Solaris Express Installation Guide: Solaris Live Upgrade and Upgrade Planning \n       Solaris Express Installation Guide: Custom JumpStart and Advanced Installations \n       Solaris Express Package List \n     \n   \n   \n   \n   Development Titles \n   \n     \n       Solaris Dynamic Tracing Guide \n       Solaris Modular Debugger Guide \n       Device Driver Tutorial \n       Writing Device Drivers \n       Application Packaging Developer's Guide \n       OpenSolaris Distribution Constructor Guide \n       Memory and Thread Placement Optimization Developer's Guide \n       Solaris Containers: Resource Management and Solaris Zones Developer's Guide \n       Solaris Trusted Extensions Developer's Guide \n     \n   \n     \n   \n   Intermediate and Advance Systems Administration \n   \n     \n       OpenSolaris Managing Boot Environments \n       OpenSolaris 2009.06 Image Packaging System Guide \n       Solaris CIFS Administration Guide \n       Solaris ZFS Administration Guide \n       OpenSolaris Automated Installer Guide \n       System Administration Guide: Advanced Administration \n       System Administration Guide: Devices and File Systems \n       System Administration Guide: IP Services \n       System Administration Guide: Network Services \n       System Administration Guide: Naming and Directory Services (DNS, NIS, and LDAP) \n       System Administration Guide: Solaris Printing \n       System Administration Guide: Security Services \n       System Administration Guide: Virtualization Using the Solaris Operating System \n       Solaris Volume Manager Administration Guide \n       Solaris Tunable Parameters Reference Manual \n     \n   \n   \n   \n   Trusted Extensions Systems Administration \n   \n     \n       Solaris Trusted Extensions Installation and Configuration \n       Solaris Trusted Extensions User's Guide \n       Solaris Trusted Extensions Administrator's Procedures \n       Solaris Trusted Extensions Label Administration \n       Solaris Trusted Extensions Transition Guide \n     \n   \n   \n   \n   Titles updated by the illumos Project \n   Several of the development related titles were updated in the early days of the illumos project.\n     \n       Dynamic Tracing Guide \n       Modular Debugger Guide \n       Writing Device Drivers \n       Memory and Thread Placement Optimization Developer's Guide",
            "title": "Book categories"
        },
        {
            "location": "/books/basic/",
            "text": "Basic Systems Administration\n\n\nGetting Started with OpenSolaris\n\n\n\n\n\n\n\n\nItem\n\n\nDetails\n\n\n\n\n\n\n\n\n\n\nDocument Link\n\n\nGetting Started With OpenSolaris\n\n\n\n\n\n\nTopics\n\n\nThe guide provides an introduction to the OpenSolaris\u2122 operating system, as well as instructions for installing the current OpenSolaris release on your system. This guide is intended to help you install and set up the free binary distribution of the OpenSolaris software and make your initial experience with it a successful one.\n\n\n\n\n\n\nRelevancy to OpenIndiana Hipster\n\n\nTo be determined\n\n\n\n\n\n\nTarget Audience\n\n\nThis book is intended for anyone interested in installing and exploring the OpenSolaris operating system.\n\n\n\n\n\n\nRequirements\n\n\nExperience using the Solaris Operating System (OS) or another UNIX\u00ae version is recommended.\n\n\n\n\n\n\n\n\nSystem Administration Guide: Basic Administration\n\n\n\n\n\n\n\n\nItem\n\n\nDetails\n\n\n\n\n\n\n\n\n\n\nDocument Link\n\n\nSystem Administration Guide: Basic Administration\n\n\n\n\n\n\nTopics\n\n\nUser accounts and groups\nServer and client support\nShutting down and booting a system\nManaging services\nManaging software (packages and patches)\n\n\n\n\n\n\nRelevancy to OpenIndiana Hipster\n\n\nTo be determined\n\n\n\n\n\n\nTarget Audience\n\n\nThis book is intended for anyone responsible for administering one or more systems running the Solaris release.\n\n\n\n\n\n\nRequirements\n\n\nThis book assumes you have installed the Solaris Express Operating System and set up all the networking software that you plan to use. To use this book, you should have 1-2 years of UNIX\u00ae system administration experience. Attending UNIX system administration training courses might be helpful.",
            "title": "Basic Administration"
        },
        {
            "location": "/books/basic/#basic-systems-administration",
            "text": "",
            "title": "Basic Systems Administration"
        },
        {
            "location": "/books/basic/#getting-started-with-opensolaris",
            "text": "Item  Details      Document Link  Getting Started With OpenSolaris    Topics  The guide provides an introduction to the OpenSolaris\u2122 operating system, as well as instructions for installing the current OpenSolaris release on your system. This guide is intended to help you install and set up the free binary distribution of the OpenSolaris software and make your initial experience with it a successful one.    Relevancy to OpenIndiana Hipster  To be determined    Target Audience  This book is intended for anyone interested in installing and exploring the OpenSolaris operating system.    Requirements  Experience using the Solaris Operating System (OS) or another UNIX\u00ae version is recommended.",
            "title": "Getting Started with OpenSolaris"
        },
        {
            "location": "/books/basic/#system-administration-guide-basic-administration",
            "text": "Item  Details      Document Link  System Administration Guide: Basic Administration    Topics  User accounts and groups Server and client support Shutting down and booting a system Managing services Managing software (packages and patches)    Relevancy to OpenIndiana Hipster  To be determined    Target Audience  This book is intended for anyone responsible for administering one or more systems running the Solaris release.    Requirements  This book assumes you have installed the Solaris Express Operating System and set up all the networking software that you plan to use. To use this book, you should have 1-2 years of UNIX\u00ae system administration experience. Attending UNIX system administration training courses might be helpful.",
            "title": "System Administration Guide: Basic Administration"
        },
        {
            "location": "/books/advanced/",
            "text": "Intermediate \n Advanced Systems Administration\n\n\nOpenSolaris Managing Boot Environments\n\n\n\n\n\n\n\n\nItem\n\n\nDetails\n\n\n\n\n\n\n\n\n\n\nDocument Link\n\n\nOpenSolaris Managing Boot Environments\n\n\n\n\n\n\nTopics\n\n\nA boot environment is a bootable instance of an OpenSolaris\u2122 operating system image plus any other application software packages installed into that image. System administrators can maintain multiple boot environments on their systems, and each boot environment can have different software versions installed.\nUpon the initial installation of OpenSolaris onto a system, a boot environment is created. Use the beadm(1M) utility or the Package Manager to administer additional boot environments on your system.\n\n\n\n\n\n\nRelevancy to OpenIndiana Hipster\n\n\nTo be determined\n\n\n\n\n\n\nTarget Audience\n\n\nThis book is intended for anyone responsible for administering one or more systems running the OpenSolaris operating system.\n\n\n\n\n\n\nRequirements\n\n\nExperience using the Solaris Operating System (OS) or another UNIX\u00ae version is recommended.\n\n\n\n\n\n\n\n\nOpenSolaris 2009.06 Image Packaging System Guide\n\n\n\n\n\n\n\n\nItem\n\n\nDetails\n\n\n\n\n\n\n\n\n\n\nDocument Link\n\n\nOpenSolaris 2009.06 Image Packaging System Guide\n\n\n\n\n\n\nTopics\n\n\nThe Image Packaging System, pkg(5), is a framework that provides for software lifecycle management such as installation, upgrade, and removal of packages. IPS also provides users the ability to create their own software packages, create and manage packaging repositories, and mirror existing packaging repositories.\nWith IPS, users can perform the following tasks: \nCreate and manage images\nInstall new packages and update existing packages\nManage and search the software on your system\nWith the IPS publication tools, developers can perform the following:\nCreate and manage packaging repositories\nCreate and publish packages to a packaging repository\nProvide a content mirror for an existing packaging repository\nRetrieve the contents of an existing package from a packaging repository\nRepublish the contents of an existing package to a packaging repository\n\n\n\n\n\n\nRelevancy to OpenIndiana Hipster\n\n\nTo be determined\n\n\n\n\n\n\nTarget Audience\n\n\nThis book is intended for system administrators, end users, and developers.\n\n\n\n\n\n\nRequirements\n\n\nExperience using the Solaris Operating System (OS) or another UNIX\u00ae version is recommended.\n\n\n\n\n\n\n\n\nSolaris CIFS Administration Guide\n\n\n\n\n\n\n\n\nItem\n\n\nDetails\n\n\n\n\n\n\n\n\n\n\nDocument Link\n\n\nSolaris CIFS Administration Guide\n\n\n\n\n\n\nTopics\n\n\nSolaris CIFS service, which enables you to configure a Solaris system to make CIFS shares available to CIFS clients.\nNative identity mapping services, which enables you to map user and group identities between Solaris systems and Windows systems.\n\n\n\n\n\n\nRelevancy to OpenIndiana Hipster\n\n\nTo be determined\n\n\n\n\n\n\nTarget Audience\n\n\nThis book is intended for system administrators and end users. Both Solaris and Windows system administrators can use this information to configure and integrate the Solaris CIFS service into a Windows environment.\nIn addition, system administrators can configure the identity mapping service. Finally, the chapter about the Solaris CIFS client is primarily intended for Solaris users who would like to mount CIFS shares. The Solaris CIFS client chapter also includes tasks to be performed by a system administrator.\n\n\n\n\n\n\nRequirements\n\n\nExperience using the Solaris Operating System (OS) or another UNIX\u00ae version is recommended.\n\n\n\n\n\n\n\n\nSolaris ZFS Administration Guide\n\n\n\n\n\n\n\n\nItem\n\n\nDetails\n\n\n\n\n\n\n\n\n\n\nDocument Link\n\n\nSolaris ZFS Administration Guide\n\n\n\n\n\n\nTopics\n\n\nZFS storage pool and file system creation and management\nSnapshots\nClones\nBackups\nUsing access control lists (ACLs) to protect ZFS files\nUsing ZFS on a Solaris system with zones installed\nEmulated volumes\nTroubleshooting\nData recovery\n\n\n\n\n\n\nRelevancy to OpenIndiana Hipster\n\n\nTo be determined\n\n\n\n\n\n\nTarget Audience\n\n\nThis guide is intended for anyone who is interested in setting up and managing Solaris ZFS file systems.\n\n\n\n\n\n\nRequirements\n\n\nExperience using the Solaris Operating System (OS) or another UNIX\u00ae version is recommended.\n\n\n\n\n\n\n\n\nOpenSolaris Automated Installer Guide\n\n\n\n\n\n\n\n\nItem\n\n\nDetails\n\n\n\n\n\n\n\n\n\n\nDocument Link\n\n\nOpenSolaris Automated Installer Guide\n\n\n\n\n\n\nTopics\n\n\nIf you want to install the OpenSolaris operating system (OS) on multiple client systems on a network, you can use the automated installer (AI) to accomplish that task. The automated installer performs essentially \u201chands-free\u201d network installations of the OpenSolaris OS.\n\n\n\n\n\n\nRelevancy to OpenIndiana Hipster\n\n\nTo be determined\n\n\n\n\n\n\nTarget Audience\n\n\nThis book is intended for anyone responsible for administering one or more systems that are running the Solaris release.\n\n\n\n\n\n\nRequirements\n\n\nExperience using the Solaris Operating System (OS) or another UNIX\u00ae version is recommended.\n\n\n\n\n\n\n\n\nSystem Administration Guide: Advanced Administration\n\n\n\n\n\n\n\n\nItem\n\n\nDetails\n\n\n\n\n\n\n\n\n\n\nDocument Link\n\n\nSystem Administration Guide: Advanced Administration\n\n\n\n\n\n\nTopics\n\n\nTerminals and modems\nSystem resources (disk quotas, accounting, and crontabs)\nSystem processes\nTroubleshooting Solaris software problems\n\n\n\n\n\n\nRelevancy to OpenIndiana Hipster\n\n\nTo be determined\n\n\n\n\n\n\nTarget Audience\n\n\nThis book is intended for anyone responsible for administering one or more systems that are running the Solaris release.\n\n\n\n\n\n\nRequirements\n\n\nThis book assumes that you have installed the SunOS\u2122 Solaris Operating System. It also assumes that you have set up any networking software that you plan to use. To use this book, you should have 1-2 years of UNIX\u00ae system administration experience. Attending UNIX system administration training courses might be helpful.\n\n\n\n\n\n\n\n\nSystem Administration Guide: Devices and File Systems\n\n\n\n\n\n\n\n\nItem\n\n\nDetails\n\n\n\n\n\n\n\n\n\n\nDocument Link\n\n\nSystem Administration Guide: Devices and File Systems\n\n\n\n\n\n\nTopics\n\n\nDisks and devices\nFile systems\nBacking up and restoring data\n\n\n\n\n\n\nRelevancy to OpenIndiana Hipster\n\n\nTo be determined\n\n\n\n\n\n\nTarget Audience\n\n\nThis book is intended for anyone responsible for administering one or more systems running the Solaris release.\n\n\n\n\n\n\nRequirements\n\n\nThis book assumes you have installed the SunOS 5.11 Operating System and set up all the networking software that you plan to use. To use this book, you should have 1\u20132 years of UNIX\u00ae system administration experience. Attending UNIX system administration training courses might be helpful.\n\n\n\n\n\n\n\n\nSystem Administration Guide: IP Services\n\n\n\n\n\n\n\n\nItem\n\n\nDetails\n\n\n\n\n\n\n\n\n\n\nDocument Link\n\n\nSystem Administration Guide: IP Services\n\n\n\n\n\n\nTopics\n\n\nTCP/IP network administration\nIPv4 and IPv6 address administration\nDHCP\nIPsec\nIKE\nSolaris IP filter\nMobile IP\nIP network multipathing (IPMP)\nIPQoS\n\n\n\n\n\n\nRelevancy to OpenIndiana Hipster\n\n\nTo be determined\n\n\n\n\n\n\nTarget Audience\n\n\nThis book is intended for anyone responsible for administering systems that run the Solaris OS release, which are configured in a network.\n\n\n\n\n\n\nRequirements\n\n\nThis book assumes that you have already installed the Solaris operating system (Solaris OS). You should be ready to configure your network or ready to configure any networking software that is required on your network. To use this book, you should have at least two years of UNIX\u00ae system administration experience. Attending UNIX system administration training courses might be helpful.\n\n\n\n\n\n\n\n\nSystem Administration Guide: Network Services\n\n\n\n\n\n\n\n\nItem\n\n\nDetails\n\n\n\n\n\n\n\n\n\n\nDocument Link\n\n\nSystem Administration Guide: Network Services\n\n\n\n\n\n\nTopics\n\n\nWeb cache servers\nTime-related services\nNetwork file systems (NFS and Autofs)\nMail\nSLP\nPPP\n\n\n\n\n\n\nRelevancy to OpenIndiana Hipster\n\n\nTo be determined\n\n\n\n\n\n\nTarget Audience\n\n\nThis book is intended for anyone responsible for administering one or more systems that run the Solaris 10 release.\n\n\n\n\n\n\nRequirements\n\n\nThis book assumes that you have already installed the SunOS\u2122 5.10 operating system, and you have set up any networking software that you plan to use. To use this book, you should have one to two years of UNIX\u00ae system administration experience. Attending UNIX system administration training courses might be helpful.\n\n\n\n\n\n\n\n\nSystem Administration Guide: Naming and Directory Services (DNS, NIS, and LDAP)\n\n\n\n\n\n\n\n\nItem\n\n\nDetails\n\n\n\n\n\n\n\n\n\n\nDocument Link\n\n\nSystem Administration Guide: Naming and Directory Services (DNS, NIS, and LDAP)\n\n\n\n\n\n\nTopics\n\n\nDNS\nNIS\nLDAP (including transitioning from NIS to LDAP and transitioning from NIS+ to LDAP)\n\n\n\n\n\n\nRelevancy to OpenIndiana Hipster\n\n\nTo be determined\n\n\n\n\n\n\nTarget Audience\n\n\nThis manual is written for experienced system and network administrators.\n\n\n\n\n\n\nRequirements\n\n\nAlthough this book introduces networking concepts relevant to Solaris naming and directory services, it explains neither the networking fundamentals nor the administration tools in the Solaris OS. To use this book, you should have a firm understanding of UNIX\u00ae networking and systems administration fundamentals.\n\n\n\n\n\n\n\n\nSystem Administration Guide: Solaris Printing\n\n\n\n\n\n\n\n\nItem\n\n\nDetails\n\n\n\n\n\n\n\n\n\n\nDocument Link\n\n\nSystem Administration Guide: Solaris Printing\n\n\n\n\n\n\nTopics\n\n\nSolaris printing topics and tasks\nUsing services, tools, protocols, and technologies to set up and administer printing services and printers\n\n\n\n\n\n\nRelevancy to OpenIndiana Hipster\n\n\nOBSOLETE; although portions may still be valid\n.\nDeprecation notes:\n Subsequent to the release of OpenSolaris 2009.06, the Common UNIX Printing System (CUPS) was selected as the default print service, however, the lp print service was retained. This change was implemented in preparation for the OpenSolaris 2010.03 release.\nThe proposed release notes for OpenSolaris 2010.03 included this statement: \"CUPS support includes a web and graphical interface to manage your printing environment. A system that is running CUPS becomes a host that can accept print requests from client systems, process those requests, and then send them to the appropriate printer. To facilitate CUPS support, a new print-service command has been introduced that provides a mechanism for switching between CUPS print service and the LP print service, including 2 new SMF services.\"\nDoc Team Notes:\n Oracle Solaris dropped support for lp when they introduced CUPS in the Solaris 11.0 release. The OpenIndiana project retained both print subsystems, which are managed by the \nprint-service\n command. Both \nlp\n and \nlpr\n are symbolically linked to \nprint-service\n. Issuing the command \nprint-service -q\n shows the active print subsystem, which by default is CUPS. More information can be found in the print-service (1M) man page.\n\n\n\n\n\n\nTarget Audience\n\n\nThis book is intended for anyone responsible for administering one or more systems that are running the Solaris release.\n\n\n\n\n\n\nRequirements\n\n\nThis book assumes that you have installed the SunOS\u2122 Solaris Operating System. It also assumes that you have set up any networking software that you plan to use. To use this book, you should have 1-2 years of UNIX\u00ae system administration experience. Attending UNIX system administration training courses might be helpful.\n\n\n\n\n\n\n\n\nSystem Administration Guide: Security Services\n\n\n\n\n\n\n\n\nItem\n\n\nDetails\n\n\n\n\n\n\n\n\n\n\nDocument Link\n\n\nSystem Administration Guide: Security Services\n\n\n\n\n\n\nTopics\n\n\nAuditing\nDevice management\nFile security\nBART\nKerberos services\nPAM\nSolaris Cryptographic Framework\nPrivileges\nRBAC\nSASL\nSolaris Secure Shell\n\n\n\n\n\n\nRelevancy to OpenIndiana Hipster\n\n\nTo be determined\n\n\n\n\n\n\nTarget Audience\n\n\nThis book is intended for anyone who is responsible for administering one or more systems that run a Solaris Express Community Edition release.\n\n\n\n\n\n\nRequirements\n\n\nTo use this book, you should have more than two years of UNIX\u00ae system administration experience. Attending training courses in UNIX system administration might be helpful.\n\n\n\n\n\n\n\n\nSystem Administration Guide: Virtualization Using the Solaris Operating System\n\n\n\n\n\n\n\n\nItem\n\n\nDetails\n\n\n\n\n\n\n\n\n\n\nDocument Link\n\n\nSystem Administration Guide: Virtualization Using the Solaris Operating System\n\n\n\n\n\n\nTopics\n\n\nResource management features, which enable you to control how applications use available system resources\nZones software partitioning technology, which virtualizes operating system services to create an isolated environment for running applications\nVirtualization using Sun\u2122 xVM hypervisor technology, which supports multiple operating system instances simultaneously\n\n\n\n\n\n\nRelevancy to OpenIndiana Hipster\n\n\nTo be determined\n\n\n\n\n\n\nTarget Audience\n\n\nThis book is intended for anyone responsible for administering one or more systems that run the Solaris release.\n\n\n\n\n\n\nRequirements\n\n\nThis book assumes that you have already installed the operating system and set up any networking software that you plan to use. To use this book, you should have at least one to two years of UNIX\u00ae system administration experience.\n\n\n\n\n\n\n\n\nSolaris Volume Manager Administration Guide\n\n\n\n\n\n\n\n\nItem\n\n\nDetails\n\n\n\n\n\n\n\n\n\n\nDocument Link\n\n\nSolaris Volume Manager Administration Guide\n\n\n\n\n\n\nTopics\n\n\nThe Solaris Volume Manager Administration Guide explains how to use Solaris\u2122 Volume Manager to manage your system's storage needs. Solaris Volume Manager enables you to create, modify, and use RAID-0 (concatenation and stripe) volumes, RAID-1 (mirror) volumes.\n\n\n\n\n\n\nRelevancy to OpenIndiana Hipster\n\n\nTo be determined\n\n\n\n\n\n\nTarget Audience\n\n\nSystem and storage administrators can use this book to identify:\nTasks supported by Solaris Volume Manager\nWays to use Solaris Volume Manager to provide more reliable and accessible data\n\n\n\n\n\n\nRequirements\n\n\nThis book assumes that you have installed the SunOS\u2122 Solaris Operating System. It also assumes that you have set up any networking software that you plan to use. To use this book, you should have 1-2 years of UNIX\u00ae system administration experience. Attending UNIX system administration training courses might be helpful.\n\n\n\n\n\n\n\n\nSolaris Tunable Parameters Reference Manual\n\n\n\n\n\n\n\n\nItem\n\n\nDetails\n\n\n\n\n\n\n\n\n\n\nDocument Link\n\n\nSolaris Tunable Parameters Reference Manual\n\n\n\n\n\n\nTopics\n\n\nThe Solaris Tunable Parameters Reference Manual provides reference information about Solaris\u2122 OS kernel and network tunable parameters. This manual does not provide tunable parameter information about the CDE, GNOME, or Java\u2122 environments.\n\n\n\n\n\n\nRelevancy to OpenIndiana Hipster\n\n\nTo be determined\n\n\n\n\n\n\nTarget Audience\n\n\nThis book is intended for experienced Solaris system administrators who might need to change kernel tunable parameters in certain situations.\n\n\n\n\n\n\nRequirements\n\n\nTo use this book, you should have more than two years of UNIX\u00ae system administration experience. Attending training courses in UNIX system administration might be helpful.",
            "title": "Advanced Administration"
        },
        {
            "location": "/books/advanced/#intermediate-advanced-systems-administration",
            "text": "",
            "title": "Intermediate &amp; Advanced Systems Administration"
        },
        {
            "location": "/books/advanced/#opensolaris-managing-boot-environments",
            "text": "Item  Details      Document Link  OpenSolaris Managing Boot Environments    Topics  A boot environment is a bootable instance of an OpenSolaris\u2122 operating system image plus any other application software packages installed into that image. System administrators can maintain multiple boot environments on their systems, and each boot environment can have different software versions installed. Upon the initial installation of OpenSolaris onto a system, a boot environment is created. Use the beadm(1M) utility or the Package Manager to administer additional boot environments on your system.    Relevancy to OpenIndiana Hipster  To be determined    Target Audience  This book is intended for anyone responsible for administering one or more systems running the OpenSolaris operating system.    Requirements  Experience using the Solaris Operating System (OS) or another UNIX\u00ae version is recommended.",
            "title": "OpenSolaris Managing Boot Environments"
        },
        {
            "location": "/books/advanced/#opensolaris-200906-image-packaging-system-guide",
            "text": "Item  Details      Document Link  OpenSolaris 2009.06 Image Packaging System Guide    Topics  The Image Packaging System, pkg(5), is a framework that provides for software lifecycle management such as installation, upgrade, and removal of packages. IPS also provides users the ability to create their own software packages, create and manage packaging repositories, and mirror existing packaging repositories. With IPS, users can perform the following tasks:  Create and manage images Install new packages and update existing packages Manage and search the software on your system With the IPS publication tools, developers can perform the following: Create and manage packaging repositories Create and publish packages to a packaging repository Provide a content mirror for an existing packaging repository Retrieve the contents of an existing package from a packaging repository Republish the contents of an existing package to a packaging repository    Relevancy to OpenIndiana Hipster  To be determined    Target Audience  This book is intended for system administrators, end users, and developers.    Requirements  Experience using the Solaris Operating System (OS) or another UNIX\u00ae version is recommended.",
            "title": "OpenSolaris 2009.06 Image Packaging System Guide"
        },
        {
            "location": "/books/advanced/#solaris-cifs-administration-guide",
            "text": "Item  Details      Document Link  Solaris CIFS Administration Guide    Topics  Solaris CIFS service, which enables you to configure a Solaris system to make CIFS shares available to CIFS clients. Native identity mapping services, which enables you to map user and group identities between Solaris systems and Windows systems.    Relevancy to OpenIndiana Hipster  To be determined    Target Audience  This book is intended for system administrators and end users. Both Solaris and Windows system administrators can use this information to configure and integrate the Solaris CIFS service into a Windows environment. In addition, system administrators can configure the identity mapping service. Finally, the chapter about the Solaris CIFS client is primarily intended for Solaris users who would like to mount CIFS shares. The Solaris CIFS client chapter also includes tasks to be performed by a system administrator.    Requirements  Experience using the Solaris Operating System (OS) or another UNIX\u00ae version is recommended.",
            "title": "Solaris CIFS Administration Guide"
        },
        {
            "location": "/books/advanced/#solaris-zfs-administration-guide",
            "text": "Item  Details      Document Link  Solaris ZFS Administration Guide    Topics  ZFS storage pool and file system creation and management Snapshots Clones Backups Using access control lists (ACLs) to protect ZFS files Using ZFS on a Solaris system with zones installed Emulated volumes Troubleshooting Data recovery    Relevancy to OpenIndiana Hipster  To be determined    Target Audience  This guide is intended for anyone who is interested in setting up and managing Solaris ZFS file systems.    Requirements  Experience using the Solaris Operating System (OS) or another UNIX\u00ae version is recommended.",
            "title": "Solaris ZFS Administration Guide"
        },
        {
            "location": "/books/advanced/#opensolaris-automated-installer-guide",
            "text": "Item  Details      Document Link  OpenSolaris Automated Installer Guide    Topics  If you want to install the OpenSolaris operating system (OS) on multiple client systems on a network, you can use the automated installer (AI) to accomplish that task. The automated installer performs essentially \u201chands-free\u201d network installations of the OpenSolaris OS.    Relevancy to OpenIndiana Hipster  To be determined    Target Audience  This book is intended for anyone responsible for administering one or more systems that are running the Solaris release.    Requirements  Experience using the Solaris Operating System (OS) or another UNIX\u00ae version is recommended.",
            "title": "OpenSolaris Automated Installer Guide"
        },
        {
            "location": "/books/advanced/#system-administration-guide-advanced-administration",
            "text": "Item  Details      Document Link  System Administration Guide: Advanced Administration    Topics  Terminals and modems System resources (disk quotas, accounting, and crontabs) System processes Troubleshooting Solaris software problems    Relevancy to OpenIndiana Hipster  To be determined    Target Audience  This book is intended for anyone responsible for administering one or more systems that are running the Solaris release.    Requirements  This book assumes that you have installed the SunOS\u2122 Solaris Operating System. It also assumes that you have set up any networking software that you plan to use. To use this book, you should have 1-2 years of UNIX\u00ae system administration experience. Attending UNIX system administration training courses might be helpful.",
            "title": "System Administration Guide: Advanced Administration"
        },
        {
            "location": "/books/advanced/#system-administration-guide-devices-and-file-systems",
            "text": "Item  Details      Document Link  System Administration Guide: Devices and File Systems    Topics  Disks and devices File systems Backing up and restoring data    Relevancy to OpenIndiana Hipster  To be determined    Target Audience  This book is intended for anyone responsible for administering one or more systems running the Solaris release.    Requirements  This book assumes you have installed the SunOS 5.11 Operating System and set up all the networking software that you plan to use. To use this book, you should have 1\u20132 years of UNIX\u00ae system administration experience. Attending UNIX system administration training courses might be helpful.",
            "title": "System Administration Guide: Devices and File Systems"
        },
        {
            "location": "/books/advanced/#system-administration-guide-ip-services",
            "text": "Item  Details      Document Link  System Administration Guide: IP Services    Topics  TCP/IP network administration IPv4 and IPv6 address administration DHCP IPsec IKE Solaris IP filter Mobile IP IP network multipathing (IPMP) IPQoS    Relevancy to OpenIndiana Hipster  To be determined    Target Audience  This book is intended for anyone responsible for administering systems that run the Solaris OS release, which are configured in a network.    Requirements  This book assumes that you have already installed the Solaris operating system (Solaris OS). You should be ready to configure your network or ready to configure any networking software that is required on your network. To use this book, you should have at least two years of UNIX\u00ae system administration experience. Attending UNIX system administration training courses might be helpful.",
            "title": "System Administration Guide: IP Services"
        },
        {
            "location": "/books/advanced/#system-administration-guide-network-services",
            "text": "Item  Details      Document Link  System Administration Guide: Network Services    Topics  Web cache servers Time-related services Network file systems (NFS and Autofs) Mail SLP PPP    Relevancy to OpenIndiana Hipster  To be determined    Target Audience  This book is intended for anyone responsible for administering one or more systems that run the Solaris 10 release.    Requirements  This book assumes that you have already installed the SunOS\u2122 5.10 operating system, and you have set up any networking software that you plan to use. To use this book, you should have one to two years of UNIX\u00ae system administration experience. Attending UNIX system administration training courses might be helpful.",
            "title": "System Administration Guide: Network Services"
        },
        {
            "location": "/books/advanced/#system-administration-guide-naming-and-directory-services-dns-nis-and-ldap",
            "text": "Item  Details      Document Link  System Administration Guide: Naming and Directory Services (DNS, NIS, and LDAP)    Topics  DNS NIS LDAP (including transitioning from NIS to LDAP and transitioning from NIS+ to LDAP)    Relevancy to OpenIndiana Hipster  To be determined    Target Audience  This manual is written for experienced system and network administrators.    Requirements  Although this book introduces networking concepts relevant to Solaris naming and directory services, it explains neither the networking fundamentals nor the administration tools in the Solaris OS. To use this book, you should have a firm understanding of UNIX\u00ae networking and systems administration fundamentals.",
            "title": "System Administration Guide: Naming and Directory Services (DNS, NIS, and LDAP)"
        },
        {
            "location": "/books/advanced/#system-administration-guide-solaris-printing",
            "text": "Item  Details      Document Link  System Administration Guide: Solaris Printing    Topics  Solaris printing topics and tasks Using services, tools, protocols, and technologies to set up and administer printing services and printers    Relevancy to OpenIndiana Hipster  OBSOLETE; although portions may still be valid . Deprecation notes:  Subsequent to the release of OpenSolaris 2009.06, the Common UNIX Printing System (CUPS) was selected as the default print service, however, the lp print service was retained. This change was implemented in preparation for the OpenSolaris 2010.03 release. The proposed release notes for OpenSolaris 2010.03 included this statement: \"CUPS support includes a web and graphical interface to manage your printing environment. A system that is running CUPS becomes a host that can accept print requests from client systems, process those requests, and then send them to the appropriate printer. To facilitate CUPS support, a new print-service command has been introduced that provides a mechanism for switching between CUPS print service and the LP print service, including 2 new SMF services.\" Doc Team Notes:  Oracle Solaris dropped support for lp when they introduced CUPS in the Solaris 11.0 release. The OpenIndiana project retained both print subsystems, which are managed by the  print-service  command. Both  lp  and  lpr  are symbolically linked to  print-service . Issuing the command  print-service -q  shows the active print subsystem, which by default is CUPS. More information can be found in the print-service (1M) man page.    Target Audience  This book is intended for anyone responsible for administering one or more systems that are running the Solaris release.    Requirements  This book assumes that you have installed the SunOS\u2122 Solaris Operating System. It also assumes that you have set up any networking software that you plan to use. To use this book, you should have 1-2 years of UNIX\u00ae system administration experience. Attending UNIX system administration training courses might be helpful.",
            "title": "System Administration Guide: Solaris Printing"
        },
        {
            "location": "/books/advanced/#system-administration-guide-security-services",
            "text": "Item  Details      Document Link  System Administration Guide: Security Services    Topics  Auditing Device management File security BART Kerberos services PAM Solaris Cryptographic Framework Privileges RBAC SASL Solaris Secure Shell    Relevancy to OpenIndiana Hipster  To be determined    Target Audience  This book is intended for anyone who is responsible for administering one or more systems that run a Solaris Express Community Edition release.    Requirements  To use this book, you should have more than two years of UNIX\u00ae system administration experience. Attending training courses in UNIX system administration might be helpful.",
            "title": "System Administration Guide: Security Services"
        },
        {
            "location": "/books/advanced/#system-administration-guide-virtualization-using-the-solaris-operating-system",
            "text": "Item  Details      Document Link  System Administration Guide: Virtualization Using the Solaris Operating System    Topics  Resource management features, which enable you to control how applications use available system resources Zones software partitioning technology, which virtualizes operating system services to create an isolated environment for running applications Virtualization using Sun\u2122 xVM hypervisor technology, which supports multiple operating system instances simultaneously    Relevancy to OpenIndiana Hipster  To be determined    Target Audience  This book is intended for anyone responsible for administering one or more systems that run the Solaris release.    Requirements  This book assumes that you have already installed the operating system and set up any networking software that you plan to use. To use this book, you should have at least one to two years of UNIX\u00ae system administration experience.",
            "title": "System Administration Guide: Virtualization Using the Solaris Operating System"
        },
        {
            "location": "/books/advanced/#solaris-volume-manager-administration-guide",
            "text": "Item  Details      Document Link  Solaris Volume Manager Administration Guide    Topics  The Solaris Volume Manager Administration Guide explains how to use Solaris\u2122 Volume Manager to manage your system's storage needs. Solaris Volume Manager enables you to create, modify, and use RAID-0 (concatenation and stripe) volumes, RAID-1 (mirror) volumes.    Relevancy to OpenIndiana Hipster  To be determined    Target Audience  System and storage administrators can use this book to identify: Tasks supported by Solaris Volume Manager Ways to use Solaris Volume Manager to provide more reliable and accessible data    Requirements  This book assumes that you have installed the SunOS\u2122 Solaris Operating System. It also assumes that you have set up any networking software that you plan to use. To use this book, you should have 1-2 years of UNIX\u00ae system administration experience. Attending UNIX system administration training courses might be helpful.",
            "title": "Solaris Volume Manager Administration Guide"
        },
        {
            "location": "/books/advanced/#solaris-tunable-parameters-reference-manual",
            "text": "Item  Details      Document Link  Solaris Tunable Parameters Reference Manual    Topics  The Solaris Tunable Parameters Reference Manual provides reference information about Solaris\u2122 OS kernel and network tunable parameters. This manual does not provide tunable parameter information about the CDE, GNOME, or Java\u2122 environments.    Relevancy to OpenIndiana Hipster  To be determined    Target Audience  This book is intended for experienced Solaris system administrators who might need to change kernel tunable parameters in certain situations.    Requirements  To use this book, you should have more than two years of UNIX\u00ae system administration experience. Attending training courses in UNIX system administration might be helpful.",
            "title": "Solaris Tunable Parameters Reference Manual"
        },
        {
            "location": "/books/express/",
            "text": "Solaris Express Systems Administration\n\n\nSolaris Express Developer Edition What's New\n\n\n\n\n\n\n\n\nItem\n\n\nDetails\n\n\n\n\n\n\n\n\n\n\nDocument Link\n\n\nSolaris Express Developer Edition What's New\n\n\n\n\n\n\nTopics\n\n\nSolaris Express Developer Edition What's New summarizes all features in the most current Software Express release.\n\n\n\n\n\n\nRelevancy to OpenIndiana Hipster\n\n\nTo be determined\n\n\n\n\n\n\nTarget Audience\n\n\nThis book provides introductory descriptions of the new Software Express features for users, developers, and system administrators.\n\n\n\n\n\n\nRequirements\n\n\nTo use this book, you should have 1-2 years of UNIX\u00ae system administration experience. Attending UNIX system administration training courses might be helpful.\n\n\n\n\n\n\n\n\nSolaris Express Developer Edition Release Notes\n\n\n\n\n\n\n\n\nItem\n\n\nDetails\n\n\n\n\n\n\n\n\n\n\nDocument Link\n\n\nSolaris Express Developer Edition Release Notes\n\n\n\n\n\n\nTopics\n\n\nThe Solaris Express Developer Edition Release Notes contains installation and runtime problem details. Also included are end-of-software support statements for the Solaris\u2122 Operating System (Solaris OS).\n\n\n\n\n\n\nRelevancy to OpenIndiana Hipster\n\n\nTo be determined\n\n\n\n\n\n\nTarget Audience\n\n\nThese notes are for users and system administrators who install and use the Solaris Operating System.\n\n\n\n\n\n\nRequirements\n\n\nTo use this book, you should have 1-2 years of UNIX\u00ae system administration experience. Attending UNIX system administration training courses might be helpful.\n\n\n\n\n\n\n\n\nSolaris Express Installation Guide: Planning for Installation and Upgrade\n\n\n\n\n\n\n\n\nItem\n\n\nDetails\n\n\n\n\n\n\n\n\n\n\nDocument Link\n\n\nSolaris Express Installation Guide: Planning for Installation and Upgrade\n\n\n\n\n\n\nTopics\n\n\nThis book describes planning your installation or upgrade with the Solaris\u2122 Operating System (OS) on both networked and non-networked SPARC\u00ae and x86 architecture based systems. This book also provides overviews of several technologies that relate to installation such as Solaris Zones, GRUB based booting, and the creation of RAID-1 volumes during installation. This book does not include instructions about how to set up system hardware or other peripherals.\n\n\n\n\n\n\nRelevancy to OpenIndiana Hipster\n\n\nTo be determined\n\n\n\n\n\n\nTarget Audience\n\n\nThis book is intended for system administrators responsible for installing the Solaris OS.\n This book provides both of the following types of information.\nAdvanced Solaris installation planning information for enterprise system administrators who manage multiple Solaris machines in a networked environment\nBasic Solaris installation planning information for system administrators who perform infrequent Solaris installations or upgrades\n\n\n\n\n\n\nRequirements\n\n\nTo use this book, you should have 1-2 years of UNIX\u00ae system administration experience. Attending UNIX system administration training courses might be helpful.\n\n\n\n\n\n\n\n\nSolaris Express Installation Guide: Basic Installations\n\n\n\n\n\n\n\n\nItem\n\n\nDetails\n\n\n\n\n\n\n\n\n\n\nDocument Link\n\n\nSolaris Express Installation Guide: Basic Installations\n\n\n\n\n\n\nTopics\n\n\nThis book describes how to use CD or DVD media to install the Solaris\u2122 Operating System (Solaris OS) on a non-networked system. This book does not include instructions about how to set up system hardware or other peripherals.\n\n\n\n\n\n\nRelevancy to OpenIndiana Hipster\n\n\nTo be determined\n\n\n\n\n\n\nTarget Audience\n\n\nThis book is intended for system administrators who are responsible for installing the Solaris OS. This book provides basic Solaris installation information for system administrators who perform infrequent Solaris installations or upgrades.\n\n\n\n\n\n\nRequirements\n\n\nTo use this book, you should have 1-2 years of UNIX\u00ae system administration experience. Attending UNIX system administration training courses might be helpful.\n\n\n\n\n\n\n\n\nSolaris Express Developer Edition Installation Guide: Laptop Installations\n\n\n\n\n\n\n\n\nItem\n\n\nDetails\n\n\n\n\n\n\n\n\n\n\nDocument Link\n\n\nSolaris Express Developer Edition Installation Guide: Laptop Installations\n\n\n\n\n\n\nTopics\n\n\nThis book provides general guidance for installing the Solaris Express Developer Edition on a laptop computer.\n\n\n\n\n\n\nRelevancy to OpenIndiana Hipster\n\n\nTo be determined\n\n\n\n\n\n\nTarget Audience\n\n\nThis book is intended for anyone interested in installing Solaris Express Developer Edition on laptop hardware.\n\n\n\n\n\n\nRequirements\n\n\nTo use this book, you should have basic UNIX\u00ae system administration experience. Attending UNIX system administration training courses might be helpful.\n\n\n\n\n\n\n\n\nSolaris Express Installation Guide: Network-Based Installations\n\n\n\n\n\n\n\n\nItem\n\n\nDetails\n\n\n\n\n\n\n\n\n\n\nDocument Link\n\n\nSolaris Express Installation Guide: Network-Based Installations\n\n\n\n\n\n\nTopics\n\n\nThis book describes how to install the Solaris\u2122 Operating System (Solaris OS) remotely over a local area network or a wide area network. This book does not include instructions about how to set up system hardware or other peripherals.\n\n\n\n\n\n\nRelevancy to OpenIndiana Hipster\n\n\nTo be determined\n\n\n\n\n\n\nTarget Audience\n\n\nThis book is intended for system administrators who are responsible for installing the Solaris software. This book provides advanced Solaris installation information for enterprise system administrators who manage multiple Solaris machines in a networked environment.\n\n\n\n\n\n\nRequirements\n\n\nTo use this book, you should have 1-2 years of UNIX\u00ae system administration experience. Attending UNIX system administration training courses might be helpful.\n\n\n\n\n\n\n\n\nSolaris Express Installation Guide: Solaris Flash Archives (Creation and Installation)\n\n\n\n\n\n\n\n\nItem\n\n\nDetails\n\n\n\n\n\n\n\n\n\n\nDocument Link\n\n\nSolaris Express Installation Guide: Solaris Flash Archives (Creation and Installation)\n\n\n\n\n\n\nTopics\n\n\nThis book provides planning information and instructions for creating Solaris\u2122 Flash archives and using Solaris Flash archives to install the Solaris Operating System (OS) on multiple systems. This book does not include instructions about how to set up system hardware or other peripherals.\n\n\n\n\n\n\nRelevancy to OpenIndiana Hipster\n\n\nTo be determined\n\n\n\n\n\n\nTarget Audience\n\n\nThis book is intended for system administrators who are responsible for installing the Solaris OS. These procedures are advanced Solaris installation information for enterprise system administrators who manage multiple Solaris machines in a networked environment.\n\n\n\n\n\n\nRequirements\n\n\nTo use this book, you should have 2 or more years of UNIX\u00ae system administration experience. Attending UNIX system administration training courses might be helpful.\n\n\n\n\n\n\n\n\nSolaris Express Installation Guide: Solaris Live Upgrade and Upgrade Planning\n\n\n\n\n\n\n\n\nItem\n\n\nDetails\n\n\n\n\n\n\n\n\n\n\nDocument Link\n\n\nSolaris Express Installation Guide: Solaris Live Upgrade and Upgrade Planning\n\n\n\n\n\n\nTopics\n\n\nThis book describes how to install and upgrade the Solaris\u2122 Operating System (OS) on both networked and non-networked SPARC\u00ae and x86 architecture based systems. This book does not include instructions about how to set up system hardware or other peripherals.\n\n\n\n\n\n\nRelevancy to OpenIndiana Hipster\n\n\nTo be determined\n\n\n\n\n\n\nTarget Audience\n\n\nThis book is intended for system administrators responsible for installing the Solaris OS. This book provides both of the following types of information.\nAdvanced Solaris installation information for enterprise system administrators who manage multiple Solaris machines in a networked environment\nBasic Solaris installation information for system administrators who perform infrequent Solaris upgrades\n\n\n\n\n\n\nRequirements\n\n\nTo use this book, you should have 2 or more years of UNIX\u00ae system administration experience. Attending UNIX system administration training courses might be helpful.\n\n\n\n\n\n\n\n\nSolaris Express Installation Guide: Custom JumpStart and Advanced Installations\n\n\n\n\n\n\n\n\nItem\n\n\nDetails\n\n\n\n\n\n\n\n\n\n\nDocument Link\n\n\nSolaris Express Installation Guide: Custom JumpStart and Advanced Installations\n\n\n\n\n\n\nTopics\n\n\nThis book describes how to install and upgrade the Solaris\u2122 Operating System (OS) on both networked and non-networked SPARC\u00ae and x86 architecture based systems. This book covers using the custom JumpStart installation method and the creation of RAID-1 volumes during installation. This book does not include instructions about how to set up system hardware or other peripherals.\n\n\n\n\n\n\nRelevancy to OpenIndiana Hipster\n\n\nTo be determined\n\n\n\n\n\n\nTarget Audience\n\n\nThis book is intended for system administrators responsible for installing the Solaris OS.\n This book provides both of the following types of information.\nAdvanced Solaris installation information for enterprise system administrators who manage multiple Solaris machines in a networked environment\nBasic Solaris installation information for system administrators who perform infrequent Solaris installations or upgrades\n\n\n\n\n\n\nRequirements\n\n\nTo use this book, you should have 2 or more years of UNIX\u00ae system administration experience. Attending UNIX system administration training courses might be helpful.\n\n\n\n\n\n\n\n\nSolaris Express Package List\n\n\n\n\n\n\n\n\nItem\n\n\nDetails\n\n\n\n\n\n\n\n\n\n\nDocument Link\n\n\nSolaris Express Package List\n\n\n\n\n\n\nTopics\n\n\nThe Solaris Express Package List lists and describes the packages included in the Solaris\u2122 Express Operating System (Solaris OS). The list includes information about the software groups that contain each package.\n\n\n\n\n\n\nRelevancy to OpenIndiana Hipster\n\n\nTo be determined\n\n\n\n\n\n\nTarget Audience\n\n\nThis book is intended for system administrators responsible for installing the Solaris software.\n\n\n\n\n\n\nRequirements\n\n\nTo use this book, you should have 1-2 years of UNIX\u00ae system administration experience. Attending UNIX system administration training courses might be helpful.",
            "title": "Solaris Express Administration"
        },
        {
            "location": "/books/express/#solaris-express-systems-administration",
            "text": "",
            "title": "Solaris Express Systems Administration"
        },
        {
            "location": "/books/express/#solaris-express-developer-edition-whats-new",
            "text": "Item  Details      Document Link  Solaris Express Developer Edition What's New    Topics  Solaris Express Developer Edition What's New summarizes all features in the most current Software Express release.    Relevancy to OpenIndiana Hipster  To be determined    Target Audience  This book provides introductory descriptions of the new Software Express features for users, developers, and system administrators.    Requirements  To use this book, you should have 1-2 years of UNIX\u00ae system administration experience. Attending UNIX system administration training courses might be helpful.",
            "title": "Solaris Express Developer Edition What's New"
        },
        {
            "location": "/books/express/#solaris-express-developer-edition-release-notes",
            "text": "Item  Details      Document Link  Solaris Express Developer Edition Release Notes    Topics  The Solaris Express Developer Edition Release Notes contains installation and runtime problem details. Also included are end-of-software support statements for the Solaris\u2122 Operating System (Solaris OS).    Relevancy to OpenIndiana Hipster  To be determined    Target Audience  These notes are for users and system administrators who install and use the Solaris Operating System.    Requirements  To use this book, you should have 1-2 years of UNIX\u00ae system administration experience. Attending UNIX system administration training courses might be helpful.",
            "title": "Solaris Express Developer Edition Release Notes"
        },
        {
            "location": "/books/express/#solaris-express-installation-guide-planning-for-installation-and-upgrade",
            "text": "Item  Details      Document Link  Solaris Express Installation Guide: Planning for Installation and Upgrade    Topics  This book describes planning your installation or upgrade with the Solaris\u2122 Operating System (OS) on both networked and non-networked SPARC\u00ae and x86 architecture based systems. This book also provides overviews of several technologies that relate to installation such as Solaris Zones, GRUB based booting, and the creation of RAID-1 volumes during installation. This book does not include instructions about how to set up system hardware or other peripherals.    Relevancy to OpenIndiana Hipster  To be determined    Target Audience  This book is intended for system administrators responsible for installing the Solaris OS.  This book provides both of the following types of information. Advanced Solaris installation planning information for enterprise system administrators who manage multiple Solaris machines in a networked environment Basic Solaris installation planning information for system administrators who perform infrequent Solaris installations or upgrades    Requirements  To use this book, you should have 1-2 years of UNIX\u00ae system administration experience. Attending UNIX system administration training courses might be helpful.",
            "title": "Solaris Express Installation Guide: Planning for Installation and Upgrade"
        },
        {
            "location": "/books/express/#solaris-express-installation-guide-basic-installations",
            "text": "Item  Details      Document Link  Solaris Express Installation Guide: Basic Installations    Topics  This book describes how to use CD or DVD media to install the Solaris\u2122 Operating System (Solaris OS) on a non-networked system. This book does not include instructions about how to set up system hardware or other peripherals.    Relevancy to OpenIndiana Hipster  To be determined    Target Audience  This book is intended for system administrators who are responsible for installing the Solaris OS. This book provides basic Solaris installation information for system administrators who perform infrequent Solaris installations or upgrades.    Requirements  To use this book, you should have 1-2 years of UNIX\u00ae system administration experience. Attending UNIX system administration training courses might be helpful.",
            "title": "Solaris Express Installation Guide: Basic Installations"
        },
        {
            "location": "/books/express/#solaris-express-developer-edition-installation-guide-laptop-installations",
            "text": "Item  Details      Document Link  Solaris Express Developer Edition Installation Guide: Laptop Installations    Topics  This book provides general guidance for installing the Solaris Express Developer Edition on a laptop computer.    Relevancy to OpenIndiana Hipster  To be determined    Target Audience  This book is intended for anyone interested in installing Solaris Express Developer Edition on laptop hardware.    Requirements  To use this book, you should have basic UNIX\u00ae system administration experience. Attending UNIX system administration training courses might be helpful.",
            "title": "Solaris Express Developer Edition Installation Guide: Laptop Installations"
        },
        {
            "location": "/books/express/#solaris-express-installation-guide-network-based-installations",
            "text": "Item  Details      Document Link  Solaris Express Installation Guide: Network-Based Installations    Topics  This book describes how to install the Solaris\u2122 Operating System (Solaris OS) remotely over a local area network or a wide area network. This book does not include instructions about how to set up system hardware or other peripherals.    Relevancy to OpenIndiana Hipster  To be determined    Target Audience  This book is intended for system administrators who are responsible for installing the Solaris software. This book provides advanced Solaris installation information for enterprise system administrators who manage multiple Solaris machines in a networked environment.    Requirements  To use this book, you should have 1-2 years of UNIX\u00ae system administration experience. Attending UNIX system administration training courses might be helpful.",
            "title": "Solaris Express Installation Guide: Network-Based Installations"
        },
        {
            "location": "/books/express/#solaris-express-installation-guide-solaris-flash-archives-creation-and-installation",
            "text": "Item  Details      Document Link  Solaris Express Installation Guide: Solaris Flash Archives (Creation and Installation)    Topics  This book provides planning information and instructions for creating Solaris\u2122 Flash archives and using Solaris Flash archives to install the Solaris Operating System (OS) on multiple systems. This book does not include instructions about how to set up system hardware or other peripherals.    Relevancy to OpenIndiana Hipster  To be determined    Target Audience  This book is intended for system administrators who are responsible for installing the Solaris OS. These procedures are advanced Solaris installation information for enterprise system administrators who manage multiple Solaris machines in a networked environment.    Requirements  To use this book, you should have 2 or more years of UNIX\u00ae system administration experience. Attending UNIX system administration training courses might be helpful.",
            "title": "Solaris Express Installation Guide: Solaris Flash Archives (Creation and Installation)"
        },
        {
            "location": "/books/express/#solaris-express-installation-guide-solaris-live-upgrade-and-upgrade-planning",
            "text": "Item  Details      Document Link  Solaris Express Installation Guide: Solaris Live Upgrade and Upgrade Planning    Topics  This book describes how to install and upgrade the Solaris\u2122 Operating System (OS) on both networked and non-networked SPARC\u00ae and x86 architecture based systems. This book does not include instructions about how to set up system hardware or other peripherals.    Relevancy to OpenIndiana Hipster  To be determined    Target Audience  This book is intended for system administrators responsible for installing the Solaris OS. This book provides both of the following types of information. Advanced Solaris installation information for enterprise system administrators who manage multiple Solaris machines in a networked environment Basic Solaris installation information for system administrators who perform infrequent Solaris upgrades    Requirements  To use this book, you should have 2 or more years of UNIX\u00ae system administration experience. Attending UNIX system administration training courses might be helpful.",
            "title": "Solaris Express Installation Guide: Solaris Live Upgrade and Upgrade Planning"
        },
        {
            "location": "/books/express/#solaris-express-installation-guide-custom-jumpstart-and-advanced-installations",
            "text": "Item  Details      Document Link  Solaris Express Installation Guide: Custom JumpStart and Advanced Installations    Topics  This book describes how to install and upgrade the Solaris\u2122 Operating System (OS) on both networked and non-networked SPARC\u00ae and x86 architecture based systems. This book covers using the custom JumpStart installation method and the creation of RAID-1 volumes during installation. This book does not include instructions about how to set up system hardware or other peripherals.    Relevancy to OpenIndiana Hipster  To be determined    Target Audience  This book is intended for system administrators responsible for installing the Solaris OS.  This book provides both of the following types of information. Advanced Solaris installation information for enterprise system administrators who manage multiple Solaris machines in a networked environment Basic Solaris installation information for system administrators who perform infrequent Solaris installations or upgrades    Requirements  To use this book, you should have 2 or more years of UNIX\u00ae system administration experience. Attending UNIX system administration training courses might be helpful.",
            "title": "Solaris Express Installation Guide: Custom JumpStart and Advanced Installations"
        },
        {
            "location": "/books/express/#solaris-express-package-list",
            "text": "Item  Details      Document Link  Solaris Express Package List    Topics  The Solaris Express Package List lists and describes the packages included in the Solaris\u2122 Express Operating System (Solaris OS). The list includes information about the software groups that contain each package.    Relevancy to OpenIndiana Hipster  To be determined    Target Audience  This book is intended for system administrators responsible for installing the Solaris software.    Requirements  To use this book, you should have 1-2 years of UNIX\u00ae system administration experience. Attending UNIX system administration training courses might be helpful.",
            "title": "Solaris Express Package List"
        },
        {
            "location": "/books/trusted/",
            "text": "Trusted Extensions Systems Administration\n\n\nSolaris Trusted Extensions Installation and Configuration\n\n\n\n\n\n\n\n\nItem\n\n\nDetails\n\n\n\n\n\n\n\n\n\n\nDocument Link\n\n\nSolaris Trusted Extensions Installation and Configuration\n\n\n\n\n\n\nTopics\n\n\nThis book is Obsolete\nDescribes how to plan for, install, and configure Solaris Trusted Extensions for the Solaris 10 11/06 and Solaris 10 8/07 releases of Trusted Extensions.\nThe Solaris Trusted Extensions Installation and Configuration guide provides procedures for configuring Solaris\u2122 Trusted Extensions on the Solaris Operating System. This guide also describes preparing the Solaris system to support a secure installation of Solaris Trusted Extensions.\n\n\n\n\n\n\nRelevancy to OpenIndiana Hipster\n\n\nTo be determined\n\n\n\n\n\n\nTarget Audience\n\n\nAdministrators, developers\nThis book is for knowledgeable system administrators and security administrators who are installing Trusted Extensions software. The level of trust that is required by your site security policy, and your level of expertise, determines who can perform the configuration tasks.\n\n\n\n\n\n\nRequirements\n\n\nSuccessfully configuring Trusted Extensions on a system in a way that is consistent with site security requires understanding the security features of Trusted Extensions and your site security policy. Before you install the Solaris Trusted Extensions packages, read \nChapter 1, Security Planning for Trusted Extensions\n for information about how to ensure site security when configuring the software.\n\n\n\n\n\n\n\n\nSolaris Trusted Extensions User's Guide\n\n\n\n\n\n\n\n\nItem\n\n\nDetails\n\n\n\n\n\n\n\n\n\n\nDocument Link\n\n\nSolaris Trusted Extensions User's Guide\n\n\n\n\n\n\nTopics\n\n\nDescribes the basic features of Solaris Trusted Extensions.\nThis book contains a glossary.\nThe Solaris Trusted Extensions User's Guide is a guide to working in the Solaris\u2122 Operating System (Solaris OS) with Solaris Trusted Extensions installed.\n\n\n\n\n\n\nRelevancy to OpenIndiana Hipster\n\n\nTo be determined\n\n\n\n\n\n\nTarget Audience\n\n\nThis book is for all users of Trusted Extensions (End users, administrators, developers).\n\n\n\n\n\n\nRequirements\n\n\nAs a prerequisite, you must be familiar with the Solaris OS and one of the following desktops:\nCommon Desktop Environment (CDE)\nThe open source GNOME desktop\nSun Java\u2122 Desktop System\n You must also be familiar with the security policy of your organization.\n\n\n\n\n\n\n\n\nSolaris Trusted Extensions Administrator's Procedures\n\n\n\n\n\n\n\n\nItem\n\n\nDetails\n\n\n\n\n\n\n\n\n\n\nDocument Link\n\n\nSolaris Trusted Extensions Administrator's Procedures\n\n\n\n\n\n\nTopics\n\n\nFor this release, Part I describes how to prepare for, enable, and initially configure Trusted Extensions.\nPart I replaces Solaris Trusted Extensions Installation and Configuration.\nPart II describes how to administer a Trusted Extensions system.\nThis book contains a glossary.\nSystem installation, configuration, and administration that is specific to Solaris Trusted Extensions\n\n\n\n\n\n\nRelevancy to OpenIndiana Hipster\n\n\nTo be determined\n\n\n\n\n\n\nTarget Audience\n\n\nAdministrators, developers\nThis book is for knowledgeable system administrators and security administrators who are configuring and administering Trusted Extensions software. The level of trust that is required by your site security policy, and your level of expertise, determines who can perform the configuration tasks.\n\n\n\n\n\n\nRequirements\n\n\nAdministrators should be familiar with Solaris administration.\nIn addition, administrators should understand the following:\nThe security features of Trusted Extensions and your site security policy\nBasic concepts and procedures for using a host that is configured with Trusted Extensions, as described in the Solaris Trusted Extensions User\u2019s Guide\nHow administrative tasks are divided among roles at your site\n\n\n\n\n\n\n\n\nSolaris Trusted Extensions Label Administration\n\n\n\n\n\n\n\n\nItem\n\n\nDetails\n\n\n\n\n\n\n\n\n\n\nDocument Link\n\n\nSolaris Trusted Extensions Label Administration\n\n\n\n\n\n\nTopics\n\n\nProvides information about how to specify label components in the label encodings file.\nLabels, clearances, and handling instructions are used to protect information on a system that is configured with Solaris Trusted Extensions software. The components of labels, clearances, and handling instructions are specified in the \nlabel_encodings\n file. This guide provides background for creating or modifying the file. The guide provides examples, and helps you to create and install a \nlabel_encodings\n file that is appropriate for your site.\n\n\n\n\n\n\nRelevancy to OpenIndiana Hipster\n\n\nTo be determined\n\n\n\n\n\n\nTarget Audience\n\n\nAdministrators \nThis book is for security administrators. Security administrators are responsible for defining the organization's labels. Some security administrators are also responsible for implementing the labels. This book is for definers and implementers.\n\n\n\n\n\n\nRequirements\n\n\nThe security administrator who implements the labels should be familiar with Solaris administration. The necessary level of knowledge can be acquired through training and documentation.\n\n\n\n\n\n\n\n\nSolaris Trusted Extensions Transition Guide\n\n\n\n\n\n\n\n\nItem\n\n\nDetails\n\n\n\n\n\n\n\n\n\n\nDocument Link\n\n\nSolaris Trusted Extensions Transition Guide\n\n\n\n\n\n\nTopics\n\n\nThe Solaris Trusted Extensions Transition Guide describes the differences between the Solaris Trusted Extensions release and the following releases: \nThe Trusted Solaris\u2122 8 releases \nThe Solaris\u2122 10 Operating System release\nThe differences include labels, a modified desktop, a modified windowing system, and modified administration tools.\n\n\n\n\n\n\nRelevancy to OpenIndiana Hipster\n\n\nTo be determined\n\n\n\n\n\n\nTarget Audience\n\n\nAll users should find the book useful. The Solaris Trusted Extensions Transition Guide is designed for users who are familiar with Trusted Solaris releases and with the Solaris OS. This book enables these users to more easily use systems that are configured with Solaris Trusted Extensions.\n\n\n\n\n\n\nRequirements\n\n\nTo be determined",
            "title": "Trusted Extensions Administration"
        },
        {
            "location": "/books/trusted/#trusted-extensions-systems-administration",
            "text": "",
            "title": "Trusted Extensions Systems Administration"
        },
        {
            "location": "/books/trusted/#solaris-trusted-extensions-installation-and-configuration",
            "text": "Item  Details      Document Link  Solaris Trusted Extensions Installation and Configuration    Topics  This book is Obsolete Describes how to plan for, install, and configure Solaris Trusted Extensions for the Solaris 10 11/06 and Solaris 10 8/07 releases of Trusted Extensions. The Solaris Trusted Extensions Installation and Configuration guide provides procedures for configuring Solaris\u2122 Trusted Extensions on the Solaris Operating System. This guide also describes preparing the Solaris system to support a secure installation of Solaris Trusted Extensions.    Relevancy to OpenIndiana Hipster  To be determined    Target Audience  Administrators, developers This book is for knowledgeable system administrators and security administrators who are installing Trusted Extensions software. The level of trust that is required by your site security policy, and your level of expertise, determines who can perform the configuration tasks.    Requirements  Successfully configuring Trusted Extensions on a system in a way that is consistent with site security requires understanding the security features of Trusted Extensions and your site security policy. Before you install the Solaris Trusted Extensions packages, read  Chapter 1, Security Planning for Trusted Extensions  for information about how to ensure site security when configuring the software.",
            "title": "Solaris Trusted Extensions Installation and Configuration"
        },
        {
            "location": "/books/trusted/#solaris-trusted-extensions-users-guide",
            "text": "Item  Details      Document Link  Solaris Trusted Extensions User's Guide    Topics  Describes the basic features of Solaris Trusted Extensions. This book contains a glossary. The Solaris Trusted Extensions User's Guide is a guide to working in the Solaris\u2122 Operating System (Solaris OS) with Solaris Trusted Extensions installed.    Relevancy to OpenIndiana Hipster  To be determined    Target Audience  This book is for all users of Trusted Extensions (End users, administrators, developers).    Requirements  As a prerequisite, you must be familiar with the Solaris OS and one of the following desktops: Common Desktop Environment (CDE) The open source GNOME desktop Sun Java\u2122 Desktop System  You must also be familiar with the security policy of your organization.",
            "title": "Solaris Trusted Extensions User's Guide"
        },
        {
            "location": "/books/trusted/#solaris-trusted-extensions-administrators-procedures",
            "text": "Item  Details      Document Link  Solaris Trusted Extensions Administrator's Procedures    Topics  For this release, Part I describes how to prepare for, enable, and initially configure Trusted Extensions. Part I replaces Solaris Trusted Extensions Installation and Configuration. Part II describes how to administer a Trusted Extensions system. This book contains a glossary. System installation, configuration, and administration that is specific to Solaris Trusted Extensions    Relevancy to OpenIndiana Hipster  To be determined    Target Audience  Administrators, developers This book is for knowledgeable system administrators and security administrators who are configuring and administering Trusted Extensions software. The level of trust that is required by your site security policy, and your level of expertise, determines who can perform the configuration tasks.    Requirements  Administrators should be familiar with Solaris administration. In addition, administrators should understand the following: The security features of Trusted Extensions and your site security policy Basic concepts and procedures for using a host that is configured with Trusted Extensions, as described in the Solaris Trusted Extensions User\u2019s Guide How administrative tasks are divided among roles at your site",
            "title": "Solaris Trusted Extensions Administrator's Procedures"
        },
        {
            "location": "/books/trusted/#solaris-trusted-extensions-label-administration",
            "text": "Item  Details      Document Link  Solaris Trusted Extensions Label Administration    Topics  Provides information about how to specify label components in the label encodings file. Labels, clearances, and handling instructions are used to protect information on a system that is configured with Solaris Trusted Extensions software. The components of labels, clearances, and handling instructions are specified in the  label_encodings  file. This guide provides background for creating or modifying the file. The guide provides examples, and helps you to create and install a  label_encodings  file that is appropriate for your site.    Relevancy to OpenIndiana Hipster  To be determined    Target Audience  Administrators  This book is for security administrators. Security administrators are responsible for defining the organization's labels. Some security administrators are also responsible for implementing the labels. This book is for definers and implementers.    Requirements  The security administrator who implements the labels should be familiar with Solaris administration. The necessary level of knowledge can be acquired through training and documentation.",
            "title": "Solaris Trusted Extensions Label Administration"
        },
        {
            "location": "/books/trusted/#solaris-trusted-extensions-transition-guide",
            "text": "Item  Details      Document Link  Solaris Trusted Extensions Transition Guide    Topics  The Solaris Trusted Extensions Transition Guide describes the differences between the Solaris Trusted Extensions release and the following releases:  The Trusted Solaris\u2122 8 releases  The Solaris\u2122 10 Operating System release The differences include labels, a modified desktop, a modified windowing system, and modified administration tools.    Relevancy to OpenIndiana Hipster  To be determined    Target Audience  All users should find the book useful. The Solaris Trusted Extensions Transition Guide is designed for users who are familiar with Trusted Solaris releases and with the Solaris OS. This book enables these users to more easily use systems that are configured with Solaris Trusted Extensions.    Requirements  To be determined",
            "title": "Solaris Trusted Extensions Transition Guide"
        },
        {
            "location": "/books/develop/",
            "text": "Development\n\n\nSolaris Dynamic Tracing Guide\n\n\n\n\n\n\n\n\nItem\n\n\nDetails\n\n\n\n\n\n\n\n\n\n\nDocument Link\n\n\nSolaris Dynamic Tracing Guide\n\n\n\n\n\n\nTopics\n\n\nDTrace is a comprehensive dynamic tracing framework for the Solaris\u2122 Operating System. DTrace provides a powerful infrastructure to permit administrators, developers, and service personnel to concisely answer arbitrary questions about the behavior of the operating system and user programs.\nThe Solaris Dynamic Tracing Guide describes how to use DTrace to observe, debug, and tune system behavior. This book also includes a complete reference for bundled DTrace observability tools and the \nD\n programming language.\n\n\n\n\n\n\nRelevancy to OpenIndiana Hipster\n\n\nTo be determined\n\n\n\n\n\n\nTarget Audience\n\n\nIf you have ever wanted to understand the behavior of your system, DTrace is the tool for you. DTrace is a comprehensive dynamic tracing facility that is built into Solaris. The DTrace facility can be used to examine the behavior of user programs. The DTrace facility can also be used to examine the behavior of the operating system.\nDTrace can be used by system administrators or application developers, and is suitable for use with live production systems. DTrace will allow you to explore your system to understand how it works, track down performance problems across many layers of software, or locate the cause of aberrant behavior. \nAs you'll see, DTrace lets you create your own custom programs to dynamically instrument the system and provide immediate, concise answers to arbitrary questions you can formulate using the DTrace \nD\n programming language. \nDTrace allows all Solaris users to:\nDynamically enable and manage thousands of probes\nDynamically associate logical predicates and actions with probes\nDynamically manage trace buffers and buffer policies\nDisplay and examine trace data from the live system or a crash dump\nDTrace allows Solaris developers and administrators to:\nImplement custom scripts that use the DTrace facility\nImplement layered tools that use DTrace to retrieve trace data\n\n\n\n\n\n\nRequirements\n\n\nBasic familiarity with a programming language such as \nC\n or a scripting language such as \nawk(1)\n or \nperl(1)\n will help you learn DTrace and the \nD\n programming language faster, but you need not be an expert in any of these areas. If you have never written a program or script before in any language, Related Information provides references to other documents you might find useful.\n\n\n\n\n\n\n\n\n \nNOTE:\n\n\n\nUpdated by the illumos project, this title is available in a more recent version:\n\nDynamic Tracing Guide\n\n\n\n\nSolaris Modular Debugger Guide\n\n\n\n\n\n\n\n\nItem\n\n\nDetails\n\n\n\n\n\n\n\n\n\n\nDocument Link\n\n\nSolaris Modular Debugger Guide\n\n\n\n\n\n\nTopics\n\n\nThe Modular Debugger (MDB) is a highly extensible, general purpose debugging tool for the Solaris\u2122 Operating System (Solaris OS). The Solaris Modular Debugger Guide describes how to use MDB to debug complex software systems, with a particular emphasis on the facilities available for debugging the Solaris kernel and associated device drivers and modules. It also includes a complete reference for and discussion of the MDB language syntax, debugger features, and MDB Module Programming API.\n\n\n\n\n\n\nRelevancy to OpenIndiana Hipster\n\n\nTo be determined\n\n\n\n\n\n\nTarget Audience\n\n\nIf you were a detective and were investigating at the scene of a crime, you might interview the witnesses and ask them to describe what happened and who they saw. However, if there were no witnesses or these descriptions proved insufficient, you might consider collecting fingerprints and forensic evidence that could be examined for DNA to help solve the case.\nOften, software program failures divide into analogous categories: problems that can be solved with source-level debugging tools, and problems that require low-level debugging facilities, examination of core files, and knowledge of assembly language to diagnose and correct.\nMDB facilitates analysis of this second class of problems.\nMDB is most useful when you are programming a complex low-level software system such as an operating system. The MDB debugging framework allows you to construct your own custom analysis tools to aid in the diagnosis of these low-level problems. MDB also provides a powerful set of built-in commands that enable you to analyze the state of your program at the assembly language level.\n\n\n\n\n\n\nRequirements\n\n\nFamiliarity with assembly language programming and debugging\n\n\n\n\n\n\n\n\n \nNOTE:\n\n\n\nUpdated by the illumos project, this title is available in a more recent version:\n\nModular Debugger Guide\n\n\n\n\nDevice Driver Tutorial\n\n\n\n\n\n\n\n\nItem\n\n\nDetails\n\n\n\n\n\n\n\n\n\n\nDocument Link\n\n\nDevice Driver Tutorial\n\n\n\n\n\n\nTopics\n\n\nThis Device Driver Tutorial is a hands-on guide that shows you how to develop a simple device driver for the Solaris\u2122 Operating System (Solaris OS). Device Driver Tutorial also explains how device drivers work in the Solaris OS. This book is a companion to \nWriting Device Drivers\n.\nWriting Device Drivers\n is a thorough reference document that discusses many types of devices and drivers. Device Driver Tutorial examines complete drivers but does not provide a comprehensive treatment of all driver types. Device Driver Tutorial often points to Writing Device Drivers and other content for further information.\n\n\n\n\n\n\nRelevancy to OpenIndiana Hipster\n\n\nTo be determined\n\n\n\n\n\n\nTarget Audience\n\n\nYou should read this tutorial if you need to develop, install, and configure device drivers for the Solaris OS. You also should read this book if you need to maintain existing drivers or add new functionality to existing Solaris OS drivers. Information about the kernel provided in this book also will help you troubleshoot any problems you might encounter installing or configuring Solaris systems.\n\n\n\n\n\n\nRequirements\n\n\nTo write device drivers for the Solaris OS, you should have the following background:\nBe a confident C programmer\nHave experience with data structures, especially with linked lists\nUnderstand bit operations\nUnderstand indirect function calls\nUnderstand caching\nUnderstand multi-threading (see the Multi-threaded Programming Guide)\nBe familiar with a UNIX\u00ae shell\nUnderstand the basics of UNIX system and I/O architecture\nThe most important information you need to have to write a device driver are the characteristics of the device. Get a detailed specification for the device you want to drive.\nExperience with Solaris OS compilers, debuggers, and other tools will be very helpful to you. You also need to understand where the file system fits with the kernel and the application layer. These topics are discussed in this tutorial.\n\n\n\n\n\n\n\n\nWriting Device Drivers\n\n\n\n\n\n\n\n\nItem\n\n\nDetails\n\n\n\n\n\n\n\n\n\n\nDocument Link\n\n\nWriting Device Drivers\n\n\n\n\n\n\nTopics\n\n\nWriting Device Drivers provides information on developing drivers for:\ncharacter-oriented devices\nblock-oriented devices\nnetwork devices\nSCSI target and HBA devices\nUSB devices\nThis book discusses how to develop multi-threaded reentrant device drivers for all architectures that conform to the Solaris OS DDI/DKI (Device Driver Interface, Driver-Kernel Interface). A common driver programming approach is described that enables drivers to be written without concern for platform-specific issues such as endianness and data ordering.\nAdditional topics include:\nhardening Solaris drivers\npower management\ndriver auto-configuration\nprogrammed I/O; Direct Memory Access (DMA)\ndevice context management\ncompilation\ninstallation\nand testing drivers\ndebugging driver\nporting Solaris drivers to a 64-bit environment\n\n\n\n\n\n\nRelevancy to OpenIndiana Hipster\n\n\nTo be determined\n\n\n\n\n\n\nTarget Audience\n\n\nThis book is written for UNIX\u00ae programmers who are familiar with UNIX device drivers. Overview information is provided, but the book is not intended to serve as a general tutorial on device drivers.\n\n\n\n\n\n\nRequirements\n\n\nTo be determined\n\n\n\n\n\n\n\n\n \nNOTE:\n\n\n\nUpdated by the illumos project, this title is available in a more recent version:\n\nWriting Device Drivers\n\n\n\n\nApplication Packaging Developer's Guide\n\n\n\n\n\n\n\n\nItem\n\n\nDetails\n\n\n\n\n\n\n\n\n\n\nDocument Link\n\n\nApplication Packaging Developer's Guide\n\n\n\n\n\n\nTopics\n\n\nThe Application Packaging Developers Guide provides step-by-step instructions and relevant background information for designing, building, and verifying packages. This guide also includes advanced techniques that you might find helpful during the package creation process.\n\n\n\n\n\n\nRelevancy to OpenIndiana Hipster\n\n\nTo be determined\n\n\n\n\n\n\nTarget Audience\n\n\nThis book is intended for application developers whose responsibilities include designing and building packages. Though much of the book is directed towards novice package developers, it also contains information useful to more experienced package developers.\n\n\n\n\n\n\nRequirements\n\n\nTo be determined\n\n\n\n\n\n\n\n\nOpenSolaris Distribution Constructor Guide\n\n\n\n\n\n\n\n\nItem\n\n\nDetails\n\n\n\n\n\n\n\n\n\n\nDocument Link\n\n\nOpenSolaris Distribution Constructor Guide\n\n\n\n\n\n\nTopics\n\n\nThe distribution constructor is a tool that application developers can use to build their own custom OpenSolaris\u2122 image which they can then distribute to their contacts and customers.\n\n\n\n\n\n\nRelevancy to OpenIndiana Hipster\n\n\nTo be determined\n\n\n\n\n\n\nTarget Audience\n\n\nTo be determined\n\n\n\n\n\n\nRequirements\n\n\nTo be determined\n\n\n\n\n\n\n\n\nMemory and Thread Placement Optimization Developer's Guide\n\n\n\n\n\n\n\n\nItem\n\n\nDetails\n\n\n\n\n\n\n\n\n\n\nDocument Link\n\n\nMemory and Thread Placement Optimization Developer's Guide\n\n\n\n\n\n\nTopics\n\n\nThe Memory and Thread Placement Optimization Developer's Guide provides information on locality groups and the technologies that are available to optimize the use of computing resources in the Solaris operating system.\n\n\n\n\n\n\nRelevancy to OpenIndiana Hipster\n\n\nTo be determined\n\n\n\n\n\n\nTarget Audience\n\n\nThis book is intended for use by developers who are writing applications in an environment with multiple CPUs and a non-uniform memory architecture. The programming interfaces and tools that are described in this book give the developer control over the system's behavior and resource allocation.\n\n\n\n\n\n\nRequirements\n\n\nTo be determined\n\n\n\n\n\n\n\n\n \nNOTE:\n\n\n\nUpdated by the illumos project, this title is available in a more recent version:\n\nMemory and Thread Placement Optimization Developer's Guide\n\n\n\n\nSolaris Containers: Resource Management and Solaris Zones Developer's Guide\n\n\n\n\n\n\n\n\nItem\n\n\nDetails\n\n\n\n\n\n\n\n\n\n\nDocument Link\n\n\nSolaris Containers: Resource Management and Solaris Zones Developer's Guide\n\n\n\n\n\n\nTopics\n\n\nThe Solaris Containers: Resource Management and Solaris Zones Developer's Guide describes how to write applications that partition and manage system resources and discusses which APIs to use. This book provides programming examples and a discussion of programming issues to consider when writing an application.\n\n\n\n\n\n\nRelevancy to OpenIndiana Hipster\n\n\nTo be determined\n\n\n\n\n\n\nTarget Audience\n\n\nThis book is for application developers and ISVs who write applications that control or monitor the Solaris Operating System resources.\n\n\n\n\n\n\nRequirements\n\n\nTo be determined\n\n\n\n\n\n\n\n\nSolaris Trusted Extensions Developer's Guide\n\n\n\n\n\n\n\n\nItem\n\n\nDetails\n\n\n\n\n\n\n\n\n\n\nDocument Link\n\n\nSolaris Trusted Extensions Developer's Guide\n\n\n\n\n\n\nTopics\n\n\nDescribes how to develop applications with Solaris Trusted Extensions. \nThe Solaris Trusted Extensions Developer's Guide describes how to use the application programming interfaces (APIs) to write new trusted applications for systems that are configured with the Solaris\u2122 Trusted Extensions software.\n\n\n\n\n\n\nRelevancy to OpenIndiana Hipster\n\n\nTo be determined\n\n\n\n\n\n\nTarget Audience\n\n\nDevelopers, administrators\n\n\n\n\n\n\nRequirements\n\n\nReaders must be familiar with UNIX\u00ae programming and understand security policy concepts.",
            "title": "Development Titles"
        },
        {
            "location": "/books/develop/#development",
            "text": "",
            "title": "Development"
        },
        {
            "location": "/books/develop/#solaris-dynamic-tracing-guide",
            "text": "Item  Details      Document Link  Solaris Dynamic Tracing Guide    Topics  DTrace is a comprehensive dynamic tracing framework for the Solaris\u2122 Operating System. DTrace provides a powerful infrastructure to permit administrators, developers, and service personnel to concisely answer arbitrary questions about the behavior of the operating system and user programs. The Solaris Dynamic Tracing Guide describes how to use DTrace to observe, debug, and tune system behavior. This book also includes a complete reference for bundled DTrace observability tools and the  D  programming language.    Relevancy to OpenIndiana Hipster  To be determined    Target Audience  If you have ever wanted to understand the behavior of your system, DTrace is the tool for you. DTrace is a comprehensive dynamic tracing facility that is built into Solaris. The DTrace facility can be used to examine the behavior of user programs. The DTrace facility can also be used to examine the behavior of the operating system. DTrace can be used by system administrators or application developers, and is suitable for use with live production systems. DTrace will allow you to explore your system to understand how it works, track down performance problems across many layers of software, or locate the cause of aberrant behavior.  As you'll see, DTrace lets you create your own custom programs to dynamically instrument the system and provide immediate, concise answers to arbitrary questions you can formulate using the DTrace  D  programming language.  DTrace allows all Solaris users to: Dynamically enable and manage thousands of probes Dynamically associate logical predicates and actions with probes Dynamically manage trace buffers and buffer policies Display and examine trace data from the live system or a crash dump DTrace allows Solaris developers and administrators to: Implement custom scripts that use the DTrace facility Implement layered tools that use DTrace to retrieve trace data    Requirements  Basic familiarity with a programming language such as  C  or a scripting language such as  awk(1)  or  perl(1)  will help you learn DTrace and the  D  programming language faster, but you need not be an expert in any of these areas. If you have never written a program or script before in any language, Related Information provides references to other documents you might find useful.       NOTE:  \nUpdated by the illumos project, this title is available in a more recent version: Dynamic Tracing Guide",
            "title": "Solaris Dynamic Tracing Guide"
        },
        {
            "location": "/books/develop/#solaris-modular-debugger-guide",
            "text": "Item  Details      Document Link  Solaris Modular Debugger Guide    Topics  The Modular Debugger (MDB) is a highly extensible, general purpose debugging tool for the Solaris\u2122 Operating System (Solaris OS). The Solaris Modular Debugger Guide describes how to use MDB to debug complex software systems, with a particular emphasis on the facilities available for debugging the Solaris kernel and associated device drivers and modules. It also includes a complete reference for and discussion of the MDB language syntax, debugger features, and MDB Module Programming API.    Relevancy to OpenIndiana Hipster  To be determined    Target Audience  If you were a detective and were investigating at the scene of a crime, you might interview the witnesses and ask them to describe what happened and who they saw. However, if there were no witnesses or these descriptions proved insufficient, you might consider collecting fingerprints and forensic evidence that could be examined for DNA to help solve the case. Often, software program failures divide into analogous categories: problems that can be solved with source-level debugging tools, and problems that require low-level debugging facilities, examination of core files, and knowledge of assembly language to diagnose and correct. MDB facilitates analysis of this second class of problems. MDB is most useful when you are programming a complex low-level software system such as an operating system. The MDB debugging framework allows you to construct your own custom analysis tools to aid in the diagnosis of these low-level problems. MDB also provides a powerful set of built-in commands that enable you to analyze the state of your program at the assembly language level.    Requirements  Familiarity with assembly language programming and debugging       NOTE:  \nUpdated by the illumos project, this title is available in a more recent version: Modular Debugger Guide",
            "title": "Solaris Modular Debugger Guide"
        },
        {
            "location": "/books/develop/#device-driver-tutorial",
            "text": "Item  Details      Document Link  Device Driver Tutorial    Topics  This Device Driver Tutorial is a hands-on guide that shows you how to develop a simple device driver for the Solaris\u2122 Operating System (Solaris OS). Device Driver Tutorial also explains how device drivers work in the Solaris OS. This book is a companion to  Writing Device Drivers . Writing Device Drivers  is a thorough reference document that discusses many types of devices and drivers. Device Driver Tutorial examines complete drivers but does not provide a comprehensive treatment of all driver types. Device Driver Tutorial often points to Writing Device Drivers and other content for further information.    Relevancy to OpenIndiana Hipster  To be determined    Target Audience  You should read this tutorial if you need to develop, install, and configure device drivers for the Solaris OS. You also should read this book if you need to maintain existing drivers or add new functionality to existing Solaris OS drivers. Information about the kernel provided in this book also will help you troubleshoot any problems you might encounter installing or configuring Solaris systems.    Requirements  To write device drivers for the Solaris OS, you should have the following background: Be a confident C programmer Have experience with data structures, especially with linked lists Understand bit operations Understand indirect function calls Understand caching Understand multi-threading (see the Multi-threaded Programming Guide) Be familiar with a UNIX\u00ae shell Understand the basics of UNIX system and I/O architecture The most important information you need to have to write a device driver are the characteristics of the device. Get a detailed specification for the device you want to drive. Experience with Solaris OS compilers, debuggers, and other tools will be very helpful to you. You also need to understand where the file system fits with the kernel and the application layer. These topics are discussed in this tutorial.",
            "title": "Device Driver Tutorial"
        },
        {
            "location": "/books/develop/#writing-device-drivers",
            "text": "Item  Details      Document Link  Writing Device Drivers    Topics  Writing Device Drivers provides information on developing drivers for: character-oriented devices block-oriented devices network devices SCSI target and HBA devices USB devices This book discusses how to develop multi-threaded reentrant device drivers for all architectures that conform to the Solaris OS DDI/DKI (Device Driver Interface, Driver-Kernel Interface). A common driver programming approach is described that enables drivers to be written without concern for platform-specific issues such as endianness and data ordering. Additional topics include: hardening Solaris drivers power management driver auto-configuration programmed I/O; Direct Memory Access (DMA) device context management compilation installation and testing drivers debugging driver porting Solaris drivers to a 64-bit environment    Relevancy to OpenIndiana Hipster  To be determined    Target Audience  This book is written for UNIX\u00ae programmers who are familiar with UNIX device drivers. Overview information is provided, but the book is not intended to serve as a general tutorial on device drivers.    Requirements  To be determined       NOTE:  \nUpdated by the illumos project, this title is available in a more recent version: Writing Device Drivers",
            "title": "Writing Device Drivers"
        },
        {
            "location": "/books/develop/#application-packaging-developers-guide",
            "text": "Item  Details      Document Link  Application Packaging Developer's Guide    Topics  The Application Packaging Developers Guide provides step-by-step instructions and relevant background information for designing, building, and verifying packages. This guide also includes advanced techniques that you might find helpful during the package creation process.    Relevancy to OpenIndiana Hipster  To be determined    Target Audience  This book is intended for application developers whose responsibilities include designing and building packages. Though much of the book is directed towards novice package developers, it also contains information useful to more experienced package developers.    Requirements  To be determined",
            "title": "Application Packaging Developer's Guide"
        },
        {
            "location": "/books/develop/#opensolaris-distribution-constructor-guide",
            "text": "Item  Details      Document Link  OpenSolaris Distribution Constructor Guide    Topics  The distribution constructor is a tool that application developers can use to build their own custom OpenSolaris\u2122 image which they can then distribute to their contacts and customers.    Relevancy to OpenIndiana Hipster  To be determined    Target Audience  To be determined    Requirements  To be determined",
            "title": "OpenSolaris Distribution Constructor Guide"
        },
        {
            "location": "/books/develop/#memory-and-thread-placement-optimization-developers-guide",
            "text": "Item  Details      Document Link  Memory and Thread Placement Optimization Developer's Guide    Topics  The Memory and Thread Placement Optimization Developer's Guide provides information on locality groups and the technologies that are available to optimize the use of computing resources in the Solaris operating system.    Relevancy to OpenIndiana Hipster  To be determined    Target Audience  This book is intended for use by developers who are writing applications in an environment with multiple CPUs and a non-uniform memory architecture. The programming interfaces and tools that are described in this book give the developer control over the system's behavior and resource allocation.    Requirements  To be determined       NOTE:  \nUpdated by the illumos project, this title is available in a more recent version: Memory and Thread Placement Optimization Developer's Guide",
            "title": "Memory and Thread Placement Optimization Developer's Guide"
        },
        {
            "location": "/books/develop/#solaris-containers-resource-management-and-solaris-zones-developers-guide",
            "text": "Item  Details      Document Link  Solaris Containers: Resource Management and Solaris Zones Developer's Guide    Topics  The Solaris Containers: Resource Management and Solaris Zones Developer's Guide describes how to write applications that partition and manage system resources and discusses which APIs to use. This book provides programming examples and a discussion of programming issues to consider when writing an application.    Relevancy to OpenIndiana Hipster  To be determined    Target Audience  This book is for application developers and ISVs who write applications that control or monitor the Solaris Operating System resources.    Requirements  To be determined",
            "title": "Solaris Containers: Resource Management and Solaris Zones Developer's Guide"
        },
        {
            "location": "/books/develop/#solaris-trusted-extensions-developers-guide",
            "text": "Item  Details      Document Link  Solaris Trusted Extensions Developer's Guide    Topics  Describes how to develop applications with Solaris Trusted Extensions.  The Solaris Trusted Extensions Developer's Guide describes how to use the application programming interfaces (APIs) to write new trusted applications for systems that are configured with the Solaris\u2122 Trusted Extensions software.    Relevancy to OpenIndiana Hipster  To be determined    Target Audience  Developers, administrators    Requirements  Readers must be familiar with UNIX\u00ae programming and understand security policy concepts.",
            "title": "Solaris Trusted Extensions Developer's Guide"
        },
        {
            "location": "/contrib/content/",
            "text": "OpenIndiana Content Creation\n\n\n \nNOTE:\n\n\n\n\nWhy Fresh Website Content is so Important\n\n\nGood docs and a steady stream of fresh website content inspires confidence in the project.\nThese things show the project is alive and thriving.\nHere are a couple of end user quotes which serve as a reminder.\n\n\nA User Comment Posted to the OI Wiki in 2011\n\n\n\n\nDocumentation such as a manual is essential in not just learning from, it tells everyone where the product is in the scheme of things.\nReferring to Oracle for documentation relating to OI just makes one have less confidence with OI itself.\nLook at the FreeBSD site documentation levels are really good and gives people confidence to try FreeBSD and its derivatives.\n\n\n\n\nA User Comment Posted to the FreeBSD Forum in 2013\n\n\n\n\nFreeBSD has been around almost as long as Unix itself existed (not entirely true, but you get the idea) and same can be said for Solaris as it was.\nYet the OpenSolaris group basically still has to prove themselves.\nFor all I know (from a commercial point of view) they could be gone next month.\nThat makes it a liability, especially in comparison to Sun being out of the picture and the love/hate relationship with Oracle.\n\n\n\n\nThe goal of this page is to inspire you to contribute to the OpenIndiana Project by assisting with content creation.\n\n\n\n\nContributing doesn't mean you need to get involved in anything major.\n\n\nStart small and only later consider taking on something larger.\n\n\nYour contribution does not have to be confined to the OpenIndiana Docs website.\n\n\nAny and all contributions which help further the development and promotion of OpenIndiana are welcome.\n\n\n\n\n\n\n\nHow to get started\n\n\n\n\nBegin by reading the \nGetting Started\n page.\n\n\nThen have a look at the \nContributor Style Guide\n.\n\n\nAs needed, reference the \nMarkdown Syntax Guide\n to help you along the way.\n\n\n\n\nWhen you are ready to begin contributing, pick a doc and then:\n\n\n\n\nAdd additional sectional placeholders.\n\n\nAdd in some TODO's.\n\n\nAdd some reference materials.\n\n\nAuthor a single section.\n\n\nReview for technical accuracy.\n\n\n\n\nSmaller Works\n\n\n\n\nFAQ maintenance\n\n\nWriting a news story for the OpenIndiana website\n\n\nWriting an episode of Hipster news\n\n\nWriting a task based tutorial.\n\n\n\n\nLarger Works\n\n\n\n\nUser Handbook development\n\n\nDeveloper Handbook development\n\n\nReviewing the OpenSolaris books for technical accuracy and generating errata.\n\n\n\n\nFinding additional ideas and suggestions\n\n\nSee the \nContributor Topics\n page for specific items which need further development.\n\n\nContacting the documentation team\n\n\nTo make a suggestion or report a problem with a document, please make your request by submitting a \nGithub issue\n.\n\n\nThe docs team can be reached via email: \ndocs at openindiana.org\n.\n\n\nYou may also inquire via IRC:\n\n\n\n\n#openindiana (freenode)\n\n\n#oi-dev (freenode)",
            "title": "Content Creation"
        },
        {
            "location": "/contrib/content/#openindiana-content-creation",
            "text": "NOTE:",
            "title": "OpenIndiana Content Creation"
        },
        {
            "location": "/contrib/content/#why-fresh-website-content-is-so-important",
            "text": "Good docs and a steady stream of fresh website content inspires confidence in the project.\nThese things show the project is alive and thriving.\nHere are a couple of end user quotes which serve as a reminder.",
            "title": "Why Fresh Website Content is so Important"
        },
        {
            "location": "/contrib/content/#a-user-comment-posted-to-the-oi-wiki-in-2011",
            "text": "Documentation such as a manual is essential in not just learning from, it tells everyone where the product is in the scheme of things.\nReferring to Oracle for documentation relating to OI just makes one have less confidence with OI itself.\nLook at the FreeBSD site documentation levels are really good and gives people confidence to try FreeBSD and its derivatives.",
            "title": "A User Comment Posted to the OI Wiki in 2011"
        },
        {
            "location": "/contrib/content/#a-user-comment-posted-to-the-freebsd-forum-in-2013",
            "text": "FreeBSD has been around almost as long as Unix itself existed (not entirely true, but you get the idea) and same can be said for Solaris as it was.\nYet the OpenSolaris group basically still has to prove themselves.\nFor all I know (from a commercial point of view) they could be gone next month.\nThat makes it a liability, especially in comparison to Sun being out of the picture and the love/hate relationship with Oracle.   The goal of this page is to inspire you to contribute to the OpenIndiana Project by assisting with content creation.   Contributing doesn't mean you need to get involved in anything major.  Start small and only later consider taking on something larger.  Your contribution does not have to be confined to the OpenIndiana Docs website.  Any and all contributions which help further the development and promotion of OpenIndiana are welcome.",
            "title": "A User Comment Posted to the FreeBSD Forum in 2013"
        },
        {
            "location": "/contrib/content/#how-to-get-started",
            "text": "Begin by reading the  Getting Started  page.  Then have a look at the  Contributor Style Guide .  As needed, reference the  Markdown Syntax Guide  to help you along the way.   When you are ready to begin contributing, pick a doc and then:   Add additional sectional placeholders.  Add in some TODO's.  Add some reference materials.  Author a single section.  Review for technical accuracy.",
            "title": "How to get started"
        },
        {
            "location": "/contrib/content/#smaller-works",
            "text": "FAQ maintenance  Writing a news story for the OpenIndiana website  Writing an episode of Hipster news  Writing a task based tutorial.",
            "title": "Smaller Works"
        },
        {
            "location": "/contrib/content/#larger-works",
            "text": "User Handbook development  Developer Handbook development  Reviewing the OpenSolaris books for technical accuracy and generating errata.",
            "title": "Larger Works"
        },
        {
            "location": "/contrib/content/#finding-additional-ideas-and-suggestions",
            "text": "See the  Contributor Topics  page for specific items which need further development.",
            "title": "Finding additional ideas and suggestions"
        },
        {
            "location": "/contrib/content/#contacting-the-documentation-team",
            "text": "To make a suggestion or report a problem with a document, please make your request by submitting a  Github issue .  The docs team can be reached via email:  docs at openindiana.org .  You may also inquire via IRC:   #openindiana (freenode)  #oi-dev (freenode)",
            "title": "Contacting the documentation team"
        },
        {
            "location": "/contrib/getting-started/",
            "text": "Getting Started with OpenIndiana Docs\n\n\nThe process for contributing to OpenIndiana Docs is simple and follows the same best practices used in the development of the OpenIndiana distribution.\n\n\n \nNOTE:\n\n\n\nFirst and foremost, we understand using development tools and techniques to write end user documentation is not for everyone.\nFor this reason, we're happy to accept your contribution in any format you wish to provide.\n\n\nAfter receiving your submission, we will review the document for conversion to markdown and subsequent incorporation into OpenIndiana Docs.\nContributions may be submitted in plain text, .doc, .docx, .odt, html, xml, latex, pdf, GitHub Gist, etc.\n\n\nIn summary, if you believe your contribution would be helpful to the greater OpenIndiana community, we'll be willing to review it.\nFor further information, please contact us via one of the methods provided below.\n\n\nTo make a suggestion or report a problem with a document, please make your request by submitting a \nGithub issue\n.\n\n\nThe docs team can be reached via email: \ndocs at openindiana.org\n.\n\n\nYou may also inquire via IRC:\n\n\n\n\n#openindiana (freenode)\n\n\n#oi-dev (freenode)\n\n\n\n\n\n\nPrerequisites\n\n\nIf you would like to make a contribution using the development tools, you must\nhave a GitHub account. If you do not already have a GitHub account, sign up for\na \nGithub\n account.\n\n\nInstall and configure Git\n\n\n\n\n\n\n\n\nOperating System\n\n\nCommand\n\n\n\n\n\n\n\n\n\n\nArch\n\n\npacman -S git\n\n\n\n\n\n\nCentos/RHEL\n\n\nyum install git\n\n\n\n\n\n\nDebian/Mint/Ubuntu\n\n\napt-get install git\n\n\n\n\n\n\nFedora\n\n\ndnf install git\n\n\n\n\n\n\nOpenIndiana\n\n\npkg install git\n\n\n\n\n\n\n\n\n \nNOTE:\n\n\n\nAfter GIT is installed, be sure to configure your name and email address.\n\n\nFor further details about configuring GIT, see: \nhttps://help.github.com/articles/set-up-git/\n\n\nAlso, if you need a good tutorial for quickly getting up to speed with GIT, see here: \nhttp://rypress.com/tutorials/git/index\n\n\nFear not though, only basic git commands are required for working with OI-DOCS.\n\n\n\nInstall python-pip\n\n\n\n\n\n\n\n\nOperating System\n\n\nCommand\n\n\n\n\n\n\n\n\n\n\nArch\n\n\npacman -S python-pip\n\n\n\n\n\n\nCentos/RHEL\n\n\nyum install python-pip\n\n\n\n\n\n\nDebian/Mint/Ubuntu\n\n\napt-get install python-pip\n\n\n\n\n\n\nFedora\n\n\nN/A - (Included with Fedora 25)\n\n\n\n\n\n\nOpenIndiana\n\n\nN/A - (Use MkDocs IPS package)\n\n\n\n\n\n\n\n\nInstall rubygems\n\n\n\n\n\n\n\n\nOperating System\n\n\nCommand\n\n\n\n\n\n\n\n\n\n\nArch\n\n\npacman -S ruby\n\n\n\n\n\n\nCentos/RHEL\n\n\nyum install rubygems\n\n\n\n\n\n\nDebian/Mint/Ubuntu\n\n\napt-get install rubgems-integration\n\n\n\n\n\n\nFedora\n\n\ndnf install rubygems\n\n\n\n\n\n\nOpenIndiana\n\n\npkg install ruby\n\n\n\n\n\n\n\n\nInstall mkdocs\n\n\nFor OpenIndiana Hipster, MKDocs and all of it's dependencies have been packaged and are available in the OI Hipster repository.\nSo, if you're already running Hipster, installing MKDocs is as simple as: \npkg install mkdocs\n\n\n\n\nMost other operating systems: \npip install mkdocs mkdocs-bootswatch\n\n\n\n\nAfter MKDocs has been installed, be sure to verify your installation with \nmkdocs --version\n\n\n \nNOTE:\n\n\n\nIf you experience difficulties installing mkdocs, try using the python 3 version of \npip\n.\n\n\nFor example:\n\n\n\n\nFor Linux Mint 18, the python 3 version of \npip\n would be \npip3\n.\n\n\n\n\n\nInstall Markdown Lint (mdl)\n\n\nFor most operating systems:\n\n\n\n\ngem install mdl\n\n\n\n\n \nNOTE:\n\n\n\n\nFor OpenIndiana, you will need to add the Ruby Gem directory path to your $PATH variable.\nTo do so, add the following to your \n.bashrc\n (or similar file if you use a\ndifferent shell):\n\n\nPATH=$PATH:/usr/ruby/2.3/bin/\nexport PATH\n\n\n\n\nTo immediately effect this change, source your \n.bashrc\n as follows:\n\n\nsource ~/.bashrc\n\n\n\n\nTo verify \nmdl\n is now accessible, test using the command: \nwhich mdl\n or alternately: \nmdl --version\n.\n\n\n\n\n\nInstall Markdown plugin for VIM or Emacs(optional)\n\n\n\n\nhttps://github.com/plasticboy/vim-markdown/\n\n\nhttps://www.emacswiki.org/emacs/MarkdownMode\n\n\n\n\nFork the OpenIndiana Docs repository\n\n\n\n\nOpen your web browser to the \nOpenIndiana Docs GitHub Repository\n.\n\n\nClick the \nFork\n button found in the upper right hand corner of the page.\n\n\nForking creates a server side clone of the upstream repository.\n\n\nThis clone is your own personal copy of the OpenIndiana Docs repository.\n\n\n\n\n\n\n\n\nCreate a local clone of your fork\n\n\ngit clone https://github.com/YOUR-USER-NAME/oi-docs.git\n\n\n\n\nThe local clone is where you will perform your work.\nThink of your local clone as your working copy of the repository.\nThe local clone is also where you will commit your changes.\nPeriodically you will push these local changes to your fork residing on Github.\n\n\nAdd the upstream repository\n\n\ncd oi-docs\ngit remote add upstream https://github.com/OpenIndiana/oi-docs.git\n\n\n\n\nVerify things with \ngit remote -v\n\n\nYou should now see:\n\n\norigin  https://github.com/YOUR-USER-NAME/oi-docs.git (fetch)\norigin  https://github.com/YOUR-USER-NAME/oi-docs.git (push)\nupstream        https://github.com/OpenIndiana/oi-docs.git (fetch)\nupstream        https://github.com/OpenIndiana/oi-docs.git (push)\n\n\n\n\nSync and merge changes from the upstream repository\n\n\nPeriodically you will want to \nrebase\n your local copy by bringing in changes from the upstream repository.\nIn plain English, this means the upstream repository is locally registered so you can periodically \npull down\n changes from the upstream master repository and merge them into your local clone.\nThis way your local clone remains in synchronization with the master upstream repository.\nIt is always a good idea to perform a pull from the upstream master repository prior to making changes to your local clone (working copy).\n\n\ngit pull upstream master\n\n\n\n\nOpenIndiana Docs site structure (master branch)\n\n\nAll site development occurs within the master branch.\n\n\noi-docs/\n\u251c\u2500\u2500 docs/\n\u251c\u2500\u2500 link_validator.py\n\u251c\u2500\u2500 markdownlint-rules.rb\n\u251c\u2500\u2500 mkdocs.yml\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 site/\n\n\n\n\n\n\n\n\n\n\nResource\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\noi-docs/\n\n\nsite root folder\n\n\n\n\n\n\ndocs/\n\n\ndocumentation root folder\n\n\n\n\n\n\nlink_validator.py\n\n\nURL validation script\n\n\n\n\n\n\nmarkdownlint-rules.rb\n\n\nMarkdown Lint configuration\n\n\n\n\n\n\nmkdocs.yml\n\n\nSite and menu configuration\n\n\n\n\n\n\nREADME.md\n\n\nGit readme\n\n\n\n\n\n\nsite/\n\n\nLive preview folder (no edits)\n\n\n\n\n\n\n\n\n \nWARNING:\n\n\n\n\n\n\nPlease do \nNOT\n perform any work within the \nsite/\n folder.\n\n\nThis is a temporary folder created by MkDocs when the site is run locally in preview mode.\n\n\n\n\n\n\nAlso, please do \nNOT\n perform any work within the gh-pages branch.\n\n\nThe gh-branch is destroyed and rebuilt each time the site is deployed to GitHub pages.\n\n\n\n\n\n\n\n\n\ndocs/\n\u251c\u2500\u2500 books/\n\u251c\u2500\u2500 contrib/\n\u251c\u2500\u2500 dev/\n\u251c\u2500\u2500 favicon.ico\n\u251c\u2500\u2500 handbook/\n\u251c\u2500\u2500 index.md\n\u251c\u2500\u2500 misc/\n\u251c\u2500\u2500 Openindiana.png\n\u2514\u2500\u2500 retired/\n\n\n\n\n\n\n\n\n\n\nResource\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nbooks/\n\n\nLegacy OpenSolaris Books\n\n\n\n\n\n\ncontrib/\n\n\nContributor guidance docs\n\n\n\n\n\n\ndev/\n\n\nDevelopment oriented docs\n\n\n\n\n\n\nfavicon.ico\n\n\nSite favicon icon\n\n\n\n\n\n\nhandbook/\n\n\nOpenIndiana handbook docs\n\n\n\n\n\n\nindex.md\n\n\nSite front page\n\n\n\n\n\n\nmisc/\n\n\nMiscellaneous docs\n\n\n\n\n\n\nOpenindiana.pgn\n\n\nOpenIndiana project graphic\n\n\n\n\n\n\nretired\n\n\nDeprecated docs, etc.\n\n\n\n\n\n\n\n\nMake some changes\n\n\nOpen your favorite text editor and begin authoring content.\n\n\nFor example: \nvim somefile.md\n or \nemacs somefile.md\n\n\nSome text editors (Atom, VIM, etc.) natively include Markdown syntax highlighting (or offer it as a plugin).\n\n\n \nNOTE:\n\n\n\nMajor changes should be performed within a separate branch, appropriately named to reflect the changes being made.\n\n\n\nFor a list of subject to write about:\n\n\n\n\nSee the site TODO list.\n\n\nHave a look at the site Github issues list.\n\n\nSee the \nTopics\n page for a list of suggestions and TODO's.\n\n\nWrite a new tutorial, or complete a small section of the handbook, etc.\n\n\nConsult with other doc team contributors for even more ideas.\n\n\n\n\nAdding new pages to the site menu\n\n\nSite configuration settings and menus are located in \nmkdocs.yml\n.\nTo add a page to the menu, simply add a line to this file.\nSee the code snippet below for examples.\n\n\n- Docs:\n        - 'OpenIndiana Code of Conduct': misc/conduct.md\n        - 'OpenIndiana FAQ': misc/faq.md\n        - 'OpenIndiana Handbook': handbook/handbook.md\n        - OpenSolaris Books:\n                - 'Book Index': books/index.md\n                - 'Basic Administration': books/basic.md\n                - 'Advanced Administration': books/advanced.md\n                - 'Solaris Express Administration': books/express.md\n                - 'Trusted Extensions Administration': books/trusted.md\n                - 'Development Titles': books/develop.md\n\n\n\n\nVisualize your changes using live preview\n\n\nTo assist with the content authoring process, it may be helpful to visualize your changes using a live preview.\n\n\n\n\nFrom the root of the \noi-docs/\n directory:\n\n\nType: \nmkdocs serve\n and press enter.\n\n\nOpen your web browser to 127.0.0.1:8000.\n\n\n\n\n\n\n\n\nEach time you save your changes, the site page is automatically reloaded within your web browser.\n\n\nTo shut down the live preview web server, use \nCTRL\n + \nC\n.\n\n\n \nNOTE:\n\n\n\nIf you wish to preview your changes on a remotely networked system or on a networked mobile device such as a tablet, the site can also be served on your LAN IP address.\n\n\nTo do so, issue the following command: \nmkdocs serve --dev-addr=0.0.0.0:8000\n\n\n\n\nRunning Markdown Lint (locally)\n\n\nMarkdown Lint is used to check your changes for Markdown syntax errors.\nPrior to submitting a pull request (PR), please consider running Markdown Lint locally on your computer.\n\n\nFrom the root of the \noi-docs/\n directory, execute the following command:\n\n\nmdl -s markdownlint-rules.rb .\n\n\n\n\nMarkdown Lint will automatically traverse the entire folder structure looking for problems.\nAlternately you may also run \nmdl\n on a specific file.\nSimply replace the period (.) with the path to the file.\n\n\n \nNOTE:\n\n\n\nBefore you can run \nmdl\n, it may be necessary to modify your \n$PATH\n variable:\nsee \u201c\nInstall Markdown Lint\n\u201d above.\n\n\n\nEnabling spell checking in vim\n\n\nYou can invoke spell checking in your current session by inputting the command:\n\n\n:set spell spelllang=en_us\n\n\nIf you would like a more permanent solution, enable spell checking in your \n.vimrc\n by adding the line:\n\n\nset spelllang=en_us\n\n\nMisspelled words will now be highlighted (color varies dependent on your .Xresources file)\n\n\nKeyboard shortcuts for spell checking in vim\n\n\n\n\n]s\n to find the previously misspelled word.\n\n\n[s\n to find the next misspelled word.\n\n\nWith the cursor at the beginning of a word, use \nz=\n to bring up a list of suggested replacements.\n\n\nzg\n will add a word to the local dictionary exception file.\n\n\nzw\n is used to mark a word as incorrect.\n\n\n\n\nCommit and push your changes.\n\n\ngit status\ngit add some-file-you-just-edited\ngit commit -m 'your commit message'\ngit push\n\n\n\n\nWhen you make a commit, you are committing those changes locally to your clone.\nWhen you perform a push, your are pushing your commits from your local clone to your fork residing on Github.\n\n\nSend a pull request.\n\n\n\n\nOpen your web browser to \nyour forked copy\n of the OpenIndiana Docs repository.\n\n\n\n\nFor example: \nhttps://github.com/your-user-name/oi-docs\n\n\n\n\nClick the button for \nNew pull request\n.\n\n\nAdd some notes about your change.\n\n\nSubmit your PR (pull request).\n\n\n\n\nPull requests are used to request a \npull in\n of changes from your fork to the master repository.\n\n\n \nNOTE:\n\n\n\nAfter a pull request has been submitted, and for the duration of time your pull request remains open and uncommitted to the OI-DOCS master repository, any additional commits you make to your own fork of the oi-docs repository will automatically be included in your open pull request.\n\n\n\nWhat happens next?\n\n\nAt this point a member of the OpenIndiana Project docs team will review your changes.\nIf no corrections are required, your changes will be accepted and merged into the upstream repository.\n\n\nUpon commit, publishing occurs automatically using Travis-CI.",
            "title": "Getting Started"
        },
        {
            "location": "/contrib/getting-started/#getting-started-with-openindiana-docs",
            "text": "The process for contributing to OpenIndiana Docs is simple and follows the same best practices used in the development of the OpenIndiana distribution.    NOTE:  \nFirst and foremost, we understand using development tools and techniques to write end user documentation is not for everyone.\nFor this reason, we're happy to accept your contribution in any format you wish to provide.  After receiving your submission, we will review the document for conversion to markdown and subsequent incorporation into OpenIndiana Docs.\nContributions may be submitted in plain text, .doc, .docx, .odt, html, xml, latex, pdf, GitHub Gist, etc.  In summary, if you believe your contribution would be helpful to the greater OpenIndiana community, we'll be willing to review it.\nFor further information, please contact us via one of the methods provided below.  To make a suggestion or report a problem with a document, please make your request by submitting a  Github issue .  The docs team can be reached via email:  docs at openindiana.org .  You may also inquire via IRC:   #openindiana (freenode)  #oi-dev (freenode)",
            "title": "Getting Started with OpenIndiana Docs"
        },
        {
            "location": "/contrib/getting-started/#prerequisites",
            "text": "If you would like to make a contribution using the development tools, you must\nhave a GitHub account. If you do not already have a GitHub account, sign up for\na  Github  account.",
            "title": "Prerequisites"
        },
        {
            "location": "/contrib/getting-started/#install-and-configure-git",
            "text": "Operating System  Command      Arch  pacman -S git    Centos/RHEL  yum install git    Debian/Mint/Ubuntu  apt-get install git    Fedora  dnf install git    OpenIndiana  pkg install git       NOTE:  \nAfter GIT is installed, be sure to configure your name and email address.  For further details about configuring GIT, see:  https://help.github.com/articles/set-up-git/  Also, if you need a good tutorial for quickly getting up to speed with GIT, see here:  http://rypress.com/tutorials/git/index  Fear not though, only basic git commands are required for working with OI-DOCS.",
            "title": "Install and configure Git"
        },
        {
            "location": "/contrib/getting-started/#install-python-pip",
            "text": "Operating System  Command      Arch  pacman -S python-pip    Centos/RHEL  yum install python-pip    Debian/Mint/Ubuntu  apt-get install python-pip    Fedora  N/A - (Included with Fedora 25)    OpenIndiana  N/A - (Use MkDocs IPS package)",
            "title": "Install python-pip"
        },
        {
            "location": "/contrib/getting-started/#install-rubygems",
            "text": "Operating System  Command      Arch  pacman -S ruby    Centos/RHEL  yum install rubygems    Debian/Mint/Ubuntu  apt-get install rubgems-integration    Fedora  dnf install rubygems    OpenIndiana  pkg install ruby",
            "title": "Install rubygems"
        },
        {
            "location": "/contrib/getting-started/#install-mkdocs",
            "text": "For OpenIndiana Hipster, MKDocs and all of it's dependencies have been packaged and are available in the OI Hipster repository.\nSo, if you're already running Hipster, installing MKDocs is as simple as:  pkg install mkdocs   Most other operating systems:  pip install mkdocs mkdocs-bootswatch   After MKDocs has been installed, be sure to verify your installation with  mkdocs --version    NOTE:  \nIf you experience difficulties installing mkdocs, try using the python 3 version of  pip .  For example:   For Linux Mint 18, the python 3 version of  pip  would be  pip3 .",
            "title": "Install mkdocs"
        },
        {
            "location": "/contrib/getting-started/#install-markdown-lint-mdl",
            "text": "For most operating systems:   gem install mdl     NOTE:   For OpenIndiana, you will need to add the Ruby Gem directory path to your $PATH variable.\nTo do so, add the following to your  .bashrc  (or similar file if you use a\ndifferent shell):  PATH=$PATH:/usr/ruby/2.3/bin/\nexport PATH  To immediately effect this change, source your  .bashrc  as follows:  source ~/.bashrc  To verify  mdl  is now accessible, test using the command:  which mdl  or alternately:  mdl --version .",
            "title": "Install Markdown Lint (mdl)"
        },
        {
            "location": "/contrib/getting-started/#install-markdown-plugin-for-vim-or-emacsoptional",
            "text": "https://github.com/plasticboy/vim-markdown/  https://www.emacswiki.org/emacs/MarkdownMode",
            "title": "Install Markdown plugin for VIM or Emacs(optional)"
        },
        {
            "location": "/contrib/getting-started/#fork-the-openindiana-docs-repository",
            "text": "Open your web browser to the  OpenIndiana Docs GitHub Repository .  Click the  Fork  button found in the upper right hand corner of the page.  Forking creates a server side clone of the upstream repository.  This clone is your own personal copy of the OpenIndiana Docs repository.",
            "title": "Fork the OpenIndiana Docs repository"
        },
        {
            "location": "/contrib/getting-started/#create-a-local-clone-of-your-fork",
            "text": "git clone https://github.com/YOUR-USER-NAME/oi-docs.git  The local clone is where you will perform your work.\nThink of your local clone as your working copy of the repository.\nThe local clone is also where you will commit your changes.\nPeriodically you will push these local changes to your fork residing on Github.",
            "title": "Create a local clone of your fork"
        },
        {
            "location": "/contrib/getting-started/#add-the-upstream-repository",
            "text": "cd oi-docs\ngit remote add upstream https://github.com/OpenIndiana/oi-docs.git  Verify things with  git remote -v  You should now see:  origin  https://github.com/YOUR-USER-NAME/oi-docs.git (fetch)\norigin  https://github.com/YOUR-USER-NAME/oi-docs.git (push)\nupstream        https://github.com/OpenIndiana/oi-docs.git (fetch)\nupstream        https://github.com/OpenIndiana/oi-docs.git (push)",
            "title": "Add the upstream repository"
        },
        {
            "location": "/contrib/getting-started/#sync-and-merge-changes-from-the-upstream-repository",
            "text": "Periodically you will want to  rebase  your local copy by bringing in changes from the upstream repository.\nIn plain English, this means the upstream repository is locally registered so you can periodically  pull down  changes from the upstream master repository and merge them into your local clone.\nThis way your local clone remains in synchronization with the master upstream repository.\nIt is always a good idea to perform a pull from the upstream master repository prior to making changes to your local clone (working copy).  git pull upstream master",
            "title": "Sync and merge changes from the upstream repository"
        },
        {
            "location": "/contrib/getting-started/#openindiana-docs-site-structure-master-branch",
            "text": "All site development occurs within the master branch.  oi-docs/\n\u251c\u2500\u2500 docs/\n\u251c\u2500\u2500 link_validator.py\n\u251c\u2500\u2500 markdownlint-rules.rb\n\u251c\u2500\u2500 mkdocs.yml\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 site/     Resource  Description      oi-docs/  site root folder    docs/  documentation root folder    link_validator.py  URL validation script    markdownlint-rules.rb  Markdown Lint configuration    mkdocs.yml  Site and menu configuration    README.md  Git readme    site/  Live preview folder (no edits)       WARNING:    Please do  NOT  perform any work within the  site/  folder.  This is a temporary folder created by MkDocs when the site is run locally in preview mode.    Also, please do  NOT  perform any work within the gh-pages branch.  The gh-branch is destroyed and rebuilt each time the site is deployed to GitHub pages.     docs/\n\u251c\u2500\u2500 books/\n\u251c\u2500\u2500 contrib/\n\u251c\u2500\u2500 dev/\n\u251c\u2500\u2500 favicon.ico\n\u251c\u2500\u2500 handbook/\n\u251c\u2500\u2500 index.md\n\u251c\u2500\u2500 misc/\n\u251c\u2500\u2500 Openindiana.png\n\u2514\u2500\u2500 retired/     Resource  Description      books/  Legacy OpenSolaris Books    contrib/  Contributor guidance docs    dev/  Development oriented docs    favicon.ico  Site favicon icon    handbook/  OpenIndiana handbook docs    index.md  Site front page    misc/  Miscellaneous docs    Openindiana.pgn  OpenIndiana project graphic    retired  Deprecated docs, etc.",
            "title": "OpenIndiana Docs site structure (master branch)"
        },
        {
            "location": "/contrib/getting-started/#make-some-changes",
            "text": "Open your favorite text editor and begin authoring content.  For example:  vim somefile.md  or  emacs somefile.md  Some text editors (Atom, VIM, etc.) natively include Markdown syntax highlighting (or offer it as a plugin).    NOTE:  \nMajor changes should be performed within a separate branch, appropriately named to reflect the changes being made.  For a list of subject to write about:   See the site TODO list.  Have a look at the site Github issues list.  See the  Topics  page for a list of suggestions and TODO's.  Write a new tutorial, or complete a small section of the handbook, etc.  Consult with other doc team contributors for even more ideas.",
            "title": "Make some changes"
        },
        {
            "location": "/contrib/getting-started/#adding-new-pages-to-the-site-menu",
            "text": "Site configuration settings and menus are located in  mkdocs.yml .\nTo add a page to the menu, simply add a line to this file.\nSee the code snippet below for examples.  - Docs:\n        - 'OpenIndiana Code of Conduct': misc/conduct.md\n        - 'OpenIndiana FAQ': misc/faq.md\n        - 'OpenIndiana Handbook': handbook/handbook.md\n        - OpenSolaris Books:\n                - 'Book Index': books/index.md\n                - 'Basic Administration': books/basic.md\n                - 'Advanced Administration': books/advanced.md\n                - 'Solaris Express Administration': books/express.md\n                - 'Trusted Extensions Administration': books/trusted.md\n                - 'Development Titles': books/develop.md",
            "title": "Adding new pages to the site menu"
        },
        {
            "location": "/contrib/getting-started/#visualize-your-changes-using-live-preview",
            "text": "To assist with the content authoring process, it may be helpful to visualize your changes using a live preview.   From the root of the  oi-docs/  directory:  Type:  mkdocs serve  and press enter.  Open your web browser to 127.0.0.1:8000.     Each time you save your changes, the site page is automatically reloaded within your web browser.  To shut down the live preview web server, use  CTRL  +  C .    NOTE:  \nIf you wish to preview your changes on a remotely networked system or on a networked mobile device such as a tablet, the site can also be served on your LAN IP address.  To do so, issue the following command:  mkdocs serve --dev-addr=0.0.0.0:8000",
            "title": "Visualize your changes using live preview"
        },
        {
            "location": "/contrib/getting-started/#running-markdown-lint-locally",
            "text": "Markdown Lint is used to check your changes for Markdown syntax errors.\nPrior to submitting a pull request (PR), please consider running Markdown Lint locally on your computer.  From the root of the  oi-docs/  directory, execute the following command:  mdl -s markdownlint-rules.rb .  Markdown Lint will automatically traverse the entire folder structure looking for problems.\nAlternately you may also run  mdl  on a specific file.\nSimply replace the period (.) with the path to the file.    NOTE:  \nBefore you can run  mdl , it may be necessary to modify your  $PATH  variable:\nsee \u201c Install Markdown Lint \u201d above.",
            "title": "Running Markdown Lint (locally)"
        },
        {
            "location": "/contrib/getting-started/#enabling-spell-checking-in-vim",
            "text": "You can invoke spell checking in your current session by inputting the command:  :set spell spelllang=en_us  If you would like a more permanent solution, enable spell checking in your  .vimrc  by adding the line:  set spelllang=en_us  Misspelled words will now be highlighted (color varies dependent on your .Xresources file)",
            "title": "Enabling spell checking in vim"
        },
        {
            "location": "/contrib/getting-started/#keyboard-shortcuts-for-spell-checking-in-vim",
            "text": "]s  to find the previously misspelled word.  [s  to find the next misspelled word.  With the cursor at the beginning of a word, use  z=  to bring up a list of suggested replacements.  zg  will add a word to the local dictionary exception file.  zw  is used to mark a word as incorrect.",
            "title": "Keyboard shortcuts for spell checking in vim"
        },
        {
            "location": "/contrib/getting-started/#commit-and-push-your-changes",
            "text": "git status\ngit add some-file-you-just-edited\ngit commit -m 'your commit message'\ngit push  When you make a commit, you are committing those changes locally to your clone.\nWhen you perform a push, your are pushing your commits from your local clone to your fork residing on Github.",
            "title": "Commit and push your changes."
        },
        {
            "location": "/contrib/getting-started/#send-a-pull-request",
            "text": "Open your web browser to  your forked copy  of the OpenIndiana Docs repository.   For example:  https://github.com/your-user-name/oi-docs   Click the button for  New pull request .  Add some notes about your change.  Submit your PR (pull request).   Pull requests are used to request a  pull in  of changes from your fork to the master repository.    NOTE:  \nAfter a pull request has been submitted, and for the duration of time your pull request remains open and uncommitted to the OI-DOCS master repository, any additional commits you make to your own fork of the oi-docs repository will automatically be included in your open pull request.",
            "title": "Send a pull request."
        },
        {
            "location": "/contrib/getting-started/#what-happens-next",
            "text": "At this point a member of the OpenIndiana Project docs team will review your changes.\nIf no corrections are required, your changes will be accepted and merged into the upstream repository.  Upon commit, publishing occurs automatically using Travis-CI.",
            "title": "What happens next?"
        },
        {
            "location": "/contrib/tools/",
            "text": "Contributor Tools\n\n\nThe OpenIndiana Docs website uses 2 principal technologies and several ancillary technologies:\n\n\nPrincipal technologies:\n\n\n\n\nThe MkDocs content authoring framework.\n\n\nThe Markdown text markup language.\n\n\n\n\nBoth technologies leverage the Python programming language.\n\n\nAncillary technologies:\n\n\n\n\nGitHub - GIT repository hosting\n\n\nGitHub Pages - Website publishing from a GitHub repository\n\n\nGIT - Distributed version control\n\n\nTravis-CI - Continuous Integration toolset\n\n\n\n\nWhy use GIT distributed version control for docs?\n\n\n\n\nIntegrity - You can roll back to previous versions\n\n\nMobility - You can edit docs anywhere, no Internet connection required\n\n\nConsistency - Docs are treated just like code\n\n\n\n\nWhy a text markup based docs framework?\n\n\nThe primary advantage of using a text markup language is:\n\n\n\n\nReadability\n\n\nFlexibility\n\n\n\n\nThe raw code for your authored content is simple plain text.\nNo need for special tools such as WYSIWYG XML editors, etc.\n\n\nWhat is MkDocs?\n\n\nMkDocs is a modern, flexible, and feature rich content authoring framework and static website generator.\nThe python based MkDocs framework publishes content as HTML5.\nIn conjunction with the MkDocs-Pandoc module, content may also be published in the PDF and EPUB formats.\n\n\nUnlike a CMS system where you are restricted to the confines of an integral editor, the OpenIndiana Docs website has no such restriction.\nHere content is authored using a simple text based markup.\nBecause you are working with plain text files, content may be authored using Atom, EMACS, Gedit, Nano, VIM, or any other text editor.\nThe choice is yours; Use your favorite editor.\n\n\nMkDocs system characteristics\n\n\n\n\nEasy to use Markdown syntax.\n\n\nProduces professional quality output.\n\n\nExtensible - accepts plugins.\n\n\n\n\nMkDocs and Markdown informational links\n\n\n\n\n\n\n\n\nURL\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nhttp://www.mkdocs.org/\n\n\nMkDocs Content Authoring Framework\n\n\n\n\n\n\nhttps://pythonhosted.org/Markdown/\n\n\nPython implementation of Markdown\n\n\n\n\n\n\nhttp://spec.commonmark.org/0.25/\n\n\nThe CommonMark Markdown Spec\n\n\n\n\n\n\nhttps://github.com/mivok/markdownlint\n\n\nMarkdown Lint\n\n\n\n\n\n\nhttps://travis-ci.org/\n\n\nContinuous Integration (similar to Jenkins, etc.)\n\n\n\n\n\n\nhttps://pages.github.com/\n\n\nPublish from your github repo\n\n\n\n\n\n\n\n\nThe OpenIndiana Docs GitHub repository\n\n\nThe OpenIndiana Docs repository: \nhttps://github.com/OpenIndiana/oi-docs\n consists of 2 branches:\n\n\n\n\nmaster\n\n\ngh-pages\n\n\n\n\nDevelopment occurs in the master branch.\nThe gh-pages branch is used to publish the site to GitHub pages.\n\n\nDocs site publishing\n\n\nFollowing the best practices of continuous integration, the OpenIndiana Docs website is fully automated using Travis-CI.\nUpon a commit to the site GitHub repository, Travis-CI immediately performs a series of validation tests.\nIf the validation tests pass, then the website is automatically published to Github Pages.",
            "title": "Contributor Tools"
        },
        {
            "location": "/contrib/tools/#contributor-tools",
            "text": "The OpenIndiana Docs website uses 2 principal technologies and several ancillary technologies:",
            "title": "Contributor Tools"
        },
        {
            "location": "/contrib/tools/#principal-technologies",
            "text": "The MkDocs content authoring framework.  The Markdown text markup language.   Both technologies leverage the Python programming language.",
            "title": "Principal technologies:"
        },
        {
            "location": "/contrib/tools/#ancillary-technologies",
            "text": "GitHub - GIT repository hosting  GitHub Pages - Website publishing from a GitHub repository  GIT - Distributed version control  Travis-CI - Continuous Integration toolset",
            "title": "Ancillary technologies:"
        },
        {
            "location": "/contrib/tools/#why-use-git-distributed-version-control-for-docs",
            "text": "Integrity - You can roll back to previous versions  Mobility - You can edit docs anywhere, no Internet connection required  Consistency - Docs are treated just like code",
            "title": "Why use GIT distributed version control for docs?"
        },
        {
            "location": "/contrib/tools/#why-a-text-markup-based-docs-framework",
            "text": "The primary advantage of using a text markup language is:   Readability  Flexibility   The raw code for your authored content is simple plain text.\nNo need for special tools such as WYSIWYG XML editors, etc.",
            "title": "Why a text markup based docs framework?"
        },
        {
            "location": "/contrib/tools/#what-is-mkdocs",
            "text": "MkDocs is a modern, flexible, and feature rich content authoring framework and static website generator.\nThe python based MkDocs framework publishes content as HTML5.\nIn conjunction with the MkDocs-Pandoc module, content may also be published in the PDF and EPUB formats.  Unlike a CMS system where you are restricted to the confines of an integral editor, the OpenIndiana Docs website has no such restriction.\nHere content is authored using a simple text based markup.\nBecause you are working with plain text files, content may be authored using Atom, EMACS, Gedit, Nano, VIM, or any other text editor.\nThe choice is yours; Use your favorite editor.",
            "title": "What is MkDocs?"
        },
        {
            "location": "/contrib/tools/#mkdocs-system-characteristics",
            "text": "Easy to use Markdown syntax.  Produces professional quality output.  Extensible - accepts plugins.",
            "title": "MkDocs system characteristics"
        },
        {
            "location": "/contrib/tools/#mkdocs-and-markdown-informational-links",
            "text": "URL  Description      http://www.mkdocs.org/  MkDocs Content Authoring Framework    https://pythonhosted.org/Markdown/  Python implementation of Markdown    http://spec.commonmark.org/0.25/  The CommonMark Markdown Spec    https://github.com/mivok/markdownlint  Markdown Lint    https://travis-ci.org/  Continuous Integration (similar to Jenkins, etc.)    https://pages.github.com/  Publish from your github repo",
            "title": "MkDocs and Markdown informational links"
        },
        {
            "location": "/contrib/tools/#the-openindiana-docs-github-repository",
            "text": "The OpenIndiana Docs repository:  https://github.com/OpenIndiana/oi-docs  consists of 2 branches:   master  gh-pages   Development occurs in the master branch.\nThe gh-pages branch is used to publish the site to GitHub pages.",
            "title": "The OpenIndiana Docs GitHub repository"
        },
        {
            "location": "/contrib/tools/#docs-site-publishing",
            "text": "Following the best practices of continuous integration, the OpenIndiana Docs website is fully automated using Travis-CI.\nUpon a commit to the site GitHub repository, Travis-CI immediately performs a series of validation tests.\nIf the validation tests pass, then the website is automatically published to Github Pages.",
            "title": "Docs site publishing"
        },
        {
            "location": "/contrib/roles/",
            "text": "Contributor Roles\n\n\nThere are multiple ways community members can contribute to the OpenIndiana Documentation revitalization effort.\nThese contributions fall into several different roles.\nEach role requires a different skill level.\n\n\nPrerequisite skills\n\n\nBasic familiarity with:\n\n\n\n\nText editors\n\n\nThe Markdown text markup syntax\n\n\nGIT distributed version control\n\n\nThe MkDocs documentation framework\n\n\n\n\nPages are written in Markdown text markup.\nThe skill level required to work with these pages is minimal.\nIf you can use a text editor, you can write docs with Markdown.\n\n\nContent Author\n\n\nThe easiest way to help the docs revitalization effort is by authoring content.\nThe content author would (as the title suggests) write content to be hosted on the OpenIndiana Docs website.\nContent can include just about anything, news posts, tutorials, Howto's, or larger efforts such as the handbook or updating the OSOL books.\n\n\n \nNOTE:\n\n\n\nThe nice thing about helping the project as a content author is the level of commitment is entirely up to you the individual.\nIn other words, there is no requirement to get involved in anything major.\nIn fact, it would be better to start small and only later consider taking on something larger.\n\n\n\nHelpful skills include a willingness to write and work as a team with content reviewers.\n\n\nContent Reviewer\n\n\nThe content reviewer wears multiple hats and effectively performs the roles of:\n\n\n\n\nEditorial reviewer\n\n\nConfiguration manager\n\n\nRelease manager\n\n\nDoc team leader/trainer.\n\n\n\n\nThis person (or persons) would review pull request and provide editorial feedback to the content authors.\nHelpful skills include diplomacy, good organizational abilities, as well as a knack for performing editorial reviews.\n\n\nThe Content Review Process\n\n\nUpon receipt of a pull request, the content reviewer performs the following steps:\n\n\n\n\nDetermines whether the changes are suitable as they are or require additional modifications (providing feedback to the originator as necessary).\n\n\nIf changes are extensive or involve inline html, the content reviewer may check out your pull request (PR) to perform QA testing.\n\n\nQA testing is performed by running MkDocs in development mode.\n\n\nUpon acceptance, merges the pull request into the mainline branch.\n\n\nUpon merge, the site is automatically published via Travis-CI.",
            "title": "Contributor Roles"
        },
        {
            "location": "/contrib/roles/#contributor-roles",
            "text": "There are multiple ways community members can contribute to the OpenIndiana Documentation revitalization effort.\nThese contributions fall into several different roles.\nEach role requires a different skill level.",
            "title": "Contributor Roles"
        },
        {
            "location": "/contrib/roles/#prerequisite-skills",
            "text": "Basic familiarity with:   Text editors  The Markdown text markup syntax  GIT distributed version control  The MkDocs documentation framework   Pages are written in Markdown text markup.\nThe skill level required to work with these pages is minimal.\nIf you can use a text editor, you can write docs with Markdown.",
            "title": "Prerequisite skills"
        },
        {
            "location": "/contrib/roles/#content-author",
            "text": "The easiest way to help the docs revitalization effort is by authoring content.\nThe content author would (as the title suggests) write content to be hosted on the OpenIndiana Docs website.\nContent can include just about anything, news posts, tutorials, Howto's, or larger efforts such as the handbook or updating the OSOL books.    NOTE:  \nThe nice thing about helping the project as a content author is the level of commitment is entirely up to you the individual.\nIn other words, there is no requirement to get involved in anything major.\nIn fact, it would be better to start small and only later consider taking on something larger.  Helpful skills include a willingness to write and work as a team with content reviewers.",
            "title": "Content Author"
        },
        {
            "location": "/contrib/roles/#content-reviewer",
            "text": "The content reviewer wears multiple hats and effectively performs the roles of:   Editorial reviewer  Configuration manager  Release manager  Doc team leader/trainer.   This person (or persons) would review pull request and provide editorial feedback to the content authors.\nHelpful skills include diplomacy, good organizational abilities, as well as a knack for performing editorial reviews.",
            "title": "Content Reviewer"
        },
        {
            "location": "/contrib/roles/#the-content-review-process",
            "text": "Upon receipt of a pull request, the content reviewer performs the following steps:   Determines whether the changes are suitable as they are or require additional modifications (providing feedback to the originator as necessary).  If changes are extensive or involve inline html, the content reviewer may check out your pull request (PR) to perform QA testing.  QA testing is performed by running MkDocs in development mode.  Upon acceptance, merges the pull request into the mainline branch.  Upon merge, the site is automatically published via Travis-CI.",
            "title": "The Content Review Process"
        },
        {
            "location": "/contrib/topics/",
            "text": "Contributor Topics\n\n\nThe goal of this page is to provide a 'TO DO' list of things which need to be documented.\n\n\nThe organization of the resources below are listed first according to the document title they pertain to, followed by individual topics found within that particular document title.\nFor each document the published URL and internal site path to the document have been provided.\n\n\nPotentially useful reference information\n\n\nBelow you will find a list of links, most of which are from the Internet Archive 'Wayback' machine.\nAs such, when clicking on the links found within these resources, it may be necessary to remove the \n;jsessionid=xxx\n from the end of the URL.\nOtherwise the wayback machine will report a \nnot found\n error message.\n\n\n\n\nOpenSolaris.org\n\n\nOpenSolaris Projects\n\n\nOpenSolaris Communities\n\n\nOpenSolaris Documentation Style Guide\n\n\ndocs from www.opensolaris.org\n\n\ndocs from hub.opensolaris.org\n\n\nWhat's new for OSOL 2010.03\n\n\nlink to illumos graphics files\n\n\nGetting Started With OpenSolaris 2008.11\n\n\nFreeBSD Documentation Project Primer for New Contributors\n\n\nOpenSolaris Learn site - Wayback Machine\n\n\nOpenSolaris 2009.06 docs\n\n\nOpenSolaris 2009.06 Booklet PDF\n\n\n\n\nAbout OpenIndiana\n\n\n\n\nPage URL: \nhttps://openindiana.github.io/oi-docs/misc/openindiana/\n\n\nPage location within docs site: \n/oi-docs/docs/misc/openindiana.md\n\n\n\n\nThe 'About OpenIndiana' document is effectively a renamed and enhanced copy of the OpenIndiana FAQ found on OpenIndiana.org.\nGiven FAQ's are so rarely composed of things people actually inquire about, having a document titled 'About OpenIndiana' made more sense for this documentation site.\n\n\nSuggested topics:\n\n\nBelow are some resources which may be useful for further improving this document.\nTake some time to look them over for ideas and inspiration for writing new content:\n\n\n\n\nOpenSolaris FAQ\n\n\nOpenSolaris Newbie FAQ\n\n\n\n\nHandbook - Getting Started\n\n\n \nDOC TEAM NOTE:\n\n\n\n\n\n\nPage URL: \nhttps://openindiana.github.io/oi-docs/handbook/getting-started/\n\n\nPage location within docs site: \n/oi-docs/docs/handbook/getting-started.md\n\n\n\n\n\n\n\n \nDOC TEAM NOTE:\n\n\n\n\nThis document is likely to change significantly over the course of it's development.\n\n\n\n\nSome topics may be moved to more relevant locations within other documents.\n\n\nAs the document grows and matures, it is likely to become necessary to break things up into smaller more manageable pieces.\n\n\n\n\nThe \nGetting Started\n document has been initially structured to cover the following topics:\n\n\n\n\nIntroduction\n\n\nOpenIndiana software releases\n\n\nSystem requirements\n\n\nExploring OpenIndiana\n\n\nPreparation for installing OpenIndiana\n\n\nCreating a bootable OpenIndiana DVD\n\n\nCreating a bootable OpenIndiana USB flash drive\n\n\nBooting OpenIndiana installer media\n\n\nInstalling OpenIndiana\n\n\nPost installation steps\n\n\nTroubleshooting installations\n\n\nThe Image Package System (IPS)\n\n\nManaging boot environments\n\n\nThe X-Window system\n\n\n\n\n\n\n\nSuggested topics:\n\n\nImport first section of Wiki page: \nhttp://wiki.openindiana.org/oi/Using+OpenIndiana+-+Technical+FAQ\n\n\nHave a look at the following resources for ideas and inspiration for writing new content:\n\n\n\n\nOpenSolaris Automated Installer Guide\n\n\nLinux Versus OpenSolaris\n\n\nIPS versus apt - from IPS guide\n\n\nSystem partitioning, Gparted, etc.\n\n\nDevice Driver utility - (also how to manually install missing drivers - and where to find them if they are available)\n\n\nHow to disable drivers at boot time\n\n\nNetwork install drivers: \npkgrecv -s http://pkg.openindiana.org/hipster-2015 -d bash.p5a -a bash \n sudo pkg install -nv  -g bash.p5a bash\n\n\nLocal install drivers: \npkg install -g name.p5a fmri\n\n\n\n\nHandbook - Common Tasks\n\n\n \nDOC TEAM NOTE:\n\n\n\n\n\n\nPage URL: \nhttps://openindiana.github.io/oi-docs/handbook/common-tasks/\n\n\nPage location within docs site: \n/oi-docs/docs/handbook/common-tasks.md\n\n\n\n\n\n\n\n \nDOC TEAM NOTE:\n\n\n\n\nThis document is likely to change significantly over the course of it's development.\n\n\n\n\nSome topics may be moved to more relevant locations within other documents.\n\n\nAs the document grows and matures, it is likely to become necessary to break things up into smaller more manageable pieces.\n\n\n\n\nThe \nCommon Tasks\n document has been initially structured to cover the following topics:\n\n\n\n\nBasic UNIX commands\n\n\nBasic system administration\n\n\nDesktop applications\n\n\nMultimedia - Audio\n\n\nMultimedia - Video\n\n\nPrinting\n\n\nGraphics workstation\n\n\nDesktop Publishing system, Etc.\n\n\n\n\nCurrently this section is largely desktop oriented.\nPerhaps some additional items such as system backups might fit better in this section.\nAs previously mentioned, this is a living document and things will likely get shuffled around as the document matures.\n\n\n\n\n\nSuggested topics:\n\n\nCUPS Printing\n\n\nThe Common UNIX Printing System (CUPS) has been selected as the default print service, replacing the LP print service, in OpenSolaris 2010.03.\nCUPS support includes a web and graphical interface to manage your printing environment.\nA system that is running CUPS becomes a host that can accept print requests from client systems, process those requests, and then send them to the appropriate printer.\nTo facilitate CUPS support, a new print-service command has been introduced that provides a mechanism for switching between CUPS print service and the LP print service, including 2 new SMF services.\n\n\nDoc team Note: The guidance provided by the OSOL printing administration book is largely obsolete (but parts may still be valid) as CUPS replaced the old Solaris printing subsystem found in OpenSolaris 2009.06.\nHowever, OpenIndiana has 2 print subsystems (CUPS and LP).\nThey are managed by the \nprint-service\n command, which allows you to designate the active print subsystem.\nSee the print-services (1M) man page for more information.\nIn contrast, Oracle dropped lp completely in the Solaris 11.0 release.\n\n\nHandbook - Systems Administration\n\n\n \nDOC TEAM NOTE:\n\n\n\n\n\n\nPage URL: \nhttps://openindiana.github.io/oi-docs/handbook/systems-administration/\n\n\nPage location within docs site: \n/oi-docs/docs/handbook/systems-administration.md\n\n\n\n\n\n\n\n \nDOC TEAM NOTE:\n\n\n\n\nThis document is likely to change significantly over the course of it's development.\n\n\n\n\nSome topics may be moved to more relevant locations within other documents.\n\n\nAs the document grows and matures, it is likely to become necessary to break things up into smaller more manageable pieces.\n\n\n\n\nThe \nsystems administration\n document has been initially structured to cover the following topics:\n\n\n\n\nConfiguration and tuning\n\n\nConfiguring a UPS\n\n\nFault Management (FMA)\n\n\nService Management (SMF)\n\n\nSystems logging and monitoring\n\n\n\n\n\n\nIllumos boot process\n\n\nSecurity\n\n\nRole Based Access Control (RBAC)\n\n\n\n\n\n\nZones\n\n\nStorage\n\n\nMounting file systems\n\n\nNTFS support - 3rd party\n\n\nConfiguring OpenIndiana as an ISCSI Target Server - (COMSTAR)\n\n\nSystem backups\n\n\nZFS\n\n\n\n\n\n\nVirtualization\n\n\nLocalization\n\n\nDtrace\n\n\nConfiguring Networking\n\n\nNWAM\n\n\n\n\n\n\nClustering\n\n\n\n\n\n\n\nSuggested topics:\n\n\nHave a look at the following resources for ideas and inspiration for writing new content:\n\n\nSystems Admin Guides\n\n\n\n\nLinux to Solaris Administrators Guide - PDF\n\n\nOPENSOLARIS NETWORK ADMINISTRATION For Administrators Familiar with Linux - PDF\n\n\n\n\nSMF\n\n\n\n\nsmf(5) Frequently Asked Questions\n\n\nanother SMF FAQ\n\n\nOpenSolaris SMF Community\n\n\n\n\nWIFI/NDIS\n\n\n\n\nSolaris NDIS Wrapper Toolkit\n\n\nSolaris Wireless FAQ\n\n\n\n\nZones\n\n\n\n\nOpenSolaris Zones Community\n\n\nZones and Containers FAQ\n\n\nSolaris Containers How To Guide\n\n\n\n\nZFS\n\n\n\n\nOpenSolaris ZFS Community\n\n\nZFS Frequently Asked Questions (FAQ)\n\n\nZFS Resources\n\n\n\n\nABI support\n\n\n\n\nWrite about the change from Sun Studio to GCC its implications for ABI from previous Solaris releases/OpenSolaris, etc.\n\n\nFor more details, see: \nhttp://openindiana.org/pipermail/oi-dev/2014-December/003496.html\n\n\nWe might also want to talk about what other effects (if any) have/will result from the move to OI-Userland\n\n\n\n\n\n\n\n\nWrite about Virtualization\n\n\n\n\nadd a page about running OI as a virtual guest in Virtualbox, VMware, KVM, talk about which provides the best hardware support, guest tools compatibility, other caveats, etc.\n\n\n\n\nHandbook - Network Communications\n\n\n \nDOC TEAM NOTE:\n\n\n\n\n\n\nPage URL: \nhttps://openindiana.github.io/oi-docs/handbook/network-communications/\n\n\nPage location within docs site: \n/oi-docs/docs/handbook/network-communications.md\n\n\n\n\n\n\n\n \nDOC TEAM NOTE:\n\n\n\n\nThis document is likely to change significantly over the course of it's development.\n\n\n\n\nSome topics may be moved to more relevant locations within other documents.\n\n\nAs the document grows and matures, it is likely to become necessary to break things up into smaller more manageable pieces.\n\n\n\n\nThe \nnetwork communications\n document has been initially structured to cover the following network related topics:\n\n\n\n\nPPP\n\n\nPPPoE\n\n\nEmail servers\n\n\nWWW servers\n\n\nFirewalls\n\n\nAdvanced networking\n\n\nCrossbow\n\n\nUsing OpenIndiana as a NAS\n\n\nCIFS\n\n\nSAMBA\n\n\nNFS\n\n\n\n\n\n\nNIS\n\n\nLDAP\n\n\nDHCP\n\n\nFTP\n\n\nDNS\n\n\nNTP\n\n\nINETD\n\n\n\n\n\n\n\nSuggested topics:\n\n\nHave a look at the following resources for ideas and inspiration for writing new content:\n\n\nComstar\n\n\n\n\nCOMSTAR info\n\n\n\n\nCrossbow\n\n\n\n\nCrossbow info\n\n\n\n\nCIFS\n\n\n\n\nHOW to INSTALL and SHARE a File System to CIFS Clients\n\n\nOpenSolaris CIFS Service\n\n\n\n\nNFS\n\n\n\n\nBasic NFS Configuration\n\n\nThe Management of NFS Performance With Solaris ZFS\n\n\n\n\nIPFilter\n\n\n\n\nipfilter info\n\n\nIP Filter FAQ\n\n\n\n\nRsync\n\n\n\n\nRsync on solaris Howto\n\n\n\n\nInstalling OI onto an ISCSI exposed SCSI target\n\n\nA good tutorial might be to write about installing OpenIndiana Hipster on an ISCSI target.\n\n\n[14:50:02] \nalp\n does someone have some links on \ninstalling OI on ISCSI\n ?\n[14:57:40] \ntsoome\n alp get to illumos wiki, open projects loader -\n ideas, from there you get link for jeffpc iscsi experiment\n[14:57:46] \ntsoome\n I did use it to play with ipxe+iscsi+loader\n\n\n\n\nAlso can look at Oracle docs for reference: \nhttps://docs.oracle.com/cd/E26502_01/html/E29008/iscsi-1.html\n\n\nHandbook - Appendix\n\n\n \nDOC TEAM NOTE:\n\n\n\n\n\n\nPage URL: \nhttps://openindiana.github.io/oi-docs/handbook/appendix/\n\n\nPage location within docs site: \n/oi-docs/docs/handbook/appendix.md\n\n\n\n\n\n\n\n \nDOC TEAM NOTE:\n\n\n\n\nThis document is likely to change significantly over the course of it's development.\n\n\n\n\nSome topics may be moved to more relevant locations within other documents.\n\n\nAs the document grows and matures, it is likely to become necessary to break things up into smaller more manageable pieces.\n\n\n\n\nThe \nappendix\n document has been initially structured to cover the following topics:\n\n\n\n\nFinding help and support\n\n\nDeveloping with OpenIndiana\n\n\nSoftware Development Testing\n\n\n\n\nThis document might also be a good place to put the following topics:\n\n\n\n\nBasic UNIX commands\n\n\nContrast and comparison tables (e.g. Unix versus Linux, etc.)\n\n\nFeature comparison tables\n\n\n\n\n\n\n\nSuggested topics:\n\n\n\n\nWrite a table where \nincluded\n features of OpenIndiana are compared to \nlicensed\n features found in commercial software.\n\n\nFor example: Qemu-KVM | HyperV, Esxi, etc. , Zones | Docker, etc.\n\n\n\n\n\n\nNeed to look at the legal aspects of mentioning trademarked names within documentation (to help keep openindiana out of trouble).\n\n\nAdd a blurb about switching to hipster. See \nlink\n\n\nLink in download URL's for ISO's, etc.: See \nrelease notes\n\n\nWrite a table providing a matrix comparing commands between BSD/Linux/OpenIndiana.\n\n\nThis could also be something for the handbook.\n\n\nPlace it wherever it looks best.\n\n\n\n\n\n\nSee \nthis page\n for some inspiration.\n\n\nAlso look at old OpenSolaris website (via the wayback machine) for additional ideas, suggestions, etc.\n\n\n\n\nWrite some comparison tables\n\n\n\n\nProvide some contrast/comparisons between OI and other illumos distros.\n\n\nProvide some contrast/comparisons between OI and other BSD distros (PCBSD in relation to freebsd, etc.)\n\n\nProvide some contrast/comparisons between OI and Linux, etc. (Linux kernel and GNU userland, illumos kernel and GNU userland, etc.)\n\n\nFor an example, see: \nthis page\n\n\n\n\n\n\nCommand comparison tables \u2013 e.g. if such and such command does something on Linux, Windows, BSD, etc., use such and such command to do same thing on OI.\n\n\nFor some inspiration, see the tables found on the SmartOS Wiki.\n\n\nOracle might have some inspiration as well - (just don't copy it verbatim)\n\n\n\n\n\n\n\n\nOpenSolaris Redistributable Books\n\n\n \nDOC TEAM NOTE:\n\n\n\n\n\n\nPage URL: \nhttps://openindiana.github.io/oi-docs/books/about/\n\n\nPage location within docs site: \n/oi-docs/docs/books/about.md\n\n\n\n\n\n\n\n \nDOC TEAM NOTE:\n\n\n\n\nThe OpenSolaris books are from the 2009.06 release of OpenSolaris.\nAs OpenIndiana has diverged from it's OpenSolaris roots, the relevancy of this documentation has diminished.\nSome of the documentation was obsolete even when it was published.\n\n\nThe primary value of this documentation may be to use it as inspiration for writing new content for the handbook.\nThe documentation is all PDL licensed so it may be copied verbatim without incurring any legal risks.\n\n\nAs for the future of these documents, the project has some choices:\n\n\n\n\nPull in any and all reverent content into the new handbook and then discard the books.\n\n\nWrite errata for the books, pointing out what has changed between OpenSolaris and OpenIndiana.\n\n\nUse the books to write task specific tutorials.\n\n\n\n\n\n\n\nSuggested topics:\n\n\n\n\nReview the OpenSolaris redistributable books.\n\n\nDetermine the relevancy of each book in comparison to the current development state of OpenIndiana Hipster.\n\n\nCompose lists of errata as required.\n\n\nAdd links to current Oracle docs where such docs are still applicable to the current development state of OpenIndiana.",
            "title": "Contributor Topics"
        },
        {
            "location": "/contrib/topics/#contributor-topics",
            "text": "The goal of this page is to provide a 'TO DO' list of things which need to be documented.  The organization of the resources below are listed first according to the document title they pertain to, followed by individual topics found within that particular document title.\nFor each document the published URL and internal site path to the document have been provided.",
            "title": "Contributor Topics"
        },
        {
            "location": "/contrib/topics/#potentially-useful-reference-information",
            "text": "Below you will find a list of links, most of which are from the Internet Archive 'Wayback' machine.\nAs such, when clicking on the links found within these resources, it may be necessary to remove the  ;jsessionid=xxx  from the end of the URL.\nOtherwise the wayback machine will report a  not found  error message.   OpenSolaris.org  OpenSolaris Projects  OpenSolaris Communities  OpenSolaris Documentation Style Guide  docs from www.opensolaris.org  docs from hub.opensolaris.org  What's new for OSOL 2010.03  link to illumos graphics files  Getting Started With OpenSolaris 2008.11  FreeBSD Documentation Project Primer for New Contributors  OpenSolaris Learn site - Wayback Machine  OpenSolaris 2009.06 docs  OpenSolaris 2009.06 Booklet PDF",
            "title": "Potentially useful reference information"
        },
        {
            "location": "/contrib/topics/#about-openindiana",
            "text": "Page URL:  https://openindiana.github.io/oi-docs/misc/openindiana/  Page location within docs site:  /oi-docs/docs/misc/openindiana.md   The 'About OpenIndiana' document is effectively a renamed and enhanced copy of the OpenIndiana FAQ found on OpenIndiana.org.\nGiven FAQ's are so rarely composed of things people actually inquire about, having a document titled 'About OpenIndiana' made more sense for this documentation site.",
            "title": "About OpenIndiana"
        },
        {
            "location": "/contrib/topics/#suggested-topics",
            "text": "Below are some resources which may be useful for further improving this document.\nTake some time to look them over for ideas and inspiration for writing new content:   OpenSolaris FAQ  OpenSolaris Newbie FAQ",
            "title": "Suggested topics:"
        },
        {
            "location": "/contrib/topics/#handbook-getting-started",
            "text": "DOC TEAM NOTE:    Page URL:  https://openindiana.github.io/oi-docs/handbook/getting-started/  Page location within docs site:  /oi-docs/docs/handbook/getting-started.md      DOC TEAM NOTE:   This document is likely to change significantly over the course of it's development.   Some topics may be moved to more relevant locations within other documents.  As the document grows and matures, it is likely to become necessary to break things up into smaller more manageable pieces.   The  Getting Started  document has been initially structured to cover the following topics:   Introduction  OpenIndiana software releases  System requirements  Exploring OpenIndiana  Preparation for installing OpenIndiana  Creating a bootable OpenIndiana DVD  Creating a bootable OpenIndiana USB flash drive  Booting OpenIndiana installer media  Installing OpenIndiana  Post installation steps  Troubleshooting installations  The Image Package System (IPS)  Managing boot environments  The X-Window system",
            "title": "Handbook - Getting Started"
        },
        {
            "location": "/contrib/topics/#suggested-topics_1",
            "text": "Import first section of Wiki page:  http://wiki.openindiana.org/oi/Using+OpenIndiana+-+Technical+FAQ  Have a look at the following resources for ideas and inspiration for writing new content:   OpenSolaris Automated Installer Guide  Linux Versus OpenSolaris  IPS versus apt - from IPS guide  System partitioning, Gparted, etc.  Device Driver utility - (also how to manually install missing drivers - and where to find them if they are available)  How to disable drivers at boot time  Network install drivers:  pkgrecv -s http://pkg.openindiana.org/hipster-2015 -d bash.p5a -a bash   sudo pkg install -nv  -g bash.p5a bash  Local install drivers:  pkg install -g name.p5a fmri",
            "title": "Suggested topics:"
        },
        {
            "location": "/contrib/topics/#handbook-common-tasks",
            "text": "DOC TEAM NOTE:    Page URL:  https://openindiana.github.io/oi-docs/handbook/common-tasks/  Page location within docs site:  /oi-docs/docs/handbook/common-tasks.md      DOC TEAM NOTE:   This document is likely to change significantly over the course of it's development.   Some topics may be moved to more relevant locations within other documents.  As the document grows and matures, it is likely to become necessary to break things up into smaller more manageable pieces.   The  Common Tasks  document has been initially structured to cover the following topics:   Basic UNIX commands  Basic system administration  Desktop applications  Multimedia - Audio  Multimedia - Video  Printing  Graphics workstation  Desktop Publishing system, Etc.   Currently this section is largely desktop oriented.\nPerhaps some additional items such as system backups might fit better in this section.\nAs previously mentioned, this is a living document and things will likely get shuffled around as the document matures.",
            "title": "Handbook - Common Tasks"
        },
        {
            "location": "/contrib/topics/#suggested-topics_2",
            "text": "CUPS Printing  The Common UNIX Printing System (CUPS) has been selected as the default print service, replacing the LP print service, in OpenSolaris 2010.03.\nCUPS support includes a web and graphical interface to manage your printing environment.\nA system that is running CUPS becomes a host that can accept print requests from client systems, process those requests, and then send them to the appropriate printer.\nTo facilitate CUPS support, a new print-service command has been introduced that provides a mechanism for switching between CUPS print service and the LP print service, including 2 new SMF services.  Doc team Note: The guidance provided by the OSOL printing administration book is largely obsolete (but parts may still be valid) as CUPS replaced the old Solaris printing subsystem found in OpenSolaris 2009.06.\nHowever, OpenIndiana has 2 print subsystems (CUPS and LP).\nThey are managed by the  print-service  command, which allows you to designate the active print subsystem.\nSee the print-services (1M) man page for more information.\nIn contrast, Oracle dropped lp completely in the Solaris 11.0 release.",
            "title": "Suggested topics:"
        },
        {
            "location": "/contrib/topics/#handbook-systems-administration",
            "text": "DOC TEAM NOTE:    Page URL:  https://openindiana.github.io/oi-docs/handbook/systems-administration/  Page location within docs site:  /oi-docs/docs/handbook/systems-administration.md      DOC TEAM NOTE:   This document is likely to change significantly over the course of it's development.   Some topics may be moved to more relevant locations within other documents.  As the document grows and matures, it is likely to become necessary to break things up into smaller more manageable pieces.   The  systems administration  document has been initially structured to cover the following topics:   Configuration and tuning  Configuring a UPS  Fault Management (FMA)  Service Management (SMF)  Systems logging and monitoring    Illumos boot process  Security  Role Based Access Control (RBAC)    Zones  Storage  Mounting file systems  NTFS support - 3rd party  Configuring OpenIndiana as an ISCSI Target Server - (COMSTAR)  System backups  ZFS    Virtualization  Localization  Dtrace  Configuring Networking  NWAM    Clustering",
            "title": "Handbook - Systems Administration"
        },
        {
            "location": "/contrib/topics/#suggested-topics_3",
            "text": "Have a look at the following resources for ideas and inspiration for writing new content:  Systems Admin Guides   Linux to Solaris Administrators Guide - PDF  OPENSOLARIS NETWORK ADMINISTRATION For Administrators Familiar with Linux - PDF   SMF   smf(5) Frequently Asked Questions  another SMF FAQ  OpenSolaris SMF Community   WIFI/NDIS   Solaris NDIS Wrapper Toolkit  Solaris Wireless FAQ   Zones   OpenSolaris Zones Community  Zones and Containers FAQ  Solaris Containers How To Guide   ZFS   OpenSolaris ZFS Community  ZFS Frequently Asked Questions (FAQ)  ZFS Resources   ABI support   Write about the change from Sun Studio to GCC its implications for ABI from previous Solaris releases/OpenSolaris, etc.  For more details, see:  http://openindiana.org/pipermail/oi-dev/2014-December/003496.html  We might also want to talk about what other effects (if any) have/will result from the move to OI-Userland     Write about Virtualization   add a page about running OI as a virtual guest in Virtualbox, VMware, KVM, talk about which provides the best hardware support, guest tools compatibility, other caveats, etc.",
            "title": "Suggested topics:"
        },
        {
            "location": "/contrib/topics/#handbook-network-communications",
            "text": "DOC TEAM NOTE:    Page URL:  https://openindiana.github.io/oi-docs/handbook/network-communications/  Page location within docs site:  /oi-docs/docs/handbook/network-communications.md      DOC TEAM NOTE:   This document is likely to change significantly over the course of it's development.   Some topics may be moved to more relevant locations within other documents.  As the document grows and matures, it is likely to become necessary to break things up into smaller more manageable pieces.   The  network communications  document has been initially structured to cover the following network related topics:   PPP  PPPoE  Email servers  WWW servers  Firewalls  Advanced networking  Crossbow  Using OpenIndiana as a NAS  CIFS  SAMBA  NFS    NIS  LDAP  DHCP  FTP  DNS  NTP  INETD",
            "title": "Handbook - Network Communications"
        },
        {
            "location": "/contrib/topics/#suggested-topics_4",
            "text": "Have a look at the following resources for ideas and inspiration for writing new content:  Comstar   COMSTAR info   Crossbow   Crossbow info   CIFS   HOW to INSTALL and SHARE a File System to CIFS Clients  OpenSolaris CIFS Service   NFS   Basic NFS Configuration  The Management of NFS Performance With Solaris ZFS   IPFilter   ipfilter info  IP Filter FAQ   Rsync   Rsync on solaris Howto   Installing OI onto an ISCSI exposed SCSI target  A good tutorial might be to write about installing OpenIndiana Hipster on an ISCSI target.  [14:50:02]  alp  does someone have some links on  installing OI on ISCSI  ?\n[14:57:40]  tsoome  alp get to illumos wiki, open projects loader -  ideas, from there you get link for jeffpc iscsi experiment\n[14:57:46]  tsoome  I did use it to play with ipxe+iscsi+loader  Also can look at Oracle docs for reference:  https://docs.oracle.com/cd/E26502_01/html/E29008/iscsi-1.html",
            "title": "Suggested topics:"
        },
        {
            "location": "/contrib/topics/#handbook-appendix",
            "text": "DOC TEAM NOTE:    Page URL:  https://openindiana.github.io/oi-docs/handbook/appendix/  Page location within docs site:  /oi-docs/docs/handbook/appendix.md      DOC TEAM NOTE:   This document is likely to change significantly over the course of it's development.   Some topics may be moved to more relevant locations within other documents.  As the document grows and matures, it is likely to become necessary to break things up into smaller more manageable pieces.   The  appendix  document has been initially structured to cover the following topics:   Finding help and support  Developing with OpenIndiana  Software Development Testing   This document might also be a good place to put the following topics:   Basic UNIX commands  Contrast and comparison tables (e.g. Unix versus Linux, etc.)  Feature comparison tables",
            "title": "Handbook - Appendix"
        },
        {
            "location": "/contrib/topics/#suggested-topics_5",
            "text": "Write a table where  included  features of OpenIndiana are compared to  licensed  features found in commercial software.  For example: Qemu-KVM | HyperV, Esxi, etc. , Zones | Docker, etc.    Need to look at the legal aspects of mentioning trademarked names within documentation (to help keep openindiana out of trouble).  Add a blurb about switching to hipster. See  link  Link in download URL's for ISO's, etc.: See  release notes  Write a table providing a matrix comparing commands between BSD/Linux/OpenIndiana.  This could also be something for the handbook.  Place it wherever it looks best.    See  this page  for some inspiration.  Also look at old OpenSolaris website (via the wayback machine) for additional ideas, suggestions, etc.   Write some comparison tables   Provide some contrast/comparisons between OI and other illumos distros.  Provide some contrast/comparisons between OI and other BSD distros (PCBSD in relation to freebsd, etc.)  Provide some contrast/comparisons between OI and Linux, etc. (Linux kernel and GNU userland, illumos kernel and GNU userland, etc.)  For an example, see:  this page    Command comparison tables \u2013 e.g. if such and such command does something on Linux, Windows, BSD, etc., use such and such command to do same thing on OI.  For some inspiration, see the tables found on the SmartOS Wiki.  Oracle might have some inspiration as well - (just don't copy it verbatim)",
            "title": "Suggested topics:"
        },
        {
            "location": "/contrib/topics/#opensolaris-redistributable-books",
            "text": "DOC TEAM NOTE:    Page URL:  https://openindiana.github.io/oi-docs/books/about/  Page location within docs site:  /oi-docs/docs/books/about.md      DOC TEAM NOTE:   The OpenSolaris books are from the 2009.06 release of OpenSolaris.\nAs OpenIndiana has diverged from it's OpenSolaris roots, the relevancy of this documentation has diminished.\nSome of the documentation was obsolete even when it was published.  The primary value of this documentation may be to use it as inspiration for writing new content for the handbook.\nThe documentation is all PDL licensed so it may be copied verbatim without incurring any legal risks.  As for the future of these documents, the project has some choices:   Pull in any and all reverent content into the new handbook and then discard the books.  Write errata for the books, pointing out what has changed between OpenSolaris and OpenIndiana.  Use the books to write task specific tutorials.",
            "title": "OpenSolaris Redistributable Books"
        },
        {
            "location": "/contrib/topics/#suggested-topics_6",
            "text": "Review the OpenSolaris redistributable books.  Determine the relevancy of each book in comparison to the current development state of OpenIndiana Hipster.  Compose lists of errata as required.  Add links to current Oracle docs where such docs are still applicable to the current development state of OpenIndiana.",
            "title": "Suggested topics:"
        },
        {
            "location": "/contrib/style/",
            "text": "Contributor Style Guide\n\n\n \nNOTE:\n\n\n\nThis document is a work in progress.\nHelp us make it grow.\n\n\nUntil then, you may find the following resource helpful:\n\n\n\n\nDocumentation Style Guide for OpenSolaris\n - Internet Archive - PDF (270 pages)\n\n\n\n\n\nStyle recommendations\n\n\n\n\nDocument titles - First letter of each word capitalized.\n\n\nSectional titles - First letter of first word capitalized.\n\n\nOne (1) space between sectional titles and beginning of text.\n\n\nTwo spaces after last line of text and beginning of next sectional title.\n\n\nOne sentence per line (the only exception to this is where you need multiple sentences to fit into a single table cell).",
            "title": "Contributor Style Guide"
        },
        {
            "location": "/contrib/style/#contributor-style-guide",
            "text": "NOTE:  \nThis document is a work in progress.\nHelp us make it grow.  Until then, you may find the following resource helpful:   Documentation Style Guide for OpenSolaris  - Internet Archive - PDF (270 pages)",
            "title": "Contributor Style Guide"
        },
        {
            "location": "/contrib/style/#style-recommendations",
            "text": "Document titles - First letter of each word capitalized.  Sectional titles - First letter of first word capitalized.  One (1) space between sectional titles and beginning of text.  Two spaces after last line of text and beginning of next sectional title.  One sentence per line (the only exception to this is where you need multiple sentences to fit into a single table cell).",
            "title": "Style recommendations"
        },
        {
            "location": "/contrib/markdown/",
            "text": "Markdown Syntax Guide\n\n\nItalics and bold text\n\n\nMarkdown Code\n \n\n\nThis is plain text\n\n_This is italic text_\n\n**This is bold text**\n\n\n\n\nRendered HTML\n \n\n\n\n\nThis is plain text\n\n\nThis is italic text\n\n\nThis is bold text\n\n\n\n\n\nHeaders\n\n\nHeaders in markdown (much like HTML) come in various sizes.\n\n\nMarkdown Code\n \n\n\n# First level header\n## Second level header\n### Third level header\n#### Fourth level header\n##### Fifth level header\n###### Sixth level header\n\n\n\n\nIn this simple example you can see some headers have less hashes then others.\nThe more hashes added, the smaller the header will be, for example.\n\n\nRendered HTML\n \n\n\n\n\nFirst level header\n\n\n\nSecond level header\n\n\n\nThird level header\n\n\n\nFourth level header\n\n\n\nFifth level header\n\n\n\nSixth level header\n\n\n\n\n\n\nOrdered lists\n\n\nOrdered or numbered lists are fairly simple to do in markdown.\n\n\nMarkdown Code\n \n\n\n1. First item\n2. Second item\n3. Third item\n\n\n\n\nRendered HTML\n \n\n\n\n\n\n\nFirst item\n\n\nSecond item\n\n\nThird item\n\n\n\n\n\n\n\nUnordered lists\n\n\nUnordered lists are great for general lists that don't need to be done\nin specific steps.\n\n\nMarkdown Code\n \n\n\n* this\n* is\n* unordered\n\n\n\n\nRendered HTML\n \n\n\n\n\n\n\nthis\n\n\nis\n\n\nunordered\n\n\n\n\n\n\n\nNested lists\n\n\nMarkdown Code\n \n\n\n* Markdown lists are:\n    * awesome\n    * amazing\n    * really cool\n\n\n\n\nRendered HTML\n \n\n\n\n\n\n\nMarkdown lists are:\n\n\nawesome\n\n\namazing\n\n\nreally cool\n\n\n\n\n\n\n\n\n\n\n\nTables\n\n\nMarkdown Code\n \n\n\n| Table Header 1 | Table Header 2\n| --- | ---\n| Row 1, Column 1 | Row 1, Column 2\n| Row 2, Column 1 | Row 2, Column 2\n\n\n\n\nRendered HTML\n \n\n\n\n\n\n\n\n\n\n\nTable Header 1\n\n\nTable Header 2\n\n\n\n\n\n\n\n\n\n\nRow 1, Column 1\n\n\nRow 1, Column 2\n\n\n\n\n\n\nRow 2, Column 1\n\n\nRow 2, Column 2\n\n\n\n\n\n\n\n\n\n\n\nExternal URL's\n\n\nMarkdown Code\n \n\n\n[The OpenIndiana Website](http://www.openindiana.org)\n\nor (bare url's)\n\n\nhttp://www.openindiana.org\n\n\n\n\n\nRendered HTML\n \n\n\n\n\nThe OpenIndiana Website\n\n\nor (bare url's)\n\n\nhttp://www.openindiana.org\n\n\n\n\n\nInternal URL's\n\n\nInternal URL's operate a little differently than external URL's.\nSimply specify the relative path to the document.\nYou can even target a specific section of the document.\n\n\nMarkdown Code\n \n\n\n[The OpenIndiana Handbook - getting started](../handbook/getting-started.md)\n\n[Handbook - Appendix - Finding Help and Support](../handbook/appendix.md#finding-help-and-support)\n\n\n\n\nRendered HTML\n \n\n\n\n\nThe OpenIndiana Handbook - getting started\n\n\nHandbook - Appendix - Finding Help and Support\n\n\n\n\n\nImages\n\n\nSpecify the relative path to the image, just like an internal URL.\n\n\nMarkdown Code\n \n\n\n![openindiana logo](../Openindiana.png)\n\n\n\n\nRendered HTML\n \n\n\n\n\n\n\n\n\n\nBlock quotes\n\n\nMarkdown Code\n \n\n\n This is a block quote.\n\n And here is the 2nd line of the quote.\n\n\n\n\nRendered HTML\n \n\n\n\n\n\n\nThis is a block quote.\nAnd here is the 2nd line of the quote.\n\n\n\n\n\n\n\nCode blocks\n\n\nCode blocks are created by \"fencing\" the block of code using three (3) backtick marks.\nFor the purpose of syntax highlighting, you may also specify the programming language.\n\n\nMarkdown Code\n \n\n\n```markdown\n#!/bin/bash\n  if [ \"foo\" = \"foo\" ]; then\n    echo expression evaluated as true\n  fi\n```\n\n\n\nRendered HTML\n \n\n\n#!/bin/bash\n  if [ \nfoo\n = \nfoo\n ]; then\n    echo expression evaluated as true\n  fi\n\n\n\n\nIn-line code\n\n\nIn-line code is delineated with a single backtick mark at each end of the text.\n\n\nMarkdown Code\n \n\n\nHere is some plain Markdown followed by `a section of in-line code`.\n\n\n\nRendered HTML\n \n\n\n\n\nHere is some plain Markdown followed by \na section of in-line code\n.\n\n\n\n\n\nIn-line HTML\n\n\nIn addition to Markdown plain text markup, the Mkdocs frameworks also supports the inclusion of in-line HTML.\nFor example, sometimes you may find Markdown doesn't do quite what you need to do.\nIn these cases you may include some in-line HTML.\n\n\nMarkdown Code\n \n\n\n!-- This is a single line comment --\n\n\n\n!--\nThis comment\nspans multiple\nlines\n--\n\n\n\n\n\nComments are meant to be hidden, so they not rendered as HTML.\nYou'll likely find them very useful for adding TODO lists, or other useful notes.\nComments are primarily for internal use by members of the OpenIndiana documentation team.\n\n\nIn-line HTML - Advanced\n\n\nUsing HTML within Markdown tables\n\n\nMarkdown Code\n \n\n\n| Item | Description\n| --- | ---\n| Item 1 | This is a single line description\n| Item 2 | This is a multi line description with an unordered list:\nul\nli\nFirst item\n/li\nli\nSecond item\n/li\n/ul\nLets add another paragraph to that.\n/p\n And here it is.\n| Item 3 | We can also use multiple sentences within tables. Here is the second sentence. And here is a third.\n\n\n\n\nRendered HTML\n \n\n\n\n\n\n\n\n\n\n\nItem\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nItem 1\n\n\nThis is a single line description\n\n\n\n\n\n\nItem 2\n\n\nThis is a multi line description with an unordered list:\nFirst item\nSecond item\nLets add another paragraph to that.\n And here it is.\n\n\n\n\n\n\nItem 3\n\n\nWe can also use multiple sentences within tables. Here is the second sentence. And here is a third.\n\n\n\n\n\n\n\n\n\n\n\nBootstrap elements\n\n\nThe OpenIndiana Docs website uses a CSS theme derived from Bootstrap.\nMore specifically it uses the Spacelab theme from Bootswatch.\nThis means elements from the Bootstrap framework may be used in-line right along with Markdown text markup.\n\n\nIn many of the examples on this page, Bootstrap HTML \nwells\n were used.\n\n\nYou can find a complete list of available HTML elements here: \nhttps://bootswatch.com/spacelab/\n\n\nFor further information about how to use the Bootstrap framework, see here: \nhttp://www.w3schools.com/bootstrap/default.asp\n\n\nFont Awesome elements\n\n\nFont Awesome is a collection of web icons which may be used within the MkDocs framework.\n\n\nIn many of the examples on this page, Font Awesome icons were employed.\n\n\nFor further information about how to use Font Awesome web icons, see here: \nhttp://fontawesome.io/\n\n\nFurther reading\n\n\n\n\nThe Commonmark Markdown Standard\n\n\nRules for mdl (Markdown Linter)",
            "title": "Markdown Syntax Guide"
        },
        {
            "location": "/contrib/markdown/#markdown-syntax-guide",
            "text": "",
            "title": "Markdown Syntax Guide"
        },
        {
            "location": "/contrib/markdown/#italics-and-bold-text",
            "text": "Markdown Code    This is plain text\n\n_This is italic text_\n\n**This is bold text**  Rendered HTML     This is plain text  This is italic text  This is bold text",
            "title": "Italics and bold text"
        },
        {
            "location": "/contrib/markdown/#headers",
            "text": "Headers in markdown (much like HTML) come in various sizes.  Markdown Code    # First level header\n## Second level header\n### Third level header\n#### Fourth level header\n##### Fifth level header\n###### Sixth level header  In this simple example you can see some headers have less hashes then others.\nThe more hashes added, the smaller the header will be, for example.  Rendered HTML",
            "title": "Headers"
        },
        {
            "location": "/contrib/markdown/#ordered-lists",
            "text": "Ordered or numbered lists are fairly simple to do in markdown.  Markdown Code    1. First item\n2. Second item\n3. Third item  Rendered HTML      First item  Second item  Third item",
            "title": "Ordered lists"
        },
        {
            "location": "/contrib/markdown/#unordered-lists",
            "text": "Unordered lists are great for general lists that don't need to be done\nin specific steps.  Markdown Code    * this\n* is\n* unordered  Rendered HTML      this  is  unordered",
            "title": "Unordered lists"
        },
        {
            "location": "/contrib/markdown/#nested-lists",
            "text": "Markdown Code    * Markdown lists are:\n    * awesome\n    * amazing\n    * really cool  Rendered HTML      Markdown lists are:  awesome  amazing  really cool",
            "title": "Nested lists"
        },
        {
            "location": "/contrib/markdown/#tables",
            "text": "Markdown Code    | Table Header 1 | Table Header 2\n| --- | ---\n| Row 1, Column 1 | Row 1, Column 2\n| Row 2, Column 1 | Row 2, Column 2  Rendered HTML        Table Header 1  Table Header 2      Row 1, Column 1  Row 1, Column 2    Row 2, Column 1  Row 2, Column 2",
            "title": "Tables"
        },
        {
            "location": "/contrib/markdown/#external-urls",
            "text": "Markdown Code    [The OpenIndiana Website](http://www.openindiana.org)\n\nor (bare url's) http://www.openindiana.org   Rendered HTML     The OpenIndiana Website  or (bare url's)  http://www.openindiana.org",
            "title": "External URL's"
        },
        {
            "location": "/contrib/markdown/#internal-urls",
            "text": "Internal URL's operate a little differently than external URL's.\nSimply specify the relative path to the document.\nYou can even target a specific section of the document.  Markdown Code    [The OpenIndiana Handbook - getting started](../handbook/getting-started.md)\n\n[Handbook - Appendix - Finding Help and Support](../handbook/appendix.md#finding-help-and-support)  Rendered HTML     The OpenIndiana Handbook - getting started  Handbook - Appendix - Finding Help and Support",
            "title": "Internal URL's"
        },
        {
            "location": "/contrib/markdown/#images",
            "text": "Specify the relative path to the image, just like an internal URL.  Markdown Code    ![openindiana logo](../Openindiana.png)  Rendered HTML",
            "title": "Images"
        },
        {
            "location": "/contrib/markdown/#block-quotes",
            "text": "Markdown Code     This is a block quote.  And here is the 2nd line of the quote.  Rendered HTML      This is a block quote.\nAnd here is the 2nd line of the quote.",
            "title": "Block quotes"
        },
        {
            "location": "/contrib/markdown/#code-blocks",
            "text": "Code blocks are created by \"fencing\" the block of code using three (3) backtick marks.\nFor the purpose of syntax highlighting, you may also specify the programming language.  Markdown Code    ```markdown\n#!/bin/bash\n  if [ \"foo\" = \"foo\" ]; then\n    echo expression evaluated as true\n  fi\n```  Rendered HTML    #!/bin/bash\n  if [  foo  =  foo  ]; then\n    echo expression evaluated as true\n  fi",
            "title": "Code blocks"
        },
        {
            "location": "/contrib/markdown/#in-line-code",
            "text": "In-line code is delineated with a single backtick mark at each end of the text.  Markdown Code    Here is some plain Markdown followed by `a section of in-line code`.  Rendered HTML     Here is some plain Markdown followed by  a section of in-line code .",
            "title": "In-line code"
        },
        {
            "location": "/contrib/markdown/#in-line-html",
            "text": "In addition to Markdown plain text markup, the Mkdocs frameworks also supports the inclusion of in-line HTML.\nFor example, sometimes you may find Markdown doesn't do quite what you need to do.\nIn these cases you may include some in-line HTML.  Markdown Code    !-- This is a single line comment --  !--\nThis comment\nspans multiple\nlines\n--   Comments are meant to be hidden, so they not rendered as HTML.\nYou'll likely find them very useful for adding TODO lists, or other useful notes.\nComments are primarily for internal use by members of the OpenIndiana documentation team.",
            "title": "In-line HTML"
        },
        {
            "location": "/contrib/markdown/#in-line-html-advanced",
            "text": "",
            "title": "In-line HTML - Advanced"
        },
        {
            "location": "/contrib/markdown/#using-html-within-markdown-tables",
            "text": "Markdown Code    | Item | Description\n| --- | ---\n| Item 1 | This is a single line description\n| Item 2 | This is a multi line description with an unordered list: ul li First item /li li Second item /li /ul Lets add another paragraph to that. /p  And here it is.\n| Item 3 | We can also use multiple sentences within tables. Here is the second sentence. And here is a third.  Rendered HTML        Item  Description      Item 1  This is a single line description    Item 2  This is a multi line description with an unordered list: First item Second item Lets add another paragraph to that.  And here it is.    Item 3  We can also use multiple sentences within tables. Here is the second sentence. And here is a third.",
            "title": "Using HTML within Markdown tables"
        },
        {
            "location": "/contrib/markdown/#bootstrap-elements",
            "text": "The OpenIndiana Docs website uses a CSS theme derived from Bootstrap.\nMore specifically it uses the Spacelab theme from Bootswatch.\nThis means elements from the Bootstrap framework may be used in-line right along with Markdown text markup.  In many of the examples on this page, Bootstrap HTML  wells  were used.  You can find a complete list of available HTML elements here:  https://bootswatch.com/spacelab/  For further information about how to use the Bootstrap framework, see here:  http://www.w3schools.com/bootstrap/default.asp",
            "title": "Bootstrap elements"
        },
        {
            "location": "/contrib/markdown/#font-awesome-elements",
            "text": "Font Awesome is a collection of web icons which may be used within the MkDocs framework.  In many of the examples on this page, Font Awesome icons were employed.  For further information about how to use Font Awesome web icons, see here:  http://fontawesome.io/",
            "title": "Font Awesome elements"
        },
        {
            "location": "/contrib/markdown/#further-reading",
            "text": "The Commonmark Markdown Standard  Rules for mdl (Markdown Linter)",
            "title": "Further reading"
        },
        {
            "location": "/contrib/git/",
            "text": "Git Usage Guide\n\n\nIntroduction to Version Control\n\n\nAt the most basic level, a version control system is used to help automate the following tasks:\n\n\n\n\nStore files and folders in a centralized master repository.\n\n\nTracks changes made to files and files.\n\n\nAllows multiple people to edit the same set of files.\n\n\nAllows multiple people to share their changes with others.\n\n\nAllows you to determine who made a particular change.\n\n\nAllows you to roll back changes as needed.\n\n\n\n\nNow, you might be thinking at this point: \nThat's all very nice, but what does it all really mean?_\n\n\nI'm so glad you asked, read on and I'll do my best to break it all down for you.\n\n\nIntroduction to Git\n\n\nGit is a distributed version control system written by Linus (\nthe terrible\n) Torvalds, the \nBDFL\n of the Linux operating system.\nFortunately, Git isn't terrible at all.\nIn fact it's one of the best version control systems ever.\n\n\nWhile Git is quite powerful and provides many different capabilities (\nsome of which may be a little intimidating at first\n), only a small subset of commands are actually required for working with OpenIndiana Docs.\n\n\nRead on to learn more....\n\n\nGit Vocabulary - Repositories\n\n\nBefore diving into the mechanics of what Git does, or even how to use it, let's review some basic Git vocabulary as it pertains to working with Git repositories.\n\n\n\n\n\n\n\n\nTerm\n\n\nDefinition\n\n\n\n\n\n\n\n\n\n\nUpstream Repository\n\n\nThe \nUpstream\n repository is the repository under the direct control of the project. It contains the \nGolden Copy\n of all the files and folders held in Git version control. Nobody can make changes to this repository, unless the project allows it.\n\n\n\n\n\n\nFork\n\n\nBefore contributing to a project using Git, you first need to make a server side copy of the upstream repository. When you do this, you are \nForking\n the upstream repository. This copy of the repository is under your control. When you submit changes, they are stored in this copy of the upstream repository.\n\n\n\n\n\n\nClone\n\n\nBefore editing any files, you first need to \nClone\n your forked copy of the upstream repository. Cloning creates a local working copy of the files and folders which resides on your computer. When you make changes, you are making changes to your cloned copy of the files and folders. You may locally clone the repository on as many computers as you wish.\n\n\n\n\n\n\n\n\nGit Vocabulary - Commands\n\n\nNow let's review some of the most commonly used Git commands and how you might use them.\n\n\n\n\n\n\n\n\nCommand\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\ngit clone\n\n\nIn the previous section, we already mentioned a little about clones and what they are. Therefore, you would use the \ngit clone\n command to create your editable local working copy of the files and folders.\n\n\n\n\n\n\ngit status\n\n\nThe \ngit status\n command shows you whether any local files have been changed.\n\n\n\n\n\n\ngit diff\n\n\nThe \ngit diff\n command shows you precisely what changed, for each local file which changed.\n\n\n\n\n\n\ngit add\n\n\nThe \ngit add\n command lets you stage local files so their changes may be recorded locally by Git.\n\n\n\n\n\n\ngit commit\n\n\nThe \ngit commit\n command allows you to locally record changes to staged local files and even include a nice little message describing your changes.\n\n\n\n\n\n\ngit pull\n\n\nThe \ngit pull\n command allows you to pull in (merge) changes originating from a remote repository (either your fork or the upstream repository).\n\n\n\n\n\n\ngit push\n\n\nThe \ngit push\n command lets you push locally recorded changes (your commits) up to your forked copy of the upstream repository.\n\n\n\n\n\n\n\n\nGit Pull Requests\n\n\nNow that we've explained several of the most basic Git commands, you might be left thinking:\n\n\nGreat, so how do changes which now reside in my forked copy of the repository, find their way to the upstream repository?\n\n\nThat's an excellent question; I am so happy you asked.\nThe answer is of course, by submitting a \npull request\n.\n\n\nWhen you submit a \npull request\n you are \nrequesting\n the differences found in your forked copy of the upstream repository to be \npulled\n into the upstream repository itself.\nAt this point other members of project will perform a quality assurance review of your changes.\nIf your changes are accepted by the project, they will be pulled (merged) into the upstream repository.\n\n\nGit Usage Scenario\n\n\nGit does not limit you to working on a single computer.\nIn fact, you can work with the very same set of files using multiple computers.\nTwo different git commands make this possible.\n\n\n\n\ngit push\n\n\ngit pull\n\n\n\n\nSound pretty simple huh?\nWell that's because it is.\n\n\nHere is a practical examples of how you might use Git:\n\n\nScenario 1\n\n\nYou're at home in the morning drinking your coffee, wearing your favorite bunny slippers, and busily working on the computer.\nMorning is your most creative time so you've made lots of changes to your files.\n\n\nWhen finished, you do the following:\n\n\n\n\nView a list of changed files using \ngit status\n.\n\n\nView the file differences using \ngit diff\n.\n\n\nLocally stage changed files for commit using \ngit add \nfile name\n or using \ngit add .\n to stage all changed files..\n\n\nLocally record your changes using \ngit commit -m \nmessage\n.\n\n\nSafeguard your local commits by pushing them up to your forked copy of the upstream repository using the \ngit push\n command.\n\n\n\n\nScenario 2\n\n\nNow it's time to go to work and while on lunch break you want to make some more edits to your files.\nThat's simple enough, perform the following steps.\n\n\nIf the local clone already exists:\n\n\n\n\nExecute the \ngit pull\n command to pull in (merge) the changes you made earlier in the morning.\n\n\n\n\nIf the clone does not already exist:\n\n\n\n\nPull down a local working copy of your forked upstream repository using the command: \ngit clone \nURL of fork\n\n\n\n\nNow let's throw a little twist to this scenario.\n\n\nYou have just received an email from another member of the project development team.\nIn the email contains a note advising you of a completed (accepted and merged) pull request relating to the upstream repository.\nNo problem, you'll simply do the following:\n\n\n\n\nPull in (merge) those upstream changes into your local working copy using the command \ngit pull upstream master\n.\n\n\n\n\nNow your local working copy contains all the changes from both your fork as well the upstream repository.\n\n\nWhen you're finished making changes, you'll safeguard those changes with another cycle of  \nstage\n, \ncommit\n, and \npush\n.\nAnd whenever you're ready, submit a \npull request\n to have the differences found in your fork pulled into the upstream repository.\n\n\nNow that wasn't so bad was it?\n\n\nInstalling Git\n\n\nInstalling Git on OpenIndiana Hipster is simple.\n\n\npkg install git\n\n\nAfter Git is installed, be sure to configure your name and email address.\n\n\nFor further details about configuring GIT, see: \nhttps://help.github.com/articles/set-up-git/\n\n\nFurther Reading\n\n\nIf you're really excited about Git and desire to become a Git Ninja, here is a great tutorial to further your education: \nhttp://rypress.com/tutorials/git/index\n\n\nThere is also the book \nPro Git\n which is available for free under a Creative Commons license.",
            "title": "Git Usage Guide"
        },
        {
            "location": "/contrib/git/#git-usage-guide",
            "text": "",
            "title": "Git Usage Guide"
        },
        {
            "location": "/contrib/git/#introduction-to-version-control",
            "text": "At the most basic level, a version control system is used to help automate the following tasks:   Store files and folders in a centralized master repository.  Tracks changes made to files and files.  Allows multiple people to edit the same set of files.  Allows multiple people to share their changes with others.  Allows you to determine who made a particular change.  Allows you to roll back changes as needed.   Now, you might be thinking at this point:  That's all very nice, but what does it all really mean?_  I'm so glad you asked, read on and I'll do my best to break it all down for you.",
            "title": "Introduction to Version Control"
        },
        {
            "location": "/contrib/git/#introduction-to-git",
            "text": "Git is a distributed version control system written by Linus ( the terrible ) Torvalds, the  BDFL  of the Linux operating system.\nFortunately, Git isn't terrible at all.\nIn fact it's one of the best version control systems ever.  While Git is quite powerful and provides many different capabilities ( some of which may be a little intimidating at first ), only a small subset of commands are actually required for working with OpenIndiana Docs.  Read on to learn more....",
            "title": "Introduction to Git"
        },
        {
            "location": "/contrib/git/#git-vocabulary-repositories",
            "text": "Before diving into the mechanics of what Git does, or even how to use it, let's review some basic Git vocabulary as it pertains to working with Git repositories.     Term  Definition      Upstream Repository  The  Upstream  repository is the repository under the direct control of the project. It contains the  Golden Copy  of all the files and folders held in Git version control. Nobody can make changes to this repository, unless the project allows it.    Fork  Before contributing to a project using Git, you first need to make a server side copy of the upstream repository. When you do this, you are  Forking  the upstream repository. This copy of the repository is under your control. When you submit changes, they are stored in this copy of the upstream repository.    Clone  Before editing any files, you first need to  Clone  your forked copy of the upstream repository. Cloning creates a local working copy of the files and folders which resides on your computer. When you make changes, you are making changes to your cloned copy of the files and folders. You may locally clone the repository on as many computers as you wish.",
            "title": "Git Vocabulary - Repositories"
        },
        {
            "location": "/contrib/git/#git-vocabulary-commands",
            "text": "Now let's review some of the most commonly used Git commands and how you might use them.     Command  Description      git clone  In the previous section, we already mentioned a little about clones and what they are. Therefore, you would use the  git clone  command to create your editable local working copy of the files and folders.    git status  The  git status  command shows you whether any local files have been changed.    git diff  The  git diff  command shows you precisely what changed, for each local file which changed.    git add  The  git add  command lets you stage local files so their changes may be recorded locally by Git.    git commit  The  git commit  command allows you to locally record changes to staged local files and even include a nice little message describing your changes.    git pull  The  git pull  command allows you to pull in (merge) changes originating from a remote repository (either your fork or the upstream repository).    git push  The  git push  command lets you push locally recorded changes (your commits) up to your forked copy of the upstream repository.",
            "title": "Git Vocabulary - Commands"
        },
        {
            "location": "/contrib/git/#git-pull-requests",
            "text": "Now that we've explained several of the most basic Git commands, you might be left thinking:  Great, so how do changes which now reside in my forked copy of the repository, find their way to the upstream repository?  That's an excellent question; I am so happy you asked.\nThe answer is of course, by submitting a  pull request .  When you submit a  pull request  you are  requesting  the differences found in your forked copy of the upstream repository to be  pulled  into the upstream repository itself.\nAt this point other members of project will perform a quality assurance review of your changes.\nIf your changes are accepted by the project, they will be pulled (merged) into the upstream repository.",
            "title": "Git Pull Requests"
        },
        {
            "location": "/contrib/git/#git-usage-scenario",
            "text": "Git does not limit you to working on a single computer.\nIn fact, you can work with the very same set of files using multiple computers.\nTwo different git commands make this possible.   git push  git pull   Sound pretty simple huh?\nWell that's because it is.  Here is a practical examples of how you might use Git:",
            "title": "Git Usage Scenario"
        },
        {
            "location": "/contrib/git/#scenario-1",
            "text": "You're at home in the morning drinking your coffee, wearing your favorite bunny slippers, and busily working on the computer.\nMorning is your most creative time so you've made lots of changes to your files.  When finished, you do the following:   View a list of changed files using  git status .  View the file differences using  git diff .  Locally stage changed files for commit using  git add  file name  or using  git add .  to stage all changed files..  Locally record your changes using  git commit -m  message .  Safeguard your local commits by pushing them up to your forked copy of the upstream repository using the  git push  command.",
            "title": "Scenario 1"
        },
        {
            "location": "/contrib/git/#scenario-2",
            "text": "Now it's time to go to work and while on lunch break you want to make some more edits to your files.\nThat's simple enough, perform the following steps.  If the local clone already exists:   Execute the  git pull  command to pull in (merge) the changes you made earlier in the morning.   If the clone does not already exist:   Pull down a local working copy of your forked upstream repository using the command:  git clone  URL of fork   Now let's throw a little twist to this scenario.  You have just received an email from another member of the project development team.\nIn the email contains a note advising you of a completed (accepted and merged) pull request relating to the upstream repository.\nNo problem, you'll simply do the following:   Pull in (merge) those upstream changes into your local working copy using the command  git pull upstream master .   Now your local working copy contains all the changes from both your fork as well the upstream repository.  When you're finished making changes, you'll safeguard those changes with another cycle of   stage ,  commit , and  push .\nAnd whenever you're ready, submit a  pull request  to have the differences found in your fork pulled into the upstream repository.  Now that wasn't so bad was it?",
            "title": "Scenario 2"
        },
        {
            "location": "/contrib/git/#installing-git",
            "text": "Installing Git on OpenIndiana Hipster is simple.  pkg install git  After Git is installed, be sure to configure your name and email address.  For further details about configuring GIT, see:  https://help.github.com/articles/set-up-git/",
            "title": "Installing Git"
        },
        {
            "location": "/contrib/git/#further-reading",
            "text": "If you're really excited about Git and desire to become a Git Ninja, here is a great tutorial to further your education:  http://rypress.com/tutorials/git/index  There is also the book  Pro Git  which is available for free under a Creative Commons license.",
            "title": "Further Reading"
        }
    ]
}